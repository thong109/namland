// This file is auto-generated by @hey-api/openapi-ts

import type { CancelablePromise } from './core/CancelablePromise';
import { OpenAPI } from './core/OpenAPI';
import { request as __request } from './core/request';
import type {
  DeleteEcomEcomFindAgentDeleteData,
  DeleteEcomEcomFindAgentDeleteResponse,
  DeleteEcomEcomVatConfigDeleteByIdData,
  DeleteEcomEcomVatConfigDeleteByIdResponse,
  DeleteEcomKeywordBlacklistDeleteAllData,
  DeleteEcomKeywordBlacklistDeleteAllResponse,
  DeleteEcomKeywordBlacklistDeleteData,
  DeleteEcomKeywordBlacklistDeleteResponse,
  DeleteEcomListingDeleteData,
  DeleteEcomListingDeleteResponse,
  DeleteEcomListingStaffDeleteByStaffData,
  DeleteEcomListingStaffDeleteByStaffResponse,
  DeleteEcomMobileV1EcomAccountDeleteAccountData,
  DeleteEcomMobileV1EcomAccountDeleteAccountResponse,
  DeleteEcomUnitDeleteData,
  DeleteEcomUnitDeleteResponse,
  DeleteEcomV1EcomAccountRemoveSocialData,
  DeleteEcomV1EcomAccountRemoveSocialResponse,
  DeleteEventDeleteData,
  DeleteEventDeleteResponse,
  DeleteProjectDeleteProject360AlbumData,
  DeleteProjectDeleteProject360AlbumResponse,
  DeleteProjectDeleteProjectBlockData,
  DeleteProjectDeleteProjectBlockResponse,
  DeleteProjectDeleteProjectBrochureData,
  DeleteProjectDeleteProjectBrochureResponse,
  DeleteProjectDeleteProjectData,
  DeleteProjectDeleteProjectGalleryData,
  DeleteProjectDeleteProjectGalleryResponse,
  DeleteProjectDeleteProjectMasterPlanData,
  DeleteProjectDeleteProjectMasterPlanResponse,
  DeleteProjectDeleteProjectMoreInfoData,
  DeleteProjectDeleteProjectMoreInfoResponse,
  DeleteProjectDeleteProjectPolicyData,
  DeleteProjectDeleteProjectPolicyResponse,
  DeleteProjectDeleteProjectResponse,
  DeleteProjectDeleteProjectSlideData,
  DeleteProjectDeleteProjectSlideResponse,
  DeletePropertyDeleteData,
  DeletePropertyDeleteResponse,
  GetAccessGroupGetByIdData,
  GetAccessGroupGetByIdResponse,
  GetAccessGroupGetDetailByIdData,
  GetAccessGroupGetDetailByIdResponse,
  GetEcomAdBannerGetAdBannerByPositionData,
  GetEcomAdBannerGetAdBannerByPositionResponse,
  GetEcomAdBannerGetDetailForEditData,
  GetEcomAdBannerGetDetailForEditResponse,
  GetEcomConfigPaymentGetData,
  GetEcomConfigPaymentGetResponse,
  GetEcomEcomAccountGetAutoCompleteAutocompleteData,
  GetEcomEcomAccountGetAutoCompleteAutocompleteResponse,
  GetEcomEcomAccountGetAutoCompleteCustomerData,
  GetEcomEcomAccountGetAutoCompleteCustomerResponse,
  GetEcomEcomAccountGetByIdData,
  GetEcomEcomAccountGetByIdPublishData,
  GetEcomEcomAccountGetByIdPublishResponse,
  GetEcomEcomAccountGetByIdResponse,
  GetEcomEcomAccountGetDetailByIdData,
  GetEcomEcomAccountGetDetailByIdResponse,
  GetEcomEcomAccountHomeGetOurAgentsResponse,
  GetEcomEcomAccountMeData,
  GetEcomEcomAccountMeResponse,
  GetEcomEcomArticleGetByIdData,
  GetEcomEcomArticleGetByIdResponse,
  GetEcomEcomArticleGetDetailByIdData,
  GetEcomEcomArticleGetDetailByIdResponse,
  GetEcomEcomCashAdvanceStaffGetByQueryData,
  GetEcomEcomCashAdvanceStaffGetByQueryResponse,
  GetEcomEcomCashAdvanceStaffGetReceiptByQueryData,
  GetEcomEcomCashAdvanceStaffGetReceiptByQueryResponse,
  GetEcomEcomConfigGetAppSettingsResponse,
  GetEcomEcomConfigGetListZoneData,
  GetEcomEcomConfigGetListZoneResponse,
  GetEcomEcomConfigGetZoneByKeyData,
  GetEcomEcomConfigGetZoneByKeyResponse,
  GetEcomEcomContactGetByIdData,
  GetEcomEcomContactGetByIdResponse,
  GetEcomEcomFindAgentGetData,
  GetEcomEcomFindAgentGetListResponse,
  GetEcomEcomFindAgentGetResponse,
  GetEcomEcomInquiryGetByIdData,
  GetEcomEcomInquiryGetByIdResponse,
  GetEcomEcomInquiryInquirySummaryData,
  GetEcomEcomInquiryInquirySummaryMyTicketData,
  GetEcomEcomInquiryInquirySummaryMyTicketResponse,
  GetEcomEcomInquiryInquirySummaryResponse,
  GetEcomEcomListingMemberPackageGetMemberPackageProfileData,
  GetEcomEcomListingMemberPackageGetMemberPackageProfileResponse,
  GetEcomEcomListingMemberPackageGetMyTransactionPackageData,
  GetEcomEcomListingMemberPackageGetMyTransactionPackageResponse,
  GetEcomEcomListingMemberPackageGetMyTransactionPushData,
  GetEcomEcomListingMemberPackageGetMyTransactionPushResponse,
  GetEcomEcomListingMemberPackageGetTransactionPackageForStaffData,
  GetEcomEcomListingMemberPackageGetTransactionPackageForStaffResponse,
  GetEcomEcomListingMemberPackageGetTransactionPushForStaffData,
  GetEcomEcomListingMemberPackageGetTransactionPushForStaffResponse,
  GetEcomEcomListingPackageGetByQueryData,
  GetEcomEcomListingPackageGetByQueryResponse,
  GetEcomEcomListingPackageGetDetailData,
  GetEcomEcomListingPackageGetDetailResponse,
  GetEcomEcomListingPackageGetListData,
  GetEcomEcomListingPackageGetListResponse,
  GetEcomEcomListingPushGetByQueryData,
  GetEcomEcomListingPushGetByQueryResponse,
  GetEcomEcomListingPushGetDetailData,
  GetEcomEcomListingPushGetDetailResponse,
  GetEcomEcomNotificationCountUnreadData,
  GetEcomEcomNotificationCountUnreadResponse,
  GetEcomEcomPlaceGetDistrictData,
  GetEcomEcomPlaceGetDistrictResponse,
  GetEcomEcomPlaceGetProvinceResponse,
  GetEcomEcomPlaceGetWardData,
  GetEcomEcomPlaceGetWardResponse,
  GetEcomEcomProjectGetData,
  GetEcomEcomProjectGetProjectBrochureByIdData,
  GetEcomEcomProjectGetProjectBrochureByIdResponse,
  GetEcomEcomProjectGetProjectMasterPlanByIdData,
  GetEcomEcomProjectGetProjectMasterPlanByIdResponse,
  GetEcomEcomProjectGetResponse,
  GetEcomEcomProjectMigrateData,
  GetEcomEcomProjectMigrateResponse,
  GetEcomEcomReviewGetByIdData,
  GetEcomEcomReviewGetByIdResponse,
  GetEcomEcomReviewPublicSummaryReviewData,
  GetEcomEcomReviewPublicSummaryReviewResponse,
  GetEcomEcomSearchLocationGetAutoCompleteAutocompleteData,
  GetEcomEcomSearchLocationGetAutoCompleteAutocompleteResponse,
  GetEcomEcomSearchLocationGetByQueryData,
  GetEcomEcomSearchLocationGetByQueryResponse,
  GetEcomEcomSearchLocationGetDetailForEditData,
  GetEcomEcomSearchLocationGetDetailForEditResponse,
  GetEcomEcomSearchLocationGetListForSearchData,
  GetEcomEcomSearchLocationGetListForSearchResponse,
  GetEcomEcomSearchLocationGetTypeMaterialPlaceResponse,
  GetEcomEcomTopupStaffGetByQueryData,
  GetEcomEcomTopupStaffGetByQueryResponse,
  GetEcomEcomTopupUserGetByQueryData,
  GetEcomEcomTopupUserGetByQueryResponse,
  GetEcomEcomTransactionGetAllTransactionData,
  GetEcomEcomTransactionGetAllTransactionResponse,
  GetEcomEcomTransactionGetMyTransactionData,
  GetEcomEcomTransactionGetMyTransactionResponse,
  GetEcomEcomTransactionGetOrderByIdData,
  GetEcomEcomTransactionGetOrderByIdResponse,
  GetEcomEcomVatConfigGetCurrentResponse,
  GetEcomEcomVatConfigGetData,
  GetEcomEcomVatConfigGetResponse,
  GetEcomInteriorGetListResponse,
  GetEcomKeywordBlacklistGetAllData,
  GetEcomKeywordBlacklistGetAllResponse,
  GetEcomKeywordBlacklistGetListsResponse,
  GetEcomLaGetByQueryData,
  GetEcomLaGetByQueryResponse,
  GetEcomLaGetDetailData,
  GetEcomLaGetDetailResponse,
  GetEcomListingAmenitiesGetDetailForEditData,
  GetEcomListingAmenitiesGetDetailForEditResponse,
  GetEcomListingAmenitiesGetListData,
  GetEcomListingAmenitiesGetListResponse,
  GetEcomListingAmenitiesMigrationAmenitiesResponse,
  GetEcomListingCategoryGetByIdData,
  GetEcomListingCategoryGetByIdResponse,
  GetEcomListingCategoryGetListData,
  GetEcomListingCategoryGetListResponse,
  GetEcomListingCategoryUpdateStatusData,
  GetEcomListingCategoryUpdateStatusResponse,
  GetEcomListingGetDetailByQueryData,
  GetEcomListingGetDetailByQueryResponse,
  GetEcomListingGetDetailForEditData,
  GetEcomListingGetDetailForEditResponse,
  GetEcomListingGetDetailMyListingByQueryData,
  GetEcomListingGetDetailMyListingByQueryResponse,
  GetEcomListingGetLocationNearByListingData,
  GetEcomListingGetLocationNearByListingResponse,
  GetEcomListingGetSimpleData,
  GetEcomListingGetSimpleResponse,
  GetEcomListingGetUnitPriceCheckByListingData,
  GetEcomListingGetUnitPriceCheckByListingResponse,
  GetEcomListingMasterDataGetAmenitiesData,
  GetEcomListingMasterDataGetAmenitiesResponse,
  GetEcomListingMasterDataGetInteriorsResponse,
  GetEcomListingMasterDataGetViewsResponse,
  GetEcomListingPreviewListingByIdData,
  GetEcomListingPreviewListingByIdResponse,
  GetEcomListingStaffGetDetailForEditByStaffData,
  GetEcomListingStaffGetDetailForEditByStaffResponse,
  GetEcomListingViewBalconyGetListResponse,
  GetEcomListingViewGetListResponse,
  GetEcomListingViewMigrationViewResponse,
  GetEcomLogoBannerGetAllResponse,
  GetEcomLogoBannerGetDetailForEditData,
  GetEcomLogoBannerGetDetailForEditResponse,
  GetEcomOsaGetByQueryData,
  GetEcomOsaGetByQueryResponse,
  GetEcomOsaGetDetailData,
  GetEcomOsaGetDetailResponse,
  GetEcomOtpGetOtpByQueryData,
  GetEcomOtpGetOtpByQueryResponse,
  GetEcomOwnerGetDetailEditData,
  GetEcomOwnerGetDetailEditResponse,
  GetEcomOwnerGetDetailResponse,
  GetEcomOwnerInquiryGetAllData,
  GetEcomOwnerInquiryGetAllResponse,
  GetEcomOwnerInquiryGetByQueryData,
  GetEcomOwnerInquiryGetByQueryForClientData,
  GetEcomOwnerInquiryGetByQueryForClientResponse,
  GetEcomOwnerInquiryGetByQueryResponse,
  GetEcomOwnerInquiryGetDetailData,
  GetEcomOwnerInquiryGetDetailForClientData,
  GetEcomOwnerInquiryGetDetailForClientResponse,
  GetEcomOwnerInquiryGetDetailResponse,
  GetEcomPayMePaymentQueryData,
  GetEcomPayMePaymentQueryResponse,
  GetEcomUnitGetAllData,
  GetEcomUnitGetAllResponse,
  GetEcomUnitGetAutoCompleteAutocompleteData,
  GetEcomUnitGetAutoCompleteAutocompleteResponse,
  GetEcomUnitGetDetailData,
  GetEcomUnitGetDetailResponse,
  GetEcomUnitGetListByProjectIdData,
  GetEcomUnitGetListByProjectIdResponse,
  GetEcomV1EcomInquiryGetConversationData,
  GetEcomV1EcomInquiryGetConversationResponse,
  GetEventGetByIdData,
  GetEventGetByIdResponse,
  GetGoogleMapsAutocompleteData,
  GetGoogleMapsAutocompleteResponse,
  GetGoogleMapsLocationGeocodeData,
  GetGoogleMapsLocationGeocodeResponse,
  GetGoogleMapsNearByResponse,
  GetGoogleMapsPlaceDetailData,
  GetGoogleMapsPlaceDetailResponse,
  GetHealthResponse,
  GetHealthsResponse,
  GetPingDeleteIndexResponse,
  GetPingMigrationResponse,
  GetProjectGetProject360AlbumByIdData,
  GetProjectGetProject360AlbumByIdResponse,
  GetProjectGetProjectBlockByIdData,
  GetProjectGetProjectBlockByIdResponse,
  GetProjectGetProjectBrochureByIdData,
  GetProjectGetProjectBrochureByIdResponse,
  GetProjectGetProjectByIdData,
  GetProjectGetProjectByIdResponse,
  GetProjectGetProjectGalleryByIdData,
  GetProjectGetProjectGalleryByIdResponse,
  GetProjectGetProjectMasterPlanByIdData,
  GetProjectGetProjectMasterPlanByIdResponse,
  GetProjectGetProjectMoreInfoByIdData,
  GetProjectGetProjectMoreInfoByIdResponse,
  GetProjectGetProjectPolicyByIdData,
  GetProjectGetProjectPolicyByIdResponse,
  GetProjectGetProjectSlideByIdData,
  GetProjectGetProjectSlideByIdResponse,
  GetPropertyGetByIdData,
  GetPropertyGetByIdResponse,
  GetUploadGetDocumentFileData,
  GetUploadGetDocumentFileResponse,
  PostAccessGroupCreateData,
  PostAccessGroupCreateResponse,
  PostAccessGroupGetAllData,
  PostAccessGroupGetAllResponse,
  PostAccessGroupGetByQueryData,
  PostAccessGroupGetByQueryResponse,
  PostCloudSchedulerExpiryListingScheduleJobData,
  PostCloudSchedulerExpiryListingScheduleJobResponse,
  PostCloudSchedulerPublishListingScheduleJobResponse,
  PostCloudTaskFetchListingLocationNearByData,
  PostCloudTaskFetchListingLocationNearByResponse,
  PostCloudTaskNotificationContactUsData,
  PostCloudTaskNotificationContactUsResponse,
  PostCloudTaskNotificationCreateInquiryData,
  PostCloudTaskNotificationCreateInquiryResponse,
  PostCloudTaskNotificationCreateListingSuccessData,
  PostCloudTaskNotificationCreateListingSuccessResponse,
  PostCloudTaskNotificationCreateSiteVisitData,
  PostCloudTaskNotificationCreateSiteVisitResponse,
  PostCloudTaskNotificationListingApprovedData,
  PostCloudTaskNotificationListingApprovedResponse,
  PostCloudTaskNotificationListingExpiredData,
  PostCloudTaskNotificationListingExpiredResponse,
  PostCloudTaskNotificationListingRejectedData,
  PostCloudTaskNotificationListingRejectedResponse,
  PostCloudTaskNotificationTakeDownListingData,
  PostCloudTaskNotificationTakeDownListingResponse,
  PostCloudTaskTestTaskData,
  PostCloudTaskTestTaskResponse,
  PostDeviceInsertOrUpdateDevicesData,
  PostDeviceInsertOrUpdateDevicesResponse,
  PostEcomAdBannerCreateData,
  PostEcomAdBannerCreateResponse,
  PostEcomAdBannerGetByQueryData,
  PostEcomAdBannerGetByQueryResponse,
  PostEcomConfigPaymentGetAllData,
  PostEcomConfigPaymentGetAllResponse,
  PostEcomConfigPaymentGetListData,
  PostEcomConfigPaymentGetListResponse,
  PostEcomConfigPaymentMigrationPaymentData,
  PostEcomConfigPaymentMigrationPaymentResponse,
  PostEcomConfigPaymentUpdateData,
  PostEcomConfigPaymentUpdateResponse,
  PostEcomConversationCreateResponse,
  PostEcomConversationGetByQueryData,
  PostEcomConversationGetByQueryResponse,
  PostEcomEcomAccountActiveData,
  PostEcomEcomAccountActiveResponse,
  PostEcomEcomAccountApproveByIdData,
  PostEcomEcomAccountApproveByIdResponse,
  PostEcomEcomAccountChangePasswordData,
  PostEcomEcomAccountChangePasswordResponse,
  PostEcomEcomAccountCreateData,
  PostEcomEcomAccountCreateResponse,
  PostEcomEcomAccountExportMemberData,
  PostEcomEcomAccountExportMemberResponse,
  PostEcomEcomAccountGetAllData,
  PostEcomEcomAccountGetAllResponse,
  PostEcomEcomAccountGetByQueryData,
  PostEcomEcomAccountGetByQueryResponse,
  PostEcomEcomAccountGetFilterCreatedAtData,
  PostEcomEcomAccountGetFilterCreatedAtResponse,
  PostEcomEcomAccountGetStaffByQueryData,
  PostEcomEcomAccountGetStaffByQueryResponse,
  PostEcomEcomAccountLoginData,
  PostEcomEcomAccountLoginResponse,
  PostEcomEcomAccountRegisterData,
  PostEcomEcomAccountRegisterResponse,
  PostEcomEcomAccountRejectData,
  PostEcomEcomAccountRejectResponse,
  PostEcomEcomAccountRequestOtpData,
  PostEcomEcomAccountRequestOtpResponse,
  PostEcomEcomAccountSetNewPasswordData,
  PostEcomEcomAccountSetNewPasswordResponse,
  PostEcomEcomAccountShowOnHomeData,
  PostEcomEcomAccountShowOnHomeResponse,
  PostEcomEcomAccountSubmitOtpData,
  PostEcomEcomAccountSubmitOtpResponse,
  PostEcomEcomAccountUpdateCorporateData,
  PostEcomEcomAccountUpdateCorporateResponse,
  PostEcomEcomAccountUpdateLanguageByLangData,
  PostEcomEcomAccountUpdateLanguageByLangResponse,
  PostEcomEcomAccountUpdateMemberData,
  PostEcomEcomAccountUpdateMemberResponse,
  PostEcomEcomAccountUpdateOwnAvatarData,
  PostEcomEcomAccountUpdateOwnAvatarResponse,
  PostEcomEcomAccountUpdateOwnMemberData,
  PostEcomEcomAccountUpdateOwnMemberResponse,
  PostEcomEcomAccountUpdateStatusData,
  PostEcomEcomAccountUpdateStatusResponse,
  PostEcomEcomArticleCreateData,
  PostEcomEcomArticleCreateResponse,
  PostEcomEcomArticleGetAllData,
  PostEcomEcomArticleGetAllResponse,
  PostEcomEcomArticleGetByQueryData,
  PostEcomEcomArticleGetByQueryResponse,
  PostEcomEcomArticleGetRelatedByIdData,
  PostEcomEcomArticleGetRelatedByIdResponse,
  PostEcomEcomCashAdvanceStaffExportCashAdvanceData,
  PostEcomEcomCashAdvanceStaffExportCashAdvanceResponse,
  PostEcomEcomCashAdvanceStaffExportOverviewCashAdvanceData,
  PostEcomEcomCashAdvanceStaffExportOverviewCashAdvanceResponse,
  PostEcomEcomContactContactUsData,
  PostEcomEcomContactContactUsResponse,
  PostEcomEcomContactCreateData,
  PostEcomEcomContactCreateResponse,
  PostEcomEcomContactGetByQueryByStaffData,
  PostEcomEcomContactGetByQueryByStaffResponse,
  PostEcomEcomContactGetByQueryData,
  PostEcomEcomContactGetByQueryResponse,
  PostEcomEcomContactSubscriberData,
  PostEcomEcomContactSubscriberResponse,
  PostEcomEcomContactUpdateData,
  PostEcomEcomContactUpdateResponse,
  PostEcomEcomFeeStatementCreateTestData,
  PostEcomEcomFeeStatementCreateTestResponse,
  PostEcomEcomFindAgentCreateData,
  PostEcomEcomFindAgentCreateResponse,
  PostEcomEcomFindAgentGetAllData,
  PostEcomEcomFindAgentGetAllResponse,
  PostEcomEcomInquiryCreateData,
  PostEcomEcomInquiryCreateResponse,
  PostEcomEcomInquiryGetByQueryData,
  PostEcomEcomInquiryGetByQueryForStaffData,
  PostEcomEcomInquiryGetByQueryForStaffResponse,
  PostEcomEcomInquiryGetByQueryResponse,
  PostEcomEcomInquiryUpdateData,
  PostEcomEcomInquiryUpdateResponse,
  PostEcomEcomInquiryUpdateStatusData,
  PostEcomEcomInquiryUpdateStatusResponse,
  PostEcomEcomListingMemberPackageExportTransactionPackageData,
  PostEcomEcomListingMemberPackageExportTransactionPackageResponse,
  PostEcomEcomListingMemberPackageExportTransactionPushData,
  PostEcomEcomListingMemberPackageExportTransactionPushResponse,
  PostEcomEcomListingMemberPackageRedeemApackageData,
  PostEcomEcomListingMemberPackageRedeemApackageResponse,
  PostEcomEcomListingMemberPackageRedeemApushData,
  PostEcomEcomListingMemberPackageRedeemApushResponse,
  PostEcomEcomListingPackageCreateData,
  PostEcomEcomListingPackageCreateResponse,
  PostEcomEcomListingPushUpdateData,
  PostEcomEcomListingPushUpdateResponse,
  PostEcomEcomNotificationGetByQueryData,
  PostEcomEcomNotificationGetByQueryResponse,
  PostEcomEcomNotificationMarkReadAllData,
  PostEcomEcomNotificationMarkReadAllResponse,
  PostEcomEcomNotificationMarkReadData,
  PostEcomEcomNotificationMarkReadResponse,
  PostEcomEcomProjectCreateProjectBrochureData,
  PostEcomEcomProjectCreateProjectBrochureResponse,
  PostEcomEcomProjectCreateProjectData,
  PostEcomEcomProjectCreateProjectMasterPlanData,
  PostEcomEcomProjectCreateProjectMasterPlanResponse,
  PostEcomEcomProjectCreateProjectResponse,
  PostEcomEcomProjectGet360AlbumByQueryData,
  PostEcomEcomProjectGet360AlbumByQueryResponse,
  PostEcomEcomProjectGetBlockByQueryData,
  PostEcomEcomProjectGetBlockByQueryResponse,
  PostEcomEcomProjectGetBrochureByQueryData,
  PostEcomEcomProjectGetBrochureByQueryResponse,
  PostEcomEcomProjectGetByIdData,
  PostEcomEcomProjectGetByIdResponse,
  PostEcomEcomProjectGetByQueryData,
  PostEcomEcomProjectGetByQueryResponse,
  PostEcomEcomProjectGetGalleryByQueryData,
  PostEcomEcomProjectGetGalleryByQueryResponse,
  PostEcomEcomProjectGetListProjectData,
  PostEcomEcomProjectGetListProjectResponse,
  PostEcomEcomProjectGetListProjectSearchResponse,
  PostEcomEcomProjectGetMasterPlanByQueryData,
  PostEcomEcomProjectGetMasterPlanByQueryResponse,
  PostEcomEcomProjectGetMoreInfoByQueryData,
  PostEcomEcomProjectGetMoreInfoByQueryResponse,
  PostEcomEcomProjectGetPolicyByQueryData,
  PostEcomEcomProjectGetPolicyByQueryResponse,
  PostEcomEcomProjectGetProjectByQueryForPortalData,
  PostEcomEcomProjectGetProjectByQueryForPortalResponse,
  PostEcomEcomProjectGetSlideByQueryData,
  PostEcomEcomProjectGetSlideByQueryResponse,
  PostEcomEcomPropertyGetByIdData,
  PostEcomEcomPropertyGetByIdResponse,
  PostEcomEcomPropertyGetByQueryData,
  PostEcomEcomPropertyGetByQueryForPortalData,
  PostEcomEcomPropertyGetByQueryForPortalResponse,
  PostEcomEcomPropertyGetByQueryResponse,
  PostEcomEcomReviewApproveByIdData,
  PostEcomEcomReviewApproveByIdResponse,
  PostEcomEcomReviewCreateListingData,
  PostEcomEcomReviewCreateListingResponse,
  PostEcomEcomReviewCreateMemberData,
  PostEcomEcomReviewCreateMemberResponse,
  PostEcomEcomReviewDeleteByIdData,
  PostEcomEcomReviewDeleteByIdResponse,
  PostEcomEcomReviewGetByQueryListingData,
  PostEcomEcomReviewGetByQueryListingResponse,
  PostEcomEcomReviewGetByQueryMemberData,
  PostEcomEcomReviewGetByQueryMemberResponse,
  PostEcomEcomReviewGetReviewListingByQueryData,
  PostEcomEcomReviewGetReviewListingByQueryResponse,
  PostEcomEcomReviewGetReviewMemberByQueryData,
  PostEcomEcomReviewGetReviewMemberByQueryResponse,
  PostEcomEcomReviewGetReviewMyListingData,
  PostEcomEcomReviewGetReviewMyListingResponse,
  PostEcomEcomReviewGetReviewMyProfileData,
  PostEcomEcomReviewGetReviewMyProfileResponse,
  PostEcomEcomReviewPublicGetByQueryListingData,
  PostEcomEcomReviewPublicGetByQueryListingResponse,
  PostEcomEcomReviewPublicGetByQueryMemberData,
  PostEcomEcomReviewPublicGetByQueryMemberResponse,
  PostEcomEcomReviewRejectByIdData,
  PostEcomEcomReviewRejectByIdResponse,
  PostEcomEcomReviewToggleShowByIdData,
  PostEcomEcomReviewToggleShowByIdResponse,
  PostEcomEcomSearchLocationCreateData,
  PostEcomEcomSearchLocationCreateResponse,
  PostEcomEcomSearchLocationDeleteMaterialPlaceData,
  PostEcomEcomSearchLocationDeleteMaterialPlaceResponse,
  PostEcomEcomTopupStaffCreateRequestData,
  PostEcomEcomTopupStaffCreateRequestResponse,
  PostEcomEcomTopupStaffExportTopUpData,
  PostEcomEcomTopupStaffExportTopUpResponse,
  PostEcomEcomTopupStaffUpdateStatusData,
  PostEcomEcomTopupStaffUpdateStatusResponse,
  PostEcomEcomTransactionExportGetAllTransactionData,
  PostEcomEcomTransactionExportGetAllTransactionResponse,
  PostEcomEcomTransactionExportMyTransactionData,
  PostEcomEcomTransactionExportMyTransactionResponse,
  PostEcomEcomVatConfigCreateData,
  PostEcomEcomVatConfigCreateResponse,
  PostEcomEcomVatConfigGetAllData,
  PostEcomEcomVatConfigGetAllResponse,
  PostEcomEcomVatConfigMigrationVatDefaultData,
  PostEcomEcomVatConfigMigrationVatDefaultResponse,
  PostEcomEcomVatConfigUpdateData,
  PostEcomEcomVatConfigUpdateResponse,
  PostEcomInquiryConversationCreateData,
  PostEcomInquiryConversationCreateResponse,
  PostEcomInquiryConversationGetMyConversationData,
  PostEcomInquiryConversationGetMyConversationResponse,
  PostEcomKeywordBlacklistCreateOrUpdateData,
  PostEcomKeywordBlacklistCreateOrUpdateResponse,
  PostEcomLaCreateData,
  PostEcomLaCreateResponse,
  PostEcomListingAmenitiesCreateData,
  PostEcomListingAmenitiesCreateResponse,
  PostEcomListingAmenitiesGetByQueryData,
  PostEcomListingAmenitiesGetByQueryResponse,
  PostEcomListingCategoryCreateData,
  PostEcomListingCategoryCreateResponse,
  PostEcomListingCategoryGetByQueryData,
  PostEcomListingCategoryGetByQueryResponse,
  PostEcomListingCategoryUpdateOrderData,
  PostEcomListingCategoryUpdateOrderResponse,
  PostEcomListingCreateData,
  PostEcomListingCreateResponse,
  PostEcomListingFavoriteCompareFavoriteData,
  PostEcomListingFavoriteCompareFavoriteResponse,
  PostEcomListingFavoriteFavoriteData,
  PostEcomListingFavoriteFavoriteResponse,
  PostEcomListingFavoriteGetMyFavoriteData,
  PostEcomListingFavoriteGetMyFavoriteResponse,
  PostEcomListingGetByQueryData,
  PostEcomListingGetByQueryResponse,
  PostEcomListingGetForRentByQueryData,
  PostEcomListingGetForRentByQueryResponse,
  PostEcomListingGetForSellByQueryData,
  PostEcomListingGetForSellByQueryResponse,
  PostEcomListingGetMyListingData,
  PostEcomListingGetMyListingResponse,
  PostEcomListingGetSimilarInProjectQueryData,
  PostEcomListingGetSimilarInProjectQueryResponse,
  PostEcomListingGetSimilarNearByProjectQueryData,
  PostEcomListingGetSimilarNearByProjectQueryResponse,
  PostEcomListingLocationListingLocationResponse,
  PostEcomListingLocationListingMigrationResponse,
  PostEcomListingLocationListingMigrationSetIsDeleteResponse,
  PostEcomListingLocationListingMigrationShortDescriptionResponse,
  PostEcomListingLocationListingUnsetResponse,
  PostEcomListingPushData,
  PostEcomListingPushResponse,
  PostEcomListingStaffCreateByStaffData,
  PostEcomListingStaffCreateByStaffResponse,
  PostEcomListingStaffGetListingForStaffData,
  PostEcomListingStaffGetListingForStaffResponse,
  PostEcomListingStaffMarkAsExpiredData,
  PostEcomListingStaffMarkAsExpiredResponse,
  PostEcomListingStaffMarkAsPublishData,
  PostEcomListingStaffMarkAsPublishResponse,
  PostEcomListingStaffMarkAsVipData,
  PostEcomListingStaffMarkAsVipResponse,
  PostEcomListingStaffUpdateByStaffData,
  PostEcomListingStaffUpdateByStaffResponse,
  PostEcomListingStaffUpdateStatusData,
  PostEcomListingStaffUpdateStatusResponse,
  PostEcomListingUpdateActualPriceData,
  PostEcomListingUpdateActualPriceResponse,
  PostEcomListingUpdateStatusData,
  PostEcomListingUpdateStatusResponse,
  PostEcomListingViewBalconyGetByQueryData,
  PostEcomListingViewBalconyGetByQueryResponse,
  PostEcomListingViewGetByQueryData,
  PostEcomListingViewGetByQueryResponse,
  PostEcomLogoBannerCreateData,
  PostEcomLogoBannerCreateResponse,
  PostEcomLogoBannerGetByQueryData,
  PostEcomLogoBannerGetByQueryResponse,
  PostEcomMobileV1EcomAccountLogOutResponse,
  PostEcomMobileV1EcomAccountLoginData,
  PostEcomMobileV1EcomAccountLoginResponse,
  PostEcomMobileV1EcomAccountLoginSocialData,
  PostEcomMobileV1EcomAccountLoginSocialResponse,
  PostEcomMobileV1EcomAccountRegisterData,
  PostEcomMobileV1EcomAccountRegisterResponse,
  PostEcomMobileV1EcomAccountRequestOtpData,
  PostEcomMobileV1EcomAccountRequestOtpResponse,
  PostEcomMobileV1EcomAccountResendOtpData,
  PostEcomMobileV1EcomAccountResendOtpResponse,
  PostEcomMobileV1EcomAccountVerifyOtpV1Data,
  PostEcomMobileV1EcomAccountVerifyOtpV1Response,
  PostEcomMobileV1EcomListingFavoriteGetMyFavoriteMobileData,
  PostEcomMobileV1EcomListingFavoriteGetMyFavoriteMobileResponse,
  PostEcomOsaCreateData,
  PostEcomOsaCreateResponse,
  PostEcomOwnerCreateOrUpdateData,
  PostEcomOwnerCreateOrUpdateResponse,
  PostEcomOwnerInquiryCreateData,
  PostEcomOwnerInquiryCreateResponse,
  PostEcomPayMeIpnData,
  PostEcomPayMeIpnResponse,
  PostEcomPayMePaymentWebData,
  PostEcomPayMePaymentWebResponse,
  PostEcomReportsExportListingAreaAveragePriceData,
  PostEcomReportsExportListingAreaAveragePriceResponse,
  PostEcomReportsExportListingAreaData,
  PostEcomReportsExportListingAreaResponse,
  PostEcomReportsReportEcommerceData,
  PostEcomReportsReportEcommerceResponse,
  PostEcomReportsReportGetTopListingData,
  PostEcomReportsReportGetTopListingResponse,
  PostEcomReportsReportListingAreaAveragePriceData,
  PostEcomReportsReportListingAreaAveragePriceResponse,
  PostEcomReportsReportListingAreaData,
  PostEcomReportsReportListingAreaResponse,
  PostEcomReportsReportListingAveragePriceData,
  PostEcomReportsReportListingAveragePriceResponse,
  PostEcomReportsReportListingForCategoryData,
  PostEcomReportsReportListingForCategoryEveryMonthData,
  PostEcomReportsReportListingForCategoryEveryMonthResponse,
  PostEcomReportsReportListingForCategoryResponse,
  PostEcomReportsReportListingForProjectData,
  PostEcomReportsReportListingForProjectResponse,
  PostEcomReportsReportListingForTypeData,
  PostEcomReportsReportListingForTypeResponse,
  PostEcomUnitCreateData,
  PostEcomUnitCreateResponse,
  PostEcomV1EcomAccountCheckPhoneNumberData,
  PostEcomV1EcomAccountCheckPhoneNumberResponse,
  PostEcomV1EcomAccountLinkSocialData,
  PostEcomV1EcomAccountLinkSocialResponse,
  PostEcomV1EcomAccountLogOutResponse,
  PostEcomV1EcomAccountLoginData,
  PostEcomV1EcomAccountLoginResponse,
  PostEcomV1EcomAccountLoginSocialData,
  PostEcomV1EcomAccountLoginSocialResponse,
  PostEcomV1EcomAccountRegisterData,
  PostEcomV1EcomAccountRegisterResponse,
  PostEcomV1EcomAccountRequestOtpData,
  PostEcomV1EcomAccountRequestOtpResponse,
  PostEcomV1EcomAccountResendOtpData,
  PostEcomV1EcomAccountResendOtpResponse,
  PostEcomV1EcomAccountSetReceiveNotiEmailData,
  PostEcomV1EcomAccountSetReceiveNotiEmailResponse,
  PostEcomV1EcomAccountVerifyOtpData,
  PostEcomV1EcomAccountVerifyOtpResponse,
  PostEcomV1EcomInquiryCreateData,
  PostEcomV1EcomInquiryCreateResponse,
  PostEcomV1EcomListingCreateData,
  PostEcomV1EcomListingCreateResponse,
  PostEcomV1EcomProjectCreateData,
  PostEcomV1EcomProjectCreateResponse,
  PostEcomV1EcomProjectGetProjectByQueryForMobileData,
  PostEcomV1EcomProjectGetProjectByQueryForMobileResponse,
  PostEcomV2EcomAccountRegisterData,
  PostEcomV2EcomAccountRegisterResponse,
  PostEcomV2EcomAccountRequestOtpRegisterData,
  PostEcomV2EcomAccountRequestOtpRegisterResponse,
  PostEventGetByQueryData,
  PostEventGetByQueryResponse,
  PostEventGetNearestEventData,
  PostEventGetNearestEventResponse,
  PostEventMigrateShowOnAppData,
  PostEventMigrateShowOnAppResponse,
  PostEventNotificationData,
  PostEventNotificationResponse,
  PostEventRemindData,
  PostEventRemindResponse,
  PostEventRemindSubData,
  PostEventRemindSubResponse,
  PostEventUpdateData,
  PostEventUpdateResponse,
  PostListingGeoData,
  PostListingGeoResponse,
  PostListingSearchData,
  PostListingSearchResponse,
  PostPingByCustomerIdData,
  PostPingByCustomerIdResponse,
  PostPingHifaceLogData,
  PostPingHifaceLogResponse,
  PostPingInitCommonPlaceResponse,
  PostPingTestScheduleData,
  PostPingTestScheduleResponse,
  PostPingTestTaskData,
  PostPingTestTaskResponse,
  PostPingWebhookData,
  PostPingWebhookResponse,
  PostPingWebhookTaskData,
  PostPingWebhookTaskResponse,
  PostProjectGetProject360AlbumByQueryData,
  PostProjectGetProject360AlbumByQueryResponse,
  PostProjectGetProjectBlockByQueryData,
  PostProjectGetProjectBlockByQueryResponse,
  PostProjectGetProjectBrochureByQueryData,
  PostProjectGetProjectBrochureByQueryResponse,
  PostProjectGetProjectByQueryData,
  PostProjectGetProjectByQueryResponse,
  PostProjectGetProjectGalleryByQueryData,
  PostProjectGetProjectGalleryByQueryResponse,
  PostProjectGetProjectMasterPlanByQueryData,
  PostProjectGetProjectMasterPlanByQueryResponse,
  PostProjectGetProjectMoreInfoByQueryData,
  PostProjectGetProjectMoreInfoByQueryResponse,
  PostProjectGetProjectPolicyByQueryData,
  PostProjectGetProjectPolicyByQueryResponse,
  PostProjectGetProjectSlideByQueryData,
  PostProjectGetProjectSlideByQueryResponse,
  PostProjectMigrateShowOnOverviewReportData,
  PostProjectMigrateShowOnOverviewReportResponse,
  PostProjectNotificationData,
  PostProjectNotificationResponse,
  PostProjectProject360AlbumDeleteImageData,
  PostProjectProject360AlbumDeleteImageResponse,
  PostProjectProject360AlbumUploadImageData,
  PostProjectProject360AlbumUploadImageResponse,
  PostProjectProjectGalleryDeleteImageData,
  PostProjectProjectGalleryDeleteImageResponse,
  PostProjectProjectGalleryUploadImageData,
  PostProjectProjectGalleryUploadImageResponse,
  PostProjectProjectGetImportTemplateData,
  PostProjectProjectGetImportTemplateResponse,
  PostProjectProjectImportData,
  PostProjectProjectImportResponse,
  PostProjectProjectMasterPlanDeleteImageData,
  PostProjectProjectMasterPlanDeleteImageResponse,
  PostProjectProjectMasterPlanUploadImageData,
  PostProjectProjectMasterPlanUploadImageResponse,
  PostProjectProjectPolicyDeleteFileData,
  PostProjectProjectPolicyDeleteFileResponse,
  PostProjectProjectPolicyUploadFileData,
  PostProjectProjectPolicyUploadFileResponse,
  PostProjectUpdateProject360AlbumData,
  PostProjectUpdateProject360AlbumResponse,
  PostProjectUpdateProjectBlockData,
  PostProjectUpdateProjectBlockResponse,
  PostProjectUpdateProjectGalleryData,
  PostProjectUpdateProjectGalleryResponse,
  PostProjectUpdateProjectMoreInfoData,
  PostProjectUpdateProjectMoreInfoResponse,
  PostProjectUpdateProjectPolicyData,
  PostProjectUpdateProjectPolicyResponse,
  PostProjectUpdateProjectSlideData,
  PostProjectUpdateProjectSlideResponse,
  PostPropertyActiveMultiData,
  PostPropertyActiveMultiResponse,
  PostPropertyDeleteImageData,
  PostPropertyDeleteImageResponse,
  PostPropertyDeleteMultiData,
  PostPropertyDeleteMultiResponse,
  PostPropertyExportByProjectData,
  PostPropertyExportByProjectResponse,
  PostPropertyExportData,
  PostPropertyExportResponse,
  PostPropertyGetByQueryByUserAgencyData,
  PostPropertyGetByQueryByUserAgencyResponse,
  PostPropertyGetByQueryData,
  PostPropertyGetByQueryForSaleProgramData,
  PostPropertyGetByQueryForSaleProgramResponse,
  PostPropertyGetByQueryResponse,
  PostPropertyGetImportTemplateData,
  PostPropertyGetImportTemplateResponse,
  PostPropertyGetPropertyLogByQueryData,
  PostPropertyGetPropertyLogByQueryResponse,
  PostPropertyImportData,
  PostPropertyImportResponse,
  PostPropertyInActiveMultiData,
  PostPropertyInActiveMultiResponse,
  PostPropertyShowHideMultiData,
  PostPropertyShowHideMultiResponse,
  PostPropertySyncPropertyRelatedDatasData,
  PostPropertySyncPropertyRelatedDatasResponse,
  PostPropertyUpdateCodeData,
  PostPropertyUpdateCodeResponse,
  PostPropertyUpdateData,
  PostPropertyUpdatePropertyRelatedDatasResponse,
  PostPropertyUpdateResponse,
  PostPropertyUpdateStatusResponse,
  PostPropertyUploadImageData,
  PostPropertyUploadImageResponse,
  PostUploadInit2Data,
  PostUploadInit2Response,
  PostUploadInitData,
  PostUploadInitResponse,
  PostUploadUploadImageInquiryData,
  PostUploadUploadImageInquiryResponse,
  PostUploadUploadImageListingResponse,
  PostUploadUploadImageProjectData,
  PostUploadUploadImageProjectLogoData,
  PostUploadUploadImageProjectLogoResponse,
  PostUploadUploadImageProjectResponse,
  PostUploadUploadImageResponse,
  PutAccessGroupUpdateData,
  PutAccessGroupUpdateResponse,
  PutEcomAdBannerUpdateData,
  PutEcomAdBannerUpdateResponse,
  PutEcomEcomAccountUpdateData,
  PutEcomEcomAccountUpdateResponse,
  PutEcomEcomArticleUpdateData,
  PutEcomEcomArticleUpdateResponse,
  PutEcomEcomConfigUpdateData,
  PutEcomEcomConfigUpdateResponse,
  PutEcomEcomFindAgentUpdateData,
  PutEcomEcomFindAgentUpdateOrderData,
  PutEcomEcomFindAgentUpdateOrderResponse,
  PutEcomEcomFindAgentUpdateResponse,
  PutEcomEcomListingPackageUpdateData,
  PutEcomEcomListingPackageUpdateResponse,
  PutEcomEcomProjectUpdateProjectBrochureData,
  PutEcomEcomProjectUpdateProjectBrochureResponse,
  PutEcomEcomProjectUpdateProjectData,
  PutEcomEcomProjectUpdateProjectMasterPlanData,
  PutEcomEcomProjectUpdateProjectMasterPlanResponse,
  PutEcomEcomProjectUpdateProjectResponse,
  PutEcomEcomSearchLocationUpdateData,
  PutEcomEcomSearchLocationUpdateResponse,
  PutEcomLaUpdateData,
  PutEcomLaUpdateResponse,
  PutEcomListingAmenitiesUpdateData,
  PutEcomListingAmenitiesUpdateResponse,
  PutEcomListingCategoryUpdateData,
  PutEcomListingCategoryUpdateResponse,
  PutEcomListingMigrateData,
  PutEcomListingMigrateResponse,
  PutEcomListingUpdateData,
  PutEcomListingUpdateResponse,
  PutEcomLogoBannerUpdateData,
  PutEcomLogoBannerUpdateResponse,
  PutEcomOsaUpdateData,
  PutEcomOsaUpdateResponse,
  PutEcomOwnerInquiryUpdateData,
  PutEcomOwnerInquiryUpdateResponse,
  PutEcomUnitUpdateData,
  PutEcomUnitUpdateResponse,
  PutEcomV1EcomListingUpdateData,
  PutEcomV1EcomListingUpdateResponse,
  PutEcomV1EcomProjectUpdateData,
  PutEcomV1EcomProjectUpdateResponse,
  PutEventCreateData,
  PutEventCreateResponse,
  PutProjectCreateProject360AlbumData,
  PutProjectCreateProject360AlbumResponse,
  PutProjectCreateProjectBlockData,
  PutProjectCreateProjectBlockResponse,
  PutProjectCreateProjectGalleryData,
  PutProjectCreateProjectGalleryResponse,
  PutProjectCreateProjectMoreInfoData,
  PutProjectCreateProjectMoreInfoResponse,
  PutProjectCreateProjectPolicyData,
  PutProjectCreateProjectPolicyResponse,
  PutProjectCreateProjectSlideData,
  PutProjectCreateProjectSlideResponse,
  PutPropertyCreateData,
  PutPropertyCreateResponse,
} from './types.gen';

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.id
 * @returns unknown Success
 * @throws ApiError
 */
export const getAccessGroupGetById = (
  data: GetAccessGroupGetByIdData,
): CancelablePromise<GetAccessGroupGetByIdResponse> => {
  return __request(OpenAPI, {
    method: 'GET',
    url: '/AccessGroup/GetById',
    headers: {
      Authorization: data.authorization,
    },
    query: {
      id: data.id,
    },
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.requestBody
 * @returns unknown Success
 * @throws ApiError
 */
export const postAccessGroupGetByQuery = (
  data: PostAccessGroupGetByQueryData,
): CancelablePromise<PostAccessGroupGetByQueryResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/AccessGroup/GetByQuery',
    headers: {
      Authorization: data.authorization,
    },
    body: data.requestBody,
    mediaType: 'application/json',
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @returns unknown Success
 * @throws ApiError
 */
export const postAccessGroupCreate = (
  data: PostAccessGroupCreateData,
): CancelablePromise<PostAccessGroupCreateResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/AccessGroup/Create',
    headers: {
      Authorization: data.authorization,
    },
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @returns unknown Success
 * @throws ApiError
 */
export const putAccessGroupUpdate = (
  data: PutAccessGroupUpdateData,
): CancelablePromise<PutAccessGroupUpdateResponse> => {
  return __request(OpenAPI, {
    method: 'PUT',
    url: '/AccessGroup/Update',
    headers: {
      Authorization: data.authorization,
    },
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.requestBody
 * @returns unknown Success
 * @throws ApiError
 */
export const postAccessGroupGetAll = (
  data: PostAccessGroupGetAllData,
): CancelablePromise<PostAccessGroupGetAllResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/AccessGroup/GetAll',
    headers: {
      Authorization: data.authorization,
    },
    body: data.requestBody,
    mediaType: 'application/json',
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.id
 * @returns unknown Success
 * @throws ApiError
 */
export const getAccessGroupGetDetailById = (
  data: GetAccessGroupGetDetailByIdData,
): CancelablePromise<GetAccessGroupGetDetailByIdResponse> => {
  return __request(OpenAPI, {
    method: 'GET',
    url: '/AccessGroup/GetDetailById',
    headers: {
      Authorization: data.authorization,
    },
    query: {
      id: data.id,
    },
  });
};

/**
 * @returns unknown Success
 * @throws ApiError
 */
export const postCloudSchedulerPublishListingScheduleJob =
  (): CancelablePromise<PostCloudSchedulerPublishListingScheduleJobResponse> => {
    return __request(OpenAPI, {
      method: 'POST',
      url: '/CloudScheduler/PublishListingScheduleJob',
    });
  };

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @returns unknown Success
 * @throws ApiError
 */
export const postCloudSchedulerExpiryListingScheduleJob = (
  data: PostCloudSchedulerExpiryListingScheduleJobData,
): CancelablePromise<PostCloudSchedulerExpiryListingScheduleJobResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/CloudScheduler/ExpiryListingScheduleJob',
    headers: {
      Authorization: data.authorization,
    },
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.inquiryId
 * @returns unknown Success
 * @throws ApiError
 */
export const postCloudTaskNotificationCreateInquiry = (
  data: PostCloudTaskNotificationCreateInquiryData,
): CancelablePromise<PostCloudTaskNotificationCreateInquiryResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/CloudTask/NotificationCreateInquiry',
    headers: {
      Authorization: data.authorization,
    },
    query: {
      inquiryId: data.inquiryId,
    },
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.inquiryId
 * @returns unknown Success
 * @throws ApiError
 */
export const postCloudTaskNotificationCreateSiteVisit = (
  data: PostCloudTaskNotificationCreateSiteVisitData,
): CancelablePromise<PostCloudTaskNotificationCreateSiteVisitResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/CloudTask/NotificationCreateSiteVisit',
    headers: {
      Authorization: data.authorization,
    },
    query: {
      inquiryId: data.inquiryId,
    },
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.listingId
 * @returns unknown Success
 * @throws ApiError
 */
export const postCloudTaskNotificationCreateListingSuccess = (
  data: PostCloudTaskNotificationCreateListingSuccessData,
): CancelablePromise<PostCloudTaskNotificationCreateListingSuccessResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/CloudTask/NotificationCreateListingSuccess',
    headers: {
      Authorization: data.authorization,
    },
    query: {
      listingId: data.listingId,
    },
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.listingId
 * @returns unknown Success
 * @throws ApiError
 */
export const postCloudTaskNotificationListingApproved = (
  data: PostCloudTaskNotificationListingApprovedData,
): CancelablePromise<PostCloudTaskNotificationListingApprovedResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/CloudTask/NotificationListingApproved',
    headers: {
      Authorization: data.authorization,
    },
    query: {
      listingId: data.listingId,
    },
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.listingId
 * @returns unknown Success
 * @throws ApiError
 */
export const postCloudTaskNotificationListingRejected = (
  data: PostCloudTaskNotificationListingRejectedData,
): CancelablePromise<PostCloudTaskNotificationListingRejectedResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/CloudTask/NotificationListingRejected',
    headers: {
      Authorization: data.authorization,
    },
    query: {
      listingId: data.listingId,
    },
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.listingId
 * @returns unknown Success
 * @throws ApiError
 */
export const postCloudTaskNotificationListingExpired = (
  data: PostCloudTaskNotificationListingExpiredData,
): CancelablePromise<PostCloudTaskNotificationListingExpiredResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/CloudTask/NotificationListingExpired',
    headers: {
      Authorization: data.authorization,
    },
    query: {
      listingId: data.listingId,
    },
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.listingId
 * @returns unknown Success
 * @throws ApiError
 */
export const postCloudTaskNotificationTakeDownListing = (
  data: PostCloudTaskNotificationTakeDownListingData,
): CancelablePromise<PostCloudTaskNotificationTakeDownListingResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/CloudTask/NotificationTakeDownListing',
    headers: {
      Authorization: data.authorization,
    },
    query: {
      listingId: data.listingId,
    },
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.clientName
 * @param data.email
 * @param data.message
 * @param data.phone
 * @returns unknown Success
 * @throws ApiError
 */
export const postCloudTaskNotificationContactUs = (
  data: PostCloudTaskNotificationContactUsData,
): CancelablePromise<PostCloudTaskNotificationContactUsResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/CloudTask/NotificationContactUs',
    headers: {
      Authorization: data.authorization,
    },
    query: {
      clientName: data.clientName,
      email: data.email,
      message: data.message,
      phone: data.phone,
    },
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.key
 * @param data.requestBody
 * @returns unknown Success
 * @throws ApiError
 */
export const postCloudTaskTestTask = (
  data: PostCloudTaskTestTaskData,
): CancelablePromise<PostCloudTaskTestTaskResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/CloudTask/TestTask',
    headers: {
      Authorization: data.authorization,
    },
    query: {
      key: data.key,
    },
    body: data.requestBody,
    mediaType: 'application/json',
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.listingId
 * @returns unknown Success
 * @throws ApiError
 */
export const postCloudTaskFetchListingLocationNearBy = (
  data: PostCloudTaskFetchListingLocationNearByData,
): CancelablePromise<PostCloudTaskFetchListingLocationNearByResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/CloudTask/FetchListingLocationNearBy',
    headers: {
      Authorization: data.authorization,
    },
    query: {
      listingId: data.listingId,
    },
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.requestBody
 * @returns unknown Success
 * @throws ApiError
 */
export const postDeviceInsertOrUpdateDevices = (
  data: PostDeviceInsertOrUpdateDevicesData,
): CancelablePromise<PostDeviceInsertOrUpdateDevicesResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/Device/InsertOrUpdateDevices',
    headers: {
      Authorization: data.authorization,
    },
    body: data.requestBody,
    mediaType: 'application/json',
  });
};

/**
 * @param data The data for the request.
 * @param data.requestBody
 * @returns unknown Success
 * @throws ApiError
 */
export const postEcomEcomAccountRegister = (
  data: PostEcomEcomAccountRegisterData = {},
): CancelablePromise<PostEcomEcomAccountRegisterResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/Ecom/EcomAccount/Register',
    body: data.requestBody,
    mediaType: 'application/json',
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.requestBody
 * @returns unknown Success
 * @throws ApiError
 */
export const postEcomEcomAccountChangePassword = (
  data: PostEcomEcomAccountChangePasswordData,
): CancelablePromise<PostEcomEcomAccountChangePasswordResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/Ecom/EcomAccount/ChangePassword',
    headers: {
      Authorization: data.authorization,
    },
    body: data.requestBody,
    mediaType: 'application/json',
  });
};

/**
 * @param data The data for the request.
 * @param data.requestBody
 * @returns unknown Success
 * @throws ApiError
 */
export const postEcomEcomAccountRequestOtp = (
  data: PostEcomEcomAccountRequestOtpData = {},
): CancelablePromise<PostEcomEcomAccountRequestOtpResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/Ecom/EcomAccount/RequestOtp',
    body: data.requestBody,
    mediaType: 'application/json',
  });
};

/**
 * @param data The data for the request.
 * @param data.requestBody
 * @returns unknown Success
 * @throws ApiError
 */
export const postEcomEcomAccountSubmitOtp = (
  data: PostEcomEcomAccountSubmitOtpData = {},
): CancelablePromise<PostEcomEcomAccountSubmitOtpResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/Ecom/EcomAccount/SubmitOtp',
    body: data.requestBody,
    mediaType: 'application/json',
  });
};

/**
 * @param data The data for the request.
 * @param data.requestBody
 * @returns unknown Success
 * @throws ApiError
 */
export const postEcomEcomAccountSetNewPassword = (
  data: PostEcomEcomAccountSetNewPasswordData = {},
): CancelablePromise<PostEcomEcomAccountSetNewPasswordResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/Ecom/EcomAccount/SetNewPassword',
    body: data.requestBody,
    mediaType: 'application/json',
  });
};

/**
 * @param data The data for the request.
 * @param data.requestBody
 * @returns unknown Success
 * @throws ApiError
 */
export const postEcomEcomAccountLogin = (
  data: PostEcomEcomAccountLoginData = {},
): CancelablePromise<PostEcomEcomAccountLoginResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/Ecom/EcomAccount/Login',
    body: data.requestBody,
    mediaType: 'application/json',
  });
};

/**
 * @param data The data for the request.
 * @param data.id
 * @returns unknown Success
 * @throws ApiError
 */
export const getEcomEcomAccountGetByIdPublish = (
  data: GetEcomEcomAccountGetByIdPublishData = {},
): CancelablePromise<GetEcomEcomAccountGetByIdPublishResponse> => {
  return __request(OpenAPI, {
    method: 'GET',
    url: '/Ecom/EcomAccount/GetByIdPublish',
    query: {
      id: data.id,
    },
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.lang
 * @param data.authorization Bearer {token}
 * @returns unknown Success
 * @throws ApiError
 */
export const postEcomEcomAccountUpdateLanguageByLang = (
  data: PostEcomEcomAccountUpdateLanguageByLangData,
): CancelablePromise<PostEcomEcomAccountUpdateLanguageByLangResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/Ecom/EcomAccount/UpdateLanguage/{lang}',
    path: {
      lang: data.lang,
    },
    headers: {
      Authorization: data.authorization,
    },
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @returns unknown Success
 * @throws ApiError
 */
export const getEcomEcomAccountMe = (
  data: GetEcomEcomAccountMeData,
): CancelablePromise<GetEcomEcomAccountMeResponse> => {
  return __request(OpenAPI, {
    method: 'GET',
    url: '/Ecom/EcomAccount/Me',
    headers: {
      Authorization: data.authorization,
    },
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.requestBody
 * @returns unknown Success
 * @throws ApiError
 */
export const postEcomEcomAccountUpdateOwnMember = (
  data: PostEcomEcomAccountUpdateOwnMemberData,
): CancelablePromise<PostEcomEcomAccountUpdateOwnMemberResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/Ecom/EcomAccount/UpdateOwnMember',
    headers: {
      Authorization: data.authorization,
    },
    body: data.requestBody,
    mediaType: 'application/json',
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.requestBody
 * @returns unknown Success
 * @throws ApiError
 */
export const postEcomEcomAccountUpdateCorporate = (
  data: PostEcomEcomAccountUpdateCorporateData,
): CancelablePromise<PostEcomEcomAccountUpdateCorporateResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/Ecom/EcomAccount/UpdateCorporate',
    headers: {
      Authorization: data.authorization,
    },
    body: data.requestBody,
    mediaType: 'application/json',
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @returns unknown Success
 * @throws ApiError
 */
export const postEcomEcomAccountUpdateOwnAvatar = (
  data: PostEcomEcomAccountUpdateOwnAvatarData,
): CancelablePromise<PostEcomEcomAccountUpdateOwnAvatarResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/Ecom/EcomAccount/UpdateOwnAvatar',
    headers: {
      Authorization: data.authorization,
    },
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.id
 * @returns unknown Success
 * @throws ApiError
 */
export const getEcomEcomAccountGetById = (
  data: GetEcomEcomAccountGetByIdData,
): CancelablePromise<GetEcomEcomAccountGetByIdResponse> => {
  return __request(OpenAPI, {
    method: 'GET',
    url: '/Ecom/EcomAccount/GetById',
    headers: {
      Authorization: data.authorization,
    },
    query: {
      id: data.id,
    },
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.requestBody
 * @returns unknown Success
 * @throws ApiError
 */
export const postEcomEcomAccountGetByQuery = (
  data: PostEcomEcomAccountGetByQueryData,
): CancelablePromise<PostEcomEcomAccountGetByQueryResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/Ecom/EcomAccount/GetByQuery',
    headers: {
      Authorization: data.authorization,
    },
    body: data.requestBody,
    mediaType: 'application/json',
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.requestBody
 * @returns unknown Success
 * @throws ApiError
 */
export const postEcomEcomAccountGetFilterCreatedAt = (
  data: PostEcomEcomAccountGetFilterCreatedAtData,
): CancelablePromise<PostEcomEcomAccountGetFilterCreatedAtResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/Ecom/EcomAccount/GetFilterCreatedAt',
    headers: {
      Authorization: data.authorization,
    },
    body: data.requestBody,
    mediaType: 'application/json',
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.id
 * @param data.authorization Bearer {token}
 * @returns unknown Success
 * @throws ApiError
 */
export const postEcomEcomAccountApproveById = (
  data: PostEcomEcomAccountApproveByIdData,
): CancelablePromise<PostEcomEcomAccountApproveByIdResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/Ecom/EcomAccount/Approve/{id}',
    path: {
      id: data.id,
    },
    headers: {
      Authorization: data.authorization,
    },
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.requestBody
 * @returns unknown Success
 * @throws ApiError
 */
export const postEcomEcomAccountActive = (
  data: PostEcomEcomAccountActiveData,
): CancelablePromise<PostEcomEcomAccountActiveResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/Ecom/EcomAccount/Active',
    headers: {
      Authorization: data.authorization,
    },
    body: data.requestBody,
    mediaType: 'application/json',
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.requestBody
 * @returns unknown Success
 * @throws ApiError
 */
export const postEcomEcomAccountShowOnHome = (
  data: PostEcomEcomAccountShowOnHomeData,
): CancelablePromise<PostEcomEcomAccountShowOnHomeResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/Ecom/EcomAccount/ShowOnHome',
    headers: {
      Authorization: data.authorization,
    },
    body: data.requestBody,
    mediaType: 'application/json',
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.requestBody
 * @returns unknown Success
 * @throws ApiError
 */
export const postEcomEcomAccountReject = (
  data: PostEcomEcomAccountRejectData,
): CancelablePromise<PostEcomEcomAccountRejectResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/Ecom/EcomAccount/Reject',
    headers: {
      Authorization: data.authorization,
    },
    body: data.requestBody,
    mediaType: 'application/json',
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.requestBody
 * @returns unknown Success
 * @throws ApiError
 */
export const postEcomEcomAccountUpdateMember = (
  data: PostEcomEcomAccountUpdateMemberData,
): CancelablePromise<PostEcomEcomAccountUpdateMemberResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/Ecom/EcomAccount/UpdateMember',
    headers: {
      Authorization: data.authorization,
    },
    body: data.requestBody,
    mediaType: 'application/json',
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.requestBody
 * @returns unknown Success
 * @throws ApiError
 */
export const postEcomEcomAccountUpdateStatus = (
  data: PostEcomEcomAccountUpdateStatusData,
): CancelablePromise<PostEcomEcomAccountUpdateStatusResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/Ecom/EcomAccount/UpdateStatus',
    headers: {
      Authorization: data.authorization,
    },
    body: data.requestBody,
    mediaType: 'application/json',
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.input
 * @returns unknown Success
 * @throws ApiError
 */
export const getEcomEcomAccountGetAutoCompleteAutocomplete = (
  data: GetEcomEcomAccountGetAutoCompleteAutocompleteData,
): CancelablePromise<GetEcomEcomAccountGetAutoCompleteAutocompleteResponse> => {
  return __request(OpenAPI, {
    method: 'GET',
    url: '/Ecom/EcomAccount/GetAutoComplete/Autocomplete',
    headers: {
      Authorization: data.authorization,
    },
    query: {
      input: data.input,
    },
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.input
 * @returns unknown Success
 * @throws ApiError
 */
export const getEcomEcomAccountGetAutoCompleteCustomer = (
  data: GetEcomEcomAccountGetAutoCompleteCustomerData,
): CancelablePromise<GetEcomEcomAccountGetAutoCompleteCustomerResponse> => {
  return __request(OpenAPI, {
    method: 'GET',
    url: '/Ecom/EcomAccount/GetAutoCompleteCustomer',
    headers: {
      Authorization: data.authorization,
    },
    query: {
      input: data.input,
    },
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @returns unknown Success
 * @throws ApiError
 */
export const postEcomEcomAccountCreate = (
  data: PostEcomEcomAccountCreateData,
): CancelablePromise<PostEcomEcomAccountCreateResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/Ecom/EcomAccount/Create',
    headers: {
      Authorization: data.authorization,
    },
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @returns unknown Success
 * @throws ApiError
 */
export const putEcomEcomAccountUpdate = (
  data: PutEcomEcomAccountUpdateData,
): CancelablePromise<PutEcomEcomAccountUpdateResponse> => {
  return __request(OpenAPI, {
    method: 'PUT',
    url: '/Ecom/EcomAccount/Update',
    headers: {
      Authorization: data.authorization,
    },
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.requestBody
 * @returns unknown Success
 * @throws ApiError
 */
export const postEcomEcomAccountGetAll = (
  data: PostEcomEcomAccountGetAllData,
): CancelablePromise<PostEcomEcomAccountGetAllResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/Ecom/EcomAccount/GetAll',
    headers: {
      Authorization: data.authorization,
    },
    body: data.requestBody,
    mediaType: 'application/json',
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.requestBody
 * @returns unknown Success
 * @throws ApiError
 */
export const postEcomEcomAccountGetStaffByQuery = (
  data: PostEcomEcomAccountGetStaffByQueryData,
): CancelablePromise<PostEcomEcomAccountGetStaffByQueryResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/Ecom/EcomAccount/GetStaffByQuery',
    headers: {
      Authorization: data.authorization,
    },
    body: data.requestBody,
    mediaType: 'application/json',
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.id
 * @returns unknown Success
 * @throws ApiError
 */
export const getEcomEcomAccountGetDetailById = (
  data: GetEcomEcomAccountGetDetailByIdData,
): CancelablePromise<GetEcomEcomAccountGetDetailByIdResponse> => {
  return __request(OpenAPI, {
    method: 'GET',
    url: '/Ecom/EcomAccount/GetDetailById',
    headers: {
      Authorization: data.authorization,
    },
    query: {
      id: data.id,
    },
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.requestBody
 * @returns unknown Success
 * @throws ApiError
 */
export const postEcomEcomAccountExportMember = (
  data: PostEcomEcomAccountExportMemberData,
): CancelablePromise<PostEcomEcomAccountExportMemberResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/Ecom/EcomAccount/ExportMember',
    headers: {
      Authorization: data.authorization,
    },
    body: data.requestBody,
    mediaType: 'application/json',
  });
};

/**
 * @param data The data for the request.
 * @param data.requestBody
 * @returns unknown Success
 * @throws ApiError
 */
export const postEcomV2EcomAccountRegister = (
  data: PostEcomV2EcomAccountRegisterData = {},
): CancelablePromise<PostEcomV2EcomAccountRegisterResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/Ecom/v2/EcomAccount/Register',
    body: data.requestBody,
    mediaType: 'application/json',
  });
};

/**
 * @param data The data for the request.
 * @param data.requestBody
 * @returns unknown Success
 * @throws ApiError
 */
export const postEcomV2EcomAccountRequestOtpRegister = (
  data: PostEcomV2EcomAccountRequestOtpRegisterData = {},
): CancelablePromise<PostEcomV2EcomAccountRequestOtpRegisterResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/Ecom/v2/EcomAccount/RequestOtpRegister',
    body: data.requestBody,
    mediaType: 'application/json',
  });
};

/**
 * @param data The data for the request.
 * @param data.requestBody
 * @returns unknown Success
 * @throws ApiError
 */
export const postEcomV1EcomAccountLogin = (
  data: PostEcomV1EcomAccountLoginData = {},
): CancelablePromise<PostEcomV1EcomAccountLoginResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/Ecom/v1/EcomAccount/Login',
    body: data.requestBody,
    mediaType: 'application/json',
  });
};

/**
 * @param data The data for the request.
 * @param data.requestBody
 * @returns unknown Success
 * @throws ApiError
 */
export const postEcomV1EcomAccountCheckPhoneNumber = (
  data: PostEcomV1EcomAccountCheckPhoneNumberData = {},
): CancelablePromise<PostEcomV1EcomAccountCheckPhoneNumberResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/Ecom/v1/EcomAccount/CheckPhoneNumber',
    body: data.requestBody,
    mediaType: 'application/json',
  });
};

/**
 * @param data The data for the request.
 * @param data.requestBody
 * @returns unknown Success
 * @throws ApiError
 */
export const postEcomV1EcomAccountLoginSocial = (
  data: PostEcomV1EcomAccountLoginSocialData = {},
): CancelablePromise<PostEcomV1EcomAccountLoginSocialResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/Ecom/v1/EcomAccount/LoginSocial',
    body: data.requestBody,
    mediaType: 'application/json',
  });
};

/**
 * @param data The data for the request.
 * @param data.requestBody
 * @returns unknown Success
 * @throws ApiError
 */
export const postEcomV1EcomAccountRegister = (
  data: PostEcomV1EcomAccountRegisterData = {},
): CancelablePromise<PostEcomV1EcomAccountRegisterResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/Ecom/v1/EcomAccount/Register',
    body: data.requestBody,
    mediaType: 'application/json',
  });
};

/**
 * @param data The data for the request.
 * @param data.requestBody
 * @returns unknown Success
 * @throws ApiError
 */
export const postEcomV1EcomAccountVerifyOtp = (
  data: PostEcomV1EcomAccountVerifyOtpData = {},
): CancelablePromise<PostEcomV1EcomAccountVerifyOtpResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/Ecom/v1/EcomAccount/VerifyOtp',
    body: data.requestBody,
    mediaType: 'application/json',
  });
};

/**
 * @param data The data for the request.
 * @param data.requestBody
 * @returns unknown Success
 * @throws ApiError
 */
export const postEcomV1EcomAccountResendOtp = (
  data: PostEcomV1EcomAccountResendOtpData = {},
): CancelablePromise<PostEcomV1EcomAccountResendOtpResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/Ecom/v1/EcomAccount/ResendOtp',
    body: data.requestBody,
    mediaType: 'application/json',
  });
};

/**
 * @returns unknown Success
 * @throws ApiError
 */
export const postEcomV1EcomAccountLogOut =
  (): CancelablePromise<PostEcomV1EcomAccountLogOutResponse> => {
    return __request(OpenAPI, {
      method: 'POST',
      url: '/Ecom/v1/EcomAccount/LogOut',
    });
  };

/**
 * @param data The data for the request.
 * @param data.requestBody
 * @returns unknown Success
 * @throws ApiError
 */
export const postEcomV1EcomAccountRequestOtp = (
  data: PostEcomV1EcomAccountRequestOtpData = {},
): CancelablePromise<PostEcomV1EcomAccountRequestOtpResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/Ecom/v1/EcomAccount/RequestOtp',
    body: data.requestBody,
    mediaType: 'application/json',
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @returns unknown Success
 * @throws ApiError
 */
export const postEcomV1EcomAccountSetReceiveNotiEmail = (
  data: PostEcomV1EcomAccountSetReceiveNotiEmailData,
): CancelablePromise<PostEcomV1EcomAccountSetReceiveNotiEmailResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/Ecom/v1/EcomAccount/SetReceiveNotiEmail',
    headers: {
      Authorization: data.authorization,
    },
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.requestBody
 * @returns unknown Success
 * @throws ApiError
 */
export const postEcomV1EcomAccountLinkSocial = (
  data: PostEcomV1EcomAccountLinkSocialData,
): CancelablePromise<PostEcomV1EcomAccountLinkSocialResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/Ecom/v1/EcomAccount/LinkSocial',
    headers: {
      Authorization: data.authorization,
    },
    body: data.requestBody,
    mediaType: 'application/json',
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.authProvider
 * @returns unknown Success
 * @throws ApiError
 */
export const deleteEcomV1EcomAccountRemoveSocial = (
  data: DeleteEcomV1EcomAccountRemoveSocialData,
): CancelablePromise<DeleteEcomV1EcomAccountRemoveSocialResponse> => {
  return __request(OpenAPI, {
    method: 'DELETE',
    url: '/Ecom/v1/EcomAccount/RemoveSocial',
    headers: {
      Authorization: data.authorization,
    },
    query: {
      authProvider: data.authProvider,
    },
  });
};

/**
 * @param data The data for the request.
 * @param data.requestBody
 * @returns unknown Success
 * @throws ApiError
 */
export const postEcomMobileV1EcomAccountLogin = (
  data: PostEcomMobileV1EcomAccountLoginData = {},
): CancelablePromise<PostEcomMobileV1EcomAccountLoginResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/Ecom/mobile/v1/EcomAccount/Login',
    body: data.requestBody,
    mediaType: 'application/json',
  });
};

/**
 * @param data The data for the request.
 * @param data.requestBody
 * @returns unknown Success
 * @throws ApiError
 */
export const postEcomMobileV1EcomAccountLoginSocial = (
  data: PostEcomMobileV1EcomAccountLoginSocialData = {},
): CancelablePromise<PostEcomMobileV1EcomAccountLoginSocialResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/Ecom/mobile/v1/EcomAccount/LoginSocial',
    body: data.requestBody,
    mediaType: 'application/json',
  });
};

/**
 * @param data The data for the request.
 * @param data.requestBody
 * @returns unknown Success
 * @throws ApiError
 */
export const postEcomMobileV1EcomAccountRegister = (
  data: PostEcomMobileV1EcomAccountRegisterData = {},
): CancelablePromise<PostEcomMobileV1EcomAccountRegisterResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/Ecom/mobile/v1/EcomAccount/Register',
    body: data.requestBody,
    mediaType: 'application/json',
  });
};

/**
 * @param data The data for the request.
 * @param data.requestBody
 * @returns unknown Success
 * @throws ApiError
 */
export const postEcomMobileV1EcomAccountVerifyOtpV1 = (
  data: PostEcomMobileV1EcomAccountVerifyOtpV1Data = {},
): CancelablePromise<PostEcomMobileV1EcomAccountVerifyOtpV1Response> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/Ecom/mobile/v1/EcomAccount/VerifyOtpV1',
    body: data.requestBody,
    mediaType: 'application/json',
  });
};

/**
 * @param data The data for the request.
 * @param data.requestBody
 * @returns unknown Success
 * @throws ApiError
 */
export const postEcomMobileV1EcomAccountResendOtp = (
  data: PostEcomMobileV1EcomAccountResendOtpData = {},
): CancelablePromise<PostEcomMobileV1EcomAccountResendOtpResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/Ecom/mobile/v1/EcomAccount/ResendOtp',
    body: data.requestBody,
    mediaType: 'application/json',
  });
};

/**
 * @returns unknown Success
 * @throws ApiError
 */
export const postEcomMobileV1EcomAccountLogOut =
  (): CancelablePromise<PostEcomMobileV1EcomAccountLogOutResponse> => {
    return __request(OpenAPI, {
      method: 'POST',
      url: '/Ecom/mobile/v1/EcomAccount/LogOut',
    });
  };

/**
 * @param data The data for the request.
 * @param data.requestBody
 * @returns unknown Success
 * @throws ApiError
 */
export const postEcomMobileV1EcomAccountRequestOtp = (
  data: PostEcomMobileV1EcomAccountRequestOtpData = {},
): CancelablePromise<PostEcomMobileV1EcomAccountRequestOtpResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/Ecom/mobile/v1/EcomAccount/RequestOtp',
    body: data.requestBody,
    mediaType: 'application/json',
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.requestBody
 * @returns unknown Success
 * @throws ApiError
 */
export const deleteEcomMobileV1EcomAccountDeleteAccount = (
  data: DeleteEcomMobileV1EcomAccountDeleteAccountData,
): CancelablePromise<DeleteEcomMobileV1EcomAccountDeleteAccountResponse> => {
  return __request(OpenAPI, {
    method: 'DELETE',
    url: '/Ecom/mobile/v1/EcomAccount/DeleteAccount',
    headers: {
      Authorization: data.authorization,
    },
    body: data.requestBody,
    mediaType: 'application/json',
  });
};

/**
 * @returns unknown Success
 * @throws ApiError
 */
export const getEcomEcomAccountHomeGetOurAgents =
  (): CancelablePromise<GetEcomEcomAccountHomeGetOurAgentsResponse> => {
    return __request(OpenAPI, {
      method: 'GET',
      url: '/Ecom/EcomAccountHome/GetOurAgents',
    });
  };

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.requestBody
 * @returns unknown Success
 * @throws ApiError
 */
export const postEcomAdBannerGetByQuery = (
  data: PostEcomAdBannerGetByQueryData,
): CancelablePromise<PostEcomAdBannerGetByQueryResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/EcomAdBanner/GetByQuery',
    headers: {
      Authorization: data.authorization,
    },
    body: data.requestBody,
    mediaType: 'application/json',
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.id
 * @returns unknown Success
 * @throws ApiError
 */
export const getEcomAdBannerGetDetailForEdit = (
  data: GetEcomAdBannerGetDetailForEditData,
): CancelablePromise<GetEcomAdBannerGetDetailForEditResponse> => {
  return __request(OpenAPI, {
    method: 'GET',
    url: '/EcomAdBanner/GetDetailForEdit',
    headers: {
      Authorization: data.authorization,
    },
    query: {
      id: data.id,
    },
  });
};

/**
 * @param data The data for the request.
 * @param data.position
 * @returns unknown Success
 * @throws ApiError
 */
export const getEcomAdBannerGetAdBannerByPosition = (
  data: GetEcomAdBannerGetAdBannerByPositionData = {},
): CancelablePromise<GetEcomAdBannerGetAdBannerByPositionResponse> => {
  return __request(OpenAPI, {
    method: 'GET',
    url: '/EcomAdBanner/GetAdBannerByPosition',
    query: {
      position: data.position,
    },
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @returns unknown Success
 * @throws ApiError
 */
export const postEcomAdBannerCreate = (
  data: PostEcomAdBannerCreateData,
): CancelablePromise<PostEcomAdBannerCreateResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/EcomAdBanner/Create',
    headers: {
      Authorization: data.authorization,
    },
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @returns unknown Success
 * @throws ApiError
 */
export const putEcomAdBannerUpdate = (
  data: PutEcomAdBannerUpdateData,
): CancelablePromise<PutEcomAdBannerUpdateResponse> => {
  return __request(OpenAPI, {
    method: 'PUT',
    url: '/EcomAdBanner/Update',
    headers: {
      Authorization: data.authorization,
    },
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.requestBody
 * @returns unknown Success
 * @throws ApiError
 */
export const postEcomEcomArticleGetByQuery = (
  data: PostEcomEcomArticleGetByQueryData,
): CancelablePromise<PostEcomEcomArticleGetByQueryResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/Ecom/EcomArticle/GetByQuery',
    headers: {
      Authorization: data.authorization,
    },
    body: data.requestBody,
    mediaType: 'application/json',
  });
};

/**
 * @param data The data for the request.
 * @param data.id
 * @returns unknown Success
 * @throws ApiError
 */
export const getEcomEcomArticleGetById = (
  data: GetEcomEcomArticleGetByIdData = {},
): CancelablePromise<GetEcomEcomArticleGetByIdResponse> => {
  return __request(OpenAPI, {
    method: 'GET',
    url: '/Ecom/EcomArticle/GetById',
    query: {
      id: data.id,
    },
  });
};

/**
 * @param data The data for the request.
 * @param data.id
 * @param data.noContent
 * @returns unknown Success
 * @throws ApiError
 */
export const postEcomEcomArticleGetRelatedById = (
  data: PostEcomEcomArticleGetRelatedByIdData = {},
): CancelablePromise<PostEcomEcomArticleGetRelatedByIdResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/Ecom/EcomArticle/GetRelatedById',
    query: {
      id: data.id,
      noContent: data.noContent,
    },
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @returns unknown Success
 * @throws ApiError
 */
export const postEcomEcomArticleCreate = (
  data: PostEcomEcomArticleCreateData,
): CancelablePromise<PostEcomEcomArticleCreateResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/Ecom/EcomArticle/Create',
    headers: {
      Authorization: data.authorization,
    },
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @returns unknown Success
 * @throws ApiError
 */
export const putEcomEcomArticleUpdate = (
  data: PutEcomEcomArticleUpdateData,
): CancelablePromise<PutEcomEcomArticleUpdateResponse> => {
  return __request(OpenAPI, {
    method: 'PUT',
    url: '/Ecom/EcomArticle/Update',
    headers: {
      Authorization: data.authorization,
    },
  });
};

/**
 * @param data The data for the request.
 * @param data.requestBody
 * @returns unknown Success
 * @throws ApiError
 */
export const postEcomEcomArticleGetAll = (
  data: PostEcomEcomArticleGetAllData = {},
): CancelablePromise<PostEcomEcomArticleGetAllResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/Ecom/EcomArticle/GetAll',
    body: data.requestBody,
    mediaType: 'application/json',
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.id
 * @returns unknown Success
 * @throws ApiError
 */
export const getEcomEcomArticleGetDetailById = (
  data: GetEcomEcomArticleGetDetailByIdData,
): CancelablePromise<GetEcomEcomArticleGetDetailByIdResponse> => {
  return __request(OpenAPI, {
    method: 'GET',
    url: '/Ecom/EcomArticle/GetDetailById',
    headers: {
      Authorization: data.authorization,
    },
    query: {
      id: data.id,
    },
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.fromDate
 * @param data.toDate
 * @param data.keyword
 * @param data.cashAdvanceId
 * @param data.from
 * @param data.size
 * @returns unknown Success
 * @throws ApiError
 */
export const getEcomEcomCashAdvanceStaffGetByQuery = (
  data: GetEcomEcomCashAdvanceStaffGetByQueryData,
): CancelablePromise<GetEcomEcomCashAdvanceStaffGetByQueryResponse> => {
  return __request(OpenAPI, {
    method: 'GET',
    url: '/Ecom/EcomCashAdvanceStaff/GetByQuery',
    headers: {
      Authorization: data.authorization,
    },
    query: {
      FromDate: data.fromDate,
      ToDate: data.toDate,
      Keyword: data.keyword,
      CashAdvanceId: data.cashAdvanceId,
      From: data.from,
      Size: data.size,
    },
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.fromDate
 * @param data.toDate
 * @param data.keyword
 * @param data.cashAdvanceId
 * @param data.from
 * @param data.size
 * @returns unknown Success
 * @throws ApiError
 */
export const getEcomEcomCashAdvanceStaffGetReceiptByQuery = (
  data: GetEcomEcomCashAdvanceStaffGetReceiptByQueryData,
): CancelablePromise<GetEcomEcomCashAdvanceStaffGetReceiptByQueryResponse> => {
  return __request(OpenAPI, {
    method: 'GET',
    url: '/Ecom/EcomCashAdvanceStaff/GetReceiptByQuery',
    headers: {
      Authorization: data.authorization,
    },
    query: {
      FromDate: data.fromDate,
      ToDate: data.toDate,
      Keyword: data.keyword,
      CashAdvanceId: data.cashAdvanceId,
      From: data.from,
      Size: data.size,
    },
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.requestBody
 * @returns unknown Success
 * @throws ApiError
 */
export const postEcomEcomCashAdvanceStaffExportCashAdvance = (
  data: PostEcomEcomCashAdvanceStaffExportCashAdvanceData,
): CancelablePromise<PostEcomEcomCashAdvanceStaffExportCashAdvanceResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/Ecom/EcomCashAdvanceStaff/ExportCashAdvance',
    headers: {
      Authorization: data.authorization,
    },
    body: data.requestBody,
    mediaType: 'application/json',
  });
};

/**
 * @param data The data for the request.
 * @param data.requestBody
 * @returns unknown Success
 * @throws ApiError
 */
export const postEcomEcomCashAdvanceStaffExportOverviewCashAdvance = (
  data: PostEcomEcomCashAdvanceStaffExportOverviewCashAdvanceData = {},
): CancelablePromise<PostEcomEcomCashAdvanceStaffExportOverviewCashAdvanceResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/Ecom/EcomCashAdvanceStaff/ExportOverviewCashAdvance',
    body: data.requestBody,
    mediaType: 'application/json',
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @returns unknown Success
 * @throws ApiError
 */
export const putEcomEcomConfigUpdate = (
  data: PutEcomEcomConfigUpdateData,
): CancelablePromise<PutEcomEcomConfigUpdateResponse> => {
  return __request(OpenAPI, {
    method: 'PUT',
    url: '/Ecom/EcomConfig/Update',
    headers: {
      Authorization: data.authorization,
    },
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @returns unknown Success
 * @throws ApiError
 */
export const getEcomEcomConfigGetListZone = (
  data: GetEcomEcomConfigGetListZoneData,
): CancelablePromise<GetEcomEcomConfigGetListZoneResponse> => {
  return __request(OpenAPI, {
    method: 'GET',
    url: '/Ecom/EcomConfig/GetListZone',
    headers: {
      Authorization: data.authorization,
    },
  });
};

/**
 * @param data The data for the request.
 * @param data.key
 * @returns unknown Success
 * @throws ApiError
 */
export const getEcomEcomConfigGetZoneByKey = (
  data: GetEcomEcomConfigGetZoneByKeyData = {},
): CancelablePromise<GetEcomEcomConfigGetZoneByKeyResponse> => {
  return __request(OpenAPI, {
    method: 'GET',
    url: '/Ecom/EcomConfig/GetZoneByKey',
    query: {
      key: data.key,
    },
  });
};

/**
 * @returns unknown Success
 * @throws ApiError
 */
export const getEcomEcomConfigGetAppSettings =
  (): CancelablePromise<GetEcomEcomConfigGetAppSettingsResponse> => {
    return __request(OpenAPI, {
      method: 'GET',
      url: '/Ecom/EcomConfig/GetAppSettings',
    });
  };

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.id
 * @returns unknown Success
 * @throws ApiError
 */
export const getEcomConfigPaymentGet = (
  data: GetEcomConfigPaymentGetData,
): CancelablePromise<GetEcomConfigPaymentGetResponse> => {
  return __request(OpenAPI, {
    method: 'GET',
    url: '/EcomConfigPayment/Get',
    headers: {
      Authorization: data.authorization,
    },
    query: {
      id: data.id,
    },
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.requestBody
 * @returns unknown Success
 * @throws ApiError
 */
export const postEcomConfigPaymentGetAll = (
  data: PostEcomConfigPaymentGetAllData,
): CancelablePromise<PostEcomConfigPaymentGetAllResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/EcomConfigPayment/GetAll',
    headers: {
      Authorization: data.authorization,
    },
    body: data.requestBody,
    mediaType: 'application/json',
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @returns unknown Success
 * @throws ApiError
 */
export const postEcomConfigPaymentGetList = (
  data: PostEcomConfigPaymentGetListData,
): CancelablePromise<PostEcomConfigPaymentGetListResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/EcomConfigPayment/GetList',
    headers: {
      Authorization: data.authorization,
    },
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.requestBody
 * @returns unknown Success
 * @throws ApiError
 */
export const postEcomConfigPaymentUpdate = (
  data: PostEcomConfigPaymentUpdateData,
): CancelablePromise<PostEcomConfigPaymentUpdateResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/EcomConfigPayment/Update',
    headers: {
      Authorization: data.authorization,
    },
    body: data.requestBody,
    mediaType: 'application/json',
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @returns unknown Success
 * @throws ApiError
 */
export const postEcomConfigPaymentMigrationPayment = (
  data: PostEcomConfigPaymentMigrationPaymentData,
): CancelablePromise<PostEcomConfigPaymentMigrationPaymentResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/EcomConfigPayment/MigrationPayment',
    headers: {
      Authorization: data.authorization,
    },
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.requestBody
 * @returns unknown Success
 * @throws ApiError
 */
export const postEcomEcomContactGetByQuery = (
  data: PostEcomEcomContactGetByQueryData,
): CancelablePromise<PostEcomEcomContactGetByQueryResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/Ecom/EcomContact/GetByQuery',
    headers: {
      Authorization: data.authorization,
    },
    body: data.requestBody,
    mediaType: 'application/json',
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.requestBody
 * @returns unknown Success
 * @throws ApiError
 */
export const postEcomEcomContactGetByQueryByStaff = (
  data: PostEcomEcomContactGetByQueryByStaffData,
): CancelablePromise<PostEcomEcomContactGetByQueryByStaffResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/Ecom/EcomContact/GetByQueryByStaff',
    headers: {
      Authorization: data.authorization,
    },
    body: data.requestBody,
    mediaType: 'application/json',
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.id
 * @returns unknown Success
 * @throws ApiError
 */
export const getEcomEcomContactGetById = (
  data: GetEcomEcomContactGetByIdData,
): CancelablePromise<GetEcomEcomContactGetByIdResponse> => {
  return __request(OpenAPI, {
    method: 'GET',
    url: '/Ecom/EcomContact/GetById',
    headers: {
      Authorization: data.authorization,
    },
    query: {
      id: data.id,
    },
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.requestBody
 * @returns unknown Success
 * @throws ApiError
 */
export const postEcomEcomContactUpdate = (
  data: PostEcomEcomContactUpdateData,
): CancelablePromise<PostEcomEcomContactUpdateResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/Ecom/EcomContact/Update',
    headers: {
      Authorization: data.authorization,
    },
    body: data.requestBody,
    mediaType: 'application/json',
  });
};

/**
 * @param data The data for the request.
 * @param data.requestBody
 * @returns unknown Success
 * @throws ApiError
 */
export const postEcomEcomContactCreate = (
  data: PostEcomEcomContactCreateData = {},
): CancelablePromise<PostEcomEcomContactCreateResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/Ecom/EcomContact/Create',
    body: data.requestBody,
    mediaType: 'application/json',
  });
};

/**
 * @param data The data for the request.
 * @param data.requestBody
 * @returns unknown Success
 * @throws ApiError
 */
export const postEcomEcomContactContactUs = (
  data: PostEcomEcomContactContactUsData = {},
): CancelablePromise<PostEcomEcomContactContactUsResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/Ecom/EcomContact/ContactUs',
    body: data.requestBody,
    mediaType: 'application/json',
  });
};

/**
 * @param data The data for the request.
 * @param data.requestBody
 * @returns unknown Success
 * @throws ApiError
 */
export const postEcomEcomContactSubscriber = (
  data: PostEcomEcomContactSubscriberData = {},
): CancelablePromise<PostEcomEcomContactSubscriberResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/Ecom/EcomContact/Subscriber',
    body: data.requestBody,
    mediaType: 'application/json',
  });
};

/**
 * @returns unknown Success
 * @throws ApiError
 */
export const postEcomConversationCreate =
  (): CancelablePromise<PostEcomConversationCreateResponse> => {
    return __request(OpenAPI, {
      method: 'POST',
      url: '/EcomConversation/Create',
    });
  };

/**
 * @param data The data for the request.
 * @param data.requestBody
 * @returns unknown Success
 * @throws ApiError
 */
export const postEcomConversationGetByQuery = (
  data: PostEcomConversationGetByQueryData = {},
): CancelablePromise<PostEcomConversationGetByQueryResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/EcomConversation/GetByQuery',
    body: data.requestBody,
    mediaType: 'application/json',
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.requestBody
 * @returns unknown Success
 * @throws ApiError
 */
export const postEcomEcomFeeStatementCreateTest = (
  data: PostEcomEcomFeeStatementCreateTestData,
): CancelablePromise<PostEcomEcomFeeStatementCreateTestResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/Ecom/EcomFeeStatement/CreateTest',
    headers: {
      Authorization: data.authorization,
    },
    body: data.requestBody,
    mediaType: 'application/json',
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @returns unknown Success
 * @throws ApiError
 */
export const postEcomEcomFindAgentCreate = (
  data: PostEcomEcomFindAgentCreateData,
): CancelablePromise<PostEcomEcomFindAgentCreateResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/Ecom/EcomFindAgent/Create',
    headers: {
      Authorization: data.authorization,
    },
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @returns unknown Success
 * @throws ApiError
 */
export const putEcomEcomFindAgentUpdate = (
  data: PutEcomEcomFindAgentUpdateData,
): CancelablePromise<PutEcomEcomFindAgentUpdateResponse> => {
  return __request(OpenAPI, {
    method: 'PUT',
    url: '/Ecom/EcomFindAgent/Update',
    headers: {
      Authorization: data.authorization,
    },
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.requestBody
 * @returns unknown Success
 * @throws ApiError
 */
export const postEcomEcomFindAgentGetAll = (
  data: PostEcomEcomFindAgentGetAllData,
): CancelablePromise<PostEcomEcomFindAgentGetAllResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/Ecom/EcomFindAgent/GetAll',
    headers: {
      Authorization: data.authorization,
    },
    body: data.requestBody,
    mediaType: 'application/json',
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.id
 * @returns unknown Success
 * @throws ApiError
 */
export const getEcomEcomFindAgentGet = (
  data: GetEcomEcomFindAgentGetData,
): CancelablePromise<GetEcomEcomFindAgentGetResponse> => {
  return __request(OpenAPI, {
    method: 'GET',
    url: '/Ecom/EcomFindAgent/Get',
    headers: {
      Authorization: data.authorization,
    },
    query: {
      id: data.id,
    },
  });
};

/**
 * @returns unknown Success
 * @throws ApiError
 */
export const getEcomEcomFindAgentGetList =
  (): CancelablePromise<GetEcomEcomFindAgentGetListResponse> => {
    return __request(OpenAPI, {
      method: 'GET',
      url: '/Ecom/EcomFindAgent/GetList',
    });
  };

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.requestBody
 * @returns unknown Success
 * @throws ApiError
 */
export const putEcomEcomFindAgentUpdateOrder = (
  data: PutEcomEcomFindAgentUpdateOrderData,
): CancelablePromise<PutEcomEcomFindAgentUpdateOrderResponse> => {
  return __request(OpenAPI, {
    method: 'PUT',
    url: '/Ecom/EcomFindAgent/UpdateOrder',
    headers: {
      Authorization: data.authorization,
    },
    body: data.requestBody,
    mediaType: 'application/json',
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.id
 * @returns unknown Success
 * @throws ApiError
 */
export const deleteEcomEcomFindAgentDelete = (
  data: DeleteEcomEcomFindAgentDeleteData,
): CancelablePromise<DeleteEcomEcomFindAgentDeleteResponse> => {
  return __request(OpenAPI, {
    method: 'DELETE',
    url: '/Ecom/EcomFindAgent/Delete',
    headers: {
      Authorization: data.authorization,
    },
    query: {
      id: data.id,
    },
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.type
 * @param data.requestBody
 * @returns unknown Success
 * @throws ApiError
 */
export const postEcomEcomInquiryGetByQuery = (
  data: PostEcomEcomInquiryGetByQueryData,
): CancelablePromise<PostEcomEcomInquiryGetByQueryResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/Ecom/EcomInquiry/GetByQuery',
    headers: {
      Authorization: data.authorization,
    },
    query: {
      type: data.type,
    },
    body: data.requestBody,
    mediaType: 'application/json',
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.requestBody
 * @returns unknown Success
 * @throws ApiError
 */
export const postEcomEcomInquiryGetByQueryForStaff = (
  data: PostEcomEcomInquiryGetByQueryForStaffData,
): CancelablePromise<PostEcomEcomInquiryGetByQueryForStaffResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/Ecom/EcomInquiry/GetByQueryForStaff',
    headers: {
      Authorization: data.authorization,
    },
    body: data.requestBody,
    mediaType: 'application/json',
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.id
 * @returns unknown Success
 * @throws ApiError
 */
export const getEcomEcomInquiryGetById = (
  data: GetEcomEcomInquiryGetByIdData,
): CancelablePromise<GetEcomEcomInquiryGetByIdResponse> => {
  return __request(OpenAPI, {
    method: 'GET',
    url: '/Ecom/EcomInquiry/GetById',
    headers: {
      Authorization: data.authorization,
    },
    query: {
      id: data.id,
    },
  });
};

/**
 * @param data The data for the request.
 * @param data.requestBody
 * @returns unknown Success
 * @throws ApiError
 */
export const postEcomEcomInquiryCreate = (
  data: PostEcomEcomInquiryCreateData = {},
): CancelablePromise<PostEcomEcomInquiryCreateResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/Ecom/EcomInquiry/Create',
    body: data.requestBody,
    mediaType: 'application/json',
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.requestBody
 * @returns unknown Success
 * @throws ApiError
 */
export const postEcomEcomInquiryUpdate = (
  data: PostEcomEcomInquiryUpdateData,
): CancelablePromise<PostEcomEcomInquiryUpdateResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/Ecom/EcomInquiry/Update',
    headers: {
      Authorization: data.authorization,
    },
    body: data.requestBody,
    mediaType: 'application/json',
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.requestBody
 * @returns unknown Success
 * @throws ApiError
 */
export const postEcomEcomInquiryUpdateStatus = (
  data: PostEcomEcomInquiryUpdateStatusData,
): CancelablePromise<PostEcomEcomInquiryUpdateStatusResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/Ecom/EcomInquiry/UpdateStatus',
    headers: {
      Authorization: data.authorization,
    },
    body: data.requestBody,
    mediaType: 'application/json',
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @returns unknown Success
 * @throws ApiError
 */
export const getEcomEcomInquiryInquirySummary = (
  data: GetEcomEcomInquiryInquirySummaryData,
): CancelablePromise<GetEcomEcomInquiryInquirySummaryResponse> => {
  return __request(OpenAPI, {
    method: 'GET',
    url: '/Ecom/EcomInquiry/InquirySummary',
    headers: {
      Authorization: data.authorization,
    },
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @returns unknown Success
 * @throws ApiError
 */
export const getEcomEcomInquiryInquirySummaryMyTicket = (
  data: GetEcomEcomInquiryInquirySummaryMyTicketData,
): CancelablePromise<GetEcomEcomInquiryInquirySummaryMyTicketResponse> => {
  return __request(OpenAPI, {
    method: 'GET',
    url: '/Ecom/EcomInquiry/InquirySummaryMyTicket',
    headers: {
      Authorization: data.authorization,
    },
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.requestBody
 * @returns unknown Success
 * @throws ApiError
 */
export const postEcomV1EcomInquiryCreate = (
  data: PostEcomV1EcomInquiryCreateData,
): CancelablePromise<PostEcomV1EcomInquiryCreateResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/Ecom/v1/EcomInquiry/Create',
    headers: {
      Authorization: data.authorization,
    },
    body: data.requestBody,
    mediaType: 'application/json',
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.referenceId
 * @param data.from
 * @param data.size
 * @returns unknown Success
 * @throws ApiError
 */
export const getEcomV1EcomInquiryGetConversation = (
  data: GetEcomV1EcomInquiryGetConversationData,
): CancelablePromise<GetEcomV1EcomInquiryGetConversationResponse> => {
  return __request(OpenAPI, {
    method: 'GET',
    url: '/Ecom/v1/EcomInquiry/GetConversation',
    headers: {
      Authorization: data.authorization,
    },
    query: {
      ReferenceId: data.referenceId,
      From: data.from,
      Size: data.size,
    },
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @returns unknown Success
 * @throws ApiError
 */
export const postEcomInquiryConversationCreate = (
  data: PostEcomInquiryConversationCreateData,
): CancelablePromise<PostEcomInquiryConversationCreateResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/EcomInquiryConversation/Create',
    headers: {
      Authorization: data.authorization,
    },
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.requestBody
 * @returns unknown Success
 * @throws ApiError
 */
export const postEcomInquiryConversationGetMyConversation = (
  data: PostEcomInquiryConversationGetMyConversationData,
): CancelablePromise<PostEcomInquiryConversationGetMyConversationResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/EcomInquiryConversation/GetMyConversation',
    headers: {
      Authorization: data.authorization,
    },
    body: data.requestBody,
    mediaType: 'application/json',
  });
};

/**
 * @returns unknown Success
 * @throws ApiError
 */
export const getEcomInteriorGetList = (): CancelablePromise<GetEcomInteriorGetListResponse> => {
  return __request(OpenAPI, {
    method: 'GET',
    url: '/EcomInterior/GetList',
  });
};

/**
 * @param data The data for the request.
 * @param data.id
 * @returns unknown Success
 * @throws ApiError
 */
export const getEcomListingGetSimple = (
  data: GetEcomListingGetSimpleData = {},
): CancelablePromise<GetEcomListingGetSimpleResponse> => {
  return __request(OpenAPI, {
    method: 'GET',
    url: '/EcomListing/GetSimple',
    query: {
      id: data.id,
    },
  });
};

/**
 * @param data The data for the request.
 * @param data.requestBody
 * @returns unknown Success
 * @throws ApiError
 */
export const postEcomListingGetByQuery = (
  data: PostEcomListingGetByQueryData = {},
): CancelablePromise<PostEcomListingGetByQueryResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/EcomListing/GetByQuery',
    body: data.requestBody,
    mediaType: 'application/json',
  });
};

/**
 * @param data The data for the request.
 * @param data.requestBody
 * @returns unknown Success
 * @throws ApiError
 */
export const postEcomListingGetForSellByQuery = (
  data: PostEcomListingGetForSellByQueryData = {},
): CancelablePromise<PostEcomListingGetForSellByQueryResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/EcomListing/GetForSellByQuery',
    body: data.requestBody,
    mediaType: 'application/json',
  });
};

/**
 * @param data The data for the request.
 * @param data.requestBody
 * @returns unknown Success
 * @throws ApiError
 */
export const postEcomListingGetForRentByQuery = (
  data: PostEcomListingGetForRentByQueryData = {},
): CancelablePromise<PostEcomListingGetForRentByQueryResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/EcomListing/GetForRentByQuery',
    body: data.requestBody,
    mediaType: 'application/json',
  });
};

/**
 * @param data The data for the request.
 * @param data.listingId
 * @param data.requestBody
 * @returns unknown Success
 * @throws ApiError
 */
export const postEcomListingGetSimilarInProjectQuery = (
  data: PostEcomListingGetSimilarInProjectQueryData = {},
): CancelablePromise<PostEcomListingGetSimilarInProjectQueryResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/EcomListing/GetSimilarInProjectQuery',
    query: {
      listingId: data.listingId,
    },
    body: data.requestBody,
    mediaType: 'application/json',
  });
};

/**
 * @param data The data for the request.
 * @param data.listingId
 * @param data.requestBody
 * @returns unknown Success
 * @throws ApiError
 */
export const postEcomListingGetSimilarNearByProjectQuery = (
  data: PostEcomListingGetSimilarNearByProjectQueryData = {},
): CancelablePromise<PostEcomListingGetSimilarNearByProjectQueryResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/EcomListing/GetSimilarNearByProjectQuery',
    query: {
      listingId: data.listingId,
    },
    body: data.requestBody,
    mediaType: 'application/json',
  });
};

/**
 * @param data The data for the request.
 * @param data.id
 * @returns unknown Success
 * @throws ApiError
 */
export const getEcomListingGetDetailByQuery = (
  data: GetEcomListingGetDetailByQueryData = {},
): CancelablePromise<GetEcomListingGetDetailByQueryResponse> => {
  return __request(OpenAPI, {
    method: 'GET',
    url: '/EcomListing/GetDetailByQuery',
    query: {
      id: data.id,
    },
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.id
 * @returns unknown Success
 * @throws ApiError
 */
export const getEcomListingPreviewListingById = (
  data: GetEcomListingPreviewListingByIdData,
): CancelablePromise<GetEcomListingPreviewListingByIdResponse> => {
  return __request(OpenAPI, {
    method: 'GET',
    url: '/EcomListing/PreviewListingById',
    headers: {
      Authorization: data.authorization,
    },
    query: {
      id: data.id,
    },
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @returns unknown Success
 * @throws ApiError
 */
export const postEcomListingCreate = (
  data: PostEcomListingCreateData,
): CancelablePromise<PostEcomListingCreateResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/EcomListing/Create',
    headers: {
      Authorization: data.authorization,
    },
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @returns unknown Success
 * @throws ApiError
 */
export const putEcomListingUpdate = (
  data: PutEcomListingUpdateData,
): CancelablePromise<PutEcomListingUpdateResponse> => {
  return __request(OpenAPI, {
    method: 'PUT',
    url: '/EcomListing/Update',
    headers: {
      Authorization: data.authorization,
    },
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.requestBody
 * @returns unknown Success
 * @throws ApiError
 */
export const postEcomListingPush = (
  data: PostEcomListingPushData,
): CancelablePromise<PostEcomListingPushResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/EcomListing/Push',
    headers: {
      Authorization: data.authorization,
    },
    body: data.requestBody,
    mediaType: 'application/json',
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.requestBody
 * @returns unknown Success
 * @throws ApiError
 */
export const postEcomListingUpdateStatus = (
  data: PostEcomListingUpdateStatusData,
): CancelablePromise<PostEcomListingUpdateStatusResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/EcomListing/UpdateStatus',
    headers: {
      Authorization: data.authorization,
    },
    body: data.requestBody,
    mediaType: 'application/json',
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.requestBody
 * @returns unknown Success
 * @throws ApiError
 */
export const postEcomListingUpdateActualPrice = (
  data: PostEcomListingUpdateActualPriceData,
): CancelablePromise<PostEcomListingUpdateActualPriceResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/EcomListing/UpdateActualPrice',
    headers: {
      Authorization: data.authorization,
    },
    body: data.requestBody,
    mediaType: 'application/json',
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.id
 * @returns unknown Success
 * @throws ApiError
 */
export const getEcomListingGetDetailForEdit = (
  data: GetEcomListingGetDetailForEditData,
): CancelablePromise<GetEcomListingGetDetailForEditResponse> => {
  return __request(OpenAPI, {
    method: 'GET',
    url: '/EcomListing/GetDetailForEdit',
    headers: {
      Authorization: data.authorization,
    },
    query: {
      id: data.id,
    },
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.id
 * @returns unknown Success
 * @throws ApiError
 */
export const getEcomListingGetDetailMyListingByQuery = (
  data: GetEcomListingGetDetailMyListingByQueryData,
): CancelablePromise<GetEcomListingGetDetailMyListingByQueryResponse> => {
  return __request(OpenAPI, {
    method: 'GET',
    url: '/EcomListing/GetDetailMyListingByQuery',
    headers: {
      Authorization: data.authorization,
    },
    query: {
      id: data.id,
    },
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.requestBody
 * @returns unknown Success
 * @throws ApiError
 */
export const postEcomListingGetMyListing = (
  data: PostEcomListingGetMyListingData,
): CancelablePromise<PostEcomListingGetMyListingResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/EcomListing/GetMyListing',
    headers: {
      Authorization: data.authorization,
    },
    body: data.requestBody,
    mediaType: 'application/json',
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.listingId
 * @returns unknown Success
 * @throws ApiError
 */
export const getEcomListingGetUnitPriceCheckByListing = (
  data: GetEcomListingGetUnitPriceCheckByListingData,
): CancelablePromise<GetEcomListingGetUnitPriceCheckByListingResponse> => {
  return __request(OpenAPI, {
    method: 'GET',
    url: '/EcomListing/GetUnitPriceCheckByListing',
    headers: {
      Authorization: data.authorization,
    },
    query: {
      listingId: data.listingId,
    },
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.id
 * @param data.size
 * @returns unknown Success
 * @throws ApiError
 */
export const getEcomListingGetLocationNearByListing = (
  data: GetEcomListingGetLocationNearByListingData,
): CancelablePromise<GetEcomListingGetLocationNearByListingResponse> => {
  return __request(OpenAPI, {
    method: 'GET',
    url: '/EcomListing/GetLocationNearByListing',
    headers: {
      Authorization: data.authorization,
    },
    query: {
      id: data.id,
      size: data.size,
    },
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @returns unknown Success
 * @throws ApiError
 */
export const putEcomListingMigrate = (
  data: PutEcomListingMigrateData,
): CancelablePromise<PutEcomListingMigrateResponse> => {
  return __request(OpenAPI, {
    method: 'PUT',
    url: '/EcomListing/Migrate',
    headers: {
      Authorization: data.authorization,
    },
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.id
 * @returns unknown Success
 * @throws ApiError
 */
export const deleteEcomListingDelete = (
  data: DeleteEcomListingDeleteData,
): CancelablePromise<DeleteEcomListingDeleteResponse> => {
  return __request(OpenAPI, {
    method: 'DELETE',
    url: '/EcomListing/Delete',
    headers: {
      Authorization: data.authorization,
    },
    query: {
      id: data.id,
    },
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.requestBody
 * @returns unknown Success
 * @throws ApiError
 */
export const postEcomV1EcomListingCreate = (
  data: PostEcomV1EcomListingCreateData,
): CancelablePromise<PostEcomV1EcomListingCreateResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/Ecom/v1/EcomListing/Create',
    headers: {
      Authorization: data.authorization,
    },
    body: data.requestBody,
    mediaType: 'application/json',
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.requestBody
 * @returns unknown Success
 * @throws ApiError
 */
export const putEcomV1EcomListingUpdate = (
  data: PutEcomV1EcomListingUpdateData,
): CancelablePromise<PutEcomV1EcomListingUpdateResponse> => {
  return __request(OpenAPI, {
    method: 'PUT',
    url: '/Ecom/v1/EcomListing/Update',
    headers: {
      Authorization: data.authorization,
    },
    body: data.requestBody,
    mediaType: 'application/json',
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.requestBody
 * @returns unknown Success
 * @throws ApiError
 */
export const postEcomListingAmenitiesGetByQuery = (
  data: PostEcomListingAmenitiesGetByQueryData,
): CancelablePromise<PostEcomListingAmenitiesGetByQueryResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/EcomListingAmenities/GetByQuery',
    headers: {
      Authorization: data.authorization,
    },
    body: data.requestBody,
    mediaType: 'application/json',
  });
};

/**
 * @param data The data for the request.
 * @param data.type
 * @returns unknown Success
 * @throws ApiError
 */
export const getEcomListingAmenitiesGetList = (
  data: GetEcomListingAmenitiesGetListData = {},
): CancelablePromise<GetEcomListingAmenitiesGetListResponse> => {
  return __request(OpenAPI, {
    method: 'GET',
    url: '/EcomListingAmenities/GetList',
    query: {
      type: data.type,
    },
  });
};

/**
 * @returns unknown Success
 * @throws ApiError
 */
export const getEcomListingAmenitiesMigrationAmenities =
  (): CancelablePromise<GetEcomListingAmenitiesMigrationAmenitiesResponse> => {
    return __request(OpenAPI, {
      method: 'GET',
      url: '/EcomListingAmenities/MigrationAmenities',
    });
  };

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @returns unknown Success
 * @throws ApiError
 */
export const postEcomListingAmenitiesCreate = (
  data: PostEcomListingAmenitiesCreateData,
): CancelablePromise<PostEcomListingAmenitiesCreateResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/EcomListingAmenities/Create',
    headers: {
      Authorization: data.authorization,
    },
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @returns unknown Success
 * @throws ApiError
 */
export const putEcomListingAmenitiesUpdate = (
  data: PutEcomListingAmenitiesUpdateData,
): CancelablePromise<PutEcomListingAmenitiesUpdateResponse> => {
  return __request(OpenAPI, {
    method: 'PUT',
    url: '/EcomListingAmenities/Update',
    headers: {
      Authorization: data.authorization,
    },
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.id
 * @returns unknown Success
 * @throws ApiError
 */
export const getEcomListingAmenitiesGetDetailForEdit = (
  data: GetEcomListingAmenitiesGetDetailForEditData,
): CancelablePromise<GetEcomListingAmenitiesGetDetailForEditResponse> => {
  return __request(OpenAPI, {
    method: 'GET',
    url: '/EcomListingAmenities/GetDetailForEdit',
    headers: {
      Authorization: data.authorization,
    },
    query: {
      id: data.id,
    },
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.requestBody
 * @returns unknown Success
 * @throws ApiError
 */
export const postEcomListingCategoryGetByQuery = (
  data: PostEcomListingCategoryGetByQueryData,
): CancelablePromise<PostEcomListingCategoryGetByQueryResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/EcomListingCategory/GetByQuery',
    headers: {
      Authorization: data.authorization,
    },
    body: data.requestBody,
    mediaType: 'application/json',
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.id
 * @returns unknown Success
 * @throws ApiError
 */
export const getEcomListingCategoryGetById = (
  data: GetEcomListingCategoryGetByIdData,
): CancelablePromise<GetEcomListingCategoryGetByIdResponse> => {
  return __request(OpenAPI, {
    method: 'GET',
    url: '/EcomListingCategory/GetById',
    headers: {
      Authorization: data.authorization,
    },
    query: {
      id: data.id,
    },
  });
};

/**
 * @param data The data for the request.
 * @param data.type
 * @returns unknown Success
 * @throws ApiError
 */
export const getEcomListingCategoryGetList = (
  data: GetEcomListingCategoryGetListData = {},
): CancelablePromise<GetEcomListingCategoryGetListResponse> => {
  return __request(OpenAPI, {
    method: 'GET',
    url: '/EcomListingCategory/GetList',
    query: {
      type: data.type,
    },
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @returns unknown Success
 * @throws ApiError
 */
export const postEcomListingCategoryCreate = (
  data: PostEcomListingCategoryCreateData,
): CancelablePromise<PostEcomListingCategoryCreateResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/EcomListingCategory/Create',
    headers: {
      Authorization: data.authorization,
    },
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @returns unknown Success
 * @throws ApiError
 */
export const putEcomListingCategoryUpdate = (
  data: PutEcomListingCategoryUpdateData,
): CancelablePromise<PutEcomListingCategoryUpdateResponse> => {
  return __request(OpenAPI, {
    method: 'PUT',
    url: '/EcomListingCategory/Update',
    headers: {
      Authorization: data.authorization,
    },
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.id
 * @returns unknown Success
 * @throws ApiError
 */
export const getEcomListingCategoryUpdateStatus = (
  data: GetEcomListingCategoryUpdateStatusData,
): CancelablePromise<GetEcomListingCategoryUpdateStatusResponse> => {
  return __request(OpenAPI, {
    method: 'GET',
    url: '/EcomListingCategory/UpdateStatus',
    headers: {
      Authorization: data.authorization,
    },
    query: {
      id: data.id,
    },
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.requestBody
 * @returns unknown Success
 * @throws ApiError
 */
export const postEcomListingCategoryUpdateOrder = (
  data: PostEcomListingCategoryUpdateOrderData,
): CancelablePromise<PostEcomListingCategoryUpdateOrderResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/EcomListingCategory/UpdateOrder',
    headers: {
      Authorization: data.authorization,
    },
    body: data.requestBody,
    mediaType: 'application/json',
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.requestBody
 * @returns unknown Success
 * @throws ApiError
 */
export const postEcomListingFavoriteFavorite = (
  data: PostEcomListingFavoriteFavoriteData,
): CancelablePromise<PostEcomListingFavoriteFavoriteResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/EcomListingFavorite/Favorite',
    headers: {
      Authorization: data.authorization,
    },
    body: data.requestBody,
    mediaType: 'application/json',
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.requestBody
 * @returns unknown Success
 * @throws ApiError
 */
export const postEcomListingFavoriteGetMyFavorite = (
  data: PostEcomListingFavoriteGetMyFavoriteData,
): CancelablePromise<PostEcomListingFavoriteGetMyFavoriteResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/EcomListingFavorite/GetMyFavorite',
    headers: {
      Authorization: data.authorization,
    },
    body: data.requestBody,
    mediaType: 'application/json',
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.requestBody
 * @returns unknown Success
 * @throws ApiError
 */
export const postEcomListingFavoriteCompareFavorite = (
  data: PostEcomListingFavoriteCompareFavoriteData,
): CancelablePromise<PostEcomListingFavoriteCompareFavoriteResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/EcomListingFavorite/CompareFavorite',
    headers: {
      Authorization: data.authorization,
    },
    body: data.requestBody,
    mediaType: 'application/json',
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.requestBody
 * @returns unknown Success
 * @throws ApiError
 */
export const postEcomMobileV1EcomListingFavoriteGetMyFavoriteMobile = (
  data: PostEcomMobileV1EcomListingFavoriteGetMyFavoriteMobileData,
): CancelablePromise<PostEcomMobileV1EcomListingFavoriteGetMyFavoriteMobileResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/Ecom/mobile/v1/EcomListingFavorite/GetMyFavoriteMobile',
    headers: {
      Authorization: data.authorization,
    },
    body: data.requestBody,
    mediaType: 'application/json',
  });
};

/**
 * @param data The data for the request.
 * @param data.type
 * @returns unknown Success
 * @throws ApiError
 */
export const getEcomListingMasterDataGetAmenities = (
  data: GetEcomListingMasterDataGetAmenitiesData = {},
): CancelablePromise<GetEcomListingMasterDataGetAmenitiesResponse> => {
  return __request(OpenAPI, {
    method: 'GET',
    url: '/EcomListingMasterData/GetAmenities',
    query: {
      type: data.type,
    },
  });
};

/**
 * @returns unknown Success
 * @throws ApiError
 */
export const getEcomListingMasterDataGetViews =
  (): CancelablePromise<GetEcomListingMasterDataGetViewsResponse> => {
    return __request(OpenAPI, {
      method: 'GET',
      url: '/EcomListingMasterData/GetViews',
    });
  };

/**
 * @returns unknown Success
 * @throws ApiError
 */
export const getEcomListingMasterDataGetInteriors =
  (): CancelablePromise<GetEcomListingMasterDataGetInteriorsResponse> => {
    return __request(OpenAPI, {
      method: 'GET',
      url: '/EcomListingMasterData/GetInteriors',
    });
  };

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.requestBody
 * @returns unknown Success
 * @throws ApiError
 */
export const postEcomEcomListingMemberPackageRedeemApackage = (
  data: PostEcomEcomListingMemberPackageRedeemApackageData,
): CancelablePromise<PostEcomEcomListingMemberPackageRedeemApackageResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/Ecom/EcomListingMemberPackage/RedeemAPackage',
    headers: {
      Authorization: data.authorization,
    },
    body: data.requestBody,
    mediaType: 'application/json',
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.requestBody
 * @returns unknown Success
 * @throws ApiError
 */
export const postEcomEcomListingMemberPackageRedeemApush = (
  data: PostEcomEcomListingMemberPackageRedeemApushData,
): CancelablePromise<PostEcomEcomListingMemberPackageRedeemApushResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/Ecom/EcomListingMemberPackage/RedeemAPush',
    headers: {
      Authorization: data.authorization,
    },
    body: data.requestBody,
    mediaType: 'application/json',
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @returns unknown Success
 * @throws ApiError
 */
export const getEcomEcomListingMemberPackageGetMemberPackageProfile = (
  data: GetEcomEcomListingMemberPackageGetMemberPackageProfileData,
): CancelablePromise<GetEcomEcomListingMemberPackageGetMemberPackageProfileResponse> => {
  return __request(OpenAPI, {
    method: 'GET',
    url: '/Ecom/EcomListingMemberPackage/GetMemberPackageProfile',
    headers: {
      Authorization: data.authorization,
    },
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.keyword
 * @param data.packageType
 * @param data.type
 * @param data.fromDate
 * @param data.toDate
 * @param data.quantityOption
 * @param data.userTypes
 * @param data.from
 * @param data.size
 * @returns unknown Success
 * @throws ApiError
 */
export const getEcomEcomListingMemberPackageGetTransactionPackageForStaff = (
  data: GetEcomEcomListingMemberPackageGetTransactionPackageForStaffData,
): CancelablePromise<GetEcomEcomListingMemberPackageGetTransactionPackageForStaffResponse> => {
  return __request(OpenAPI, {
    method: 'GET',
    url: '/Ecom/EcomListingMemberPackage/GetTransactionPackageForStaff',
    headers: {
      Authorization: data.authorization,
    },
    query: {
      Keyword: data.keyword,
      PackageType: data.packageType,
      Type: data.type,
      FromDate: data.fromDate,
      ToDate: data.toDate,
      QuantityOption: data.quantityOption,
      UserTypes: data.userTypes,
      From: data.from,
      Size: data.size,
    },
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.keyword
 * @param data.packageType
 * @param data.type
 * @param data.fromDate
 * @param data.toDate
 * @param data.quantityOption
 * @param data.userTypes
 * @param data.from
 * @param data.size
 * @returns unknown Success
 * @throws ApiError
 */
export const getEcomEcomListingMemberPackageGetTransactionPushForStaff = (
  data: GetEcomEcomListingMemberPackageGetTransactionPushForStaffData,
): CancelablePromise<GetEcomEcomListingMemberPackageGetTransactionPushForStaffResponse> => {
  return __request(OpenAPI, {
    method: 'GET',
    url: '/Ecom/EcomListingMemberPackage/GetTransactionPushForStaff',
    headers: {
      Authorization: data.authorization,
    },
    query: {
      Keyword: data.keyword,
      PackageType: data.packageType,
      Type: data.type,
      FromDate: data.fromDate,
      ToDate: data.toDate,
      QuantityOption: data.quantityOption,
      UserTypes: data.userTypes,
      From: data.from,
      Size: data.size,
    },
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.requestBody
 * @returns unknown Success
 * @throws ApiError
 */
export const postEcomEcomListingMemberPackageExportTransactionPackage = (
  data: PostEcomEcomListingMemberPackageExportTransactionPackageData,
): CancelablePromise<PostEcomEcomListingMemberPackageExportTransactionPackageResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/Ecom/EcomListingMemberPackage/ExportTransactionPackage',
    headers: {
      Authorization: data.authorization,
    },
    body: data.requestBody,
    mediaType: 'application/json',
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.requestBody
 * @returns unknown Success
 * @throws ApiError
 */
export const postEcomEcomListingMemberPackageExportTransactionPush = (
  data: PostEcomEcomListingMemberPackageExportTransactionPushData,
): CancelablePromise<PostEcomEcomListingMemberPackageExportTransactionPushResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/Ecom/EcomListingMemberPackage/ExportTransactionPush',
    headers: {
      Authorization: data.authorization,
    },
    body: data.requestBody,
    mediaType: 'application/json',
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.keyword
 * @param data.packageType
 * @param data.type
 * @param data.fromDate
 * @param data.toDate
 * @param data.quantityOption
 * @param data.userTypes
 * @param data.from
 * @param data.size
 * @returns unknown Success
 * @throws ApiError
 */
export const getEcomEcomListingMemberPackageGetMyTransactionPackage = (
  data: GetEcomEcomListingMemberPackageGetMyTransactionPackageData,
): CancelablePromise<GetEcomEcomListingMemberPackageGetMyTransactionPackageResponse> => {
  return __request(OpenAPI, {
    method: 'GET',
    url: '/Ecom/EcomListingMemberPackage/GetMyTransactionPackage',
    headers: {
      Authorization: data.authorization,
    },
    query: {
      Keyword: data.keyword,
      PackageType: data.packageType,
      Type: data.type,
      FromDate: data.fromDate,
      ToDate: data.toDate,
      QuantityOption: data.quantityOption,
      UserTypes: data.userTypes,
      From: data.from,
      Size: data.size,
    },
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.keyword
 * @param data.packageType
 * @param data.type
 * @param data.fromDate
 * @param data.toDate
 * @param data.quantityOption
 * @param data.userTypes
 * @param data.from
 * @param data.size
 * @returns unknown Success
 * @throws ApiError
 */
export const getEcomEcomListingMemberPackageGetMyTransactionPush = (
  data: GetEcomEcomListingMemberPackageGetMyTransactionPushData,
): CancelablePromise<GetEcomEcomListingMemberPackageGetMyTransactionPushResponse> => {
  return __request(OpenAPI, {
    method: 'GET',
    url: '/Ecom/EcomListingMemberPackage/GetMyTransactionPush',
    headers: {
      Authorization: data.authorization,
    },
    query: {
      Keyword: data.keyword,
      PackageType: data.packageType,
      Type: data.type,
      FromDate: data.fromDate,
      ToDate: data.toDate,
      QuantityOption: data.quantityOption,
      UserTypes: data.userTypes,
      From: data.from,
      Size: data.size,
    },
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.type
 * @param data._package
 * @returns unknown Success
 * @throws ApiError
 */
export const getEcomEcomListingPackageGetList = (
  data: GetEcomEcomListingPackageGetListData,
): CancelablePromise<GetEcomEcomListingPackageGetListResponse> => {
  return __request(OpenAPI, {
    method: 'GET',
    url: '/Ecom/EcomListingPackage/GetList',
    headers: {
      Authorization: data.authorization,
    },
    query: {
      type: data.type,
      package: data._package,
    },
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data._package
 * @param data.packageType
 * @param data.status
 * @param data.type
 * @param data.from
 * @param data.size
 * @returns unknown Success
 * @throws ApiError
 */
export const getEcomEcomListingPackageGetByQuery = (
  data: GetEcomEcomListingPackageGetByQueryData,
): CancelablePromise<GetEcomEcomListingPackageGetByQueryResponse> => {
  return __request(OpenAPI, {
    method: 'GET',
    url: '/Ecom/EcomListingPackage/GetByQuery',
    headers: {
      Authorization: data.authorization,
    },
    query: {
      Package: data._package,
      PackageType: data.packageType,
      Status: data.status,
      Type: data.type,
      From: data.from,
      Size: data.size,
    },
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.id
 * @returns unknown Success
 * @throws ApiError
 */
export const getEcomEcomListingPackageGetDetail = (
  data: GetEcomEcomListingPackageGetDetailData,
): CancelablePromise<GetEcomEcomListingPackageGetDetailResponse> => {
  return __request(OpenAPI, {
    method: 'GET',
    url: '/Ecom/EcomListingPackage/GetDetail',
    headers: {
      Authorization: data.authorization,
    },
    query: {
      id: data.id,
    },
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.requestBody
 * @returns unknown Success
 * @throws ApiError
 */
export const postEcomEcomListingPackageCreate = (
  data: PostEcomEcomListingPackageCreateData,
): CancelablePromise<PostEcomEcomListingPackageCreateResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/Ecom/EcomListingPackage/Create',
    headers: {
      Authorization: data.authorization,
    },
    body: data.requestBody,
    mediaType: 'application/json',
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.requestBody
 * @returns unknown Success
 * @throws ApiError
 */
export const putEcomEcomListingPackageUpdate = (
  data: PutEcomEcomListingPackageUpdateData,
): CancelablePromise<PutEcomEcomListingPackageUpdateResponse> => {
  return __request(OpenAPI, {
    method: 'PUT',
    url: '/Ecom/EcomListingPackage/Update',
    headers: {
      Authorization: data.authorization,
    },
    body: data.requestBody,
    mediaType: 'application/json',
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.keyWord
 * @param data.status
 * @param data.from
 * @param data.size
 * @returns unknown Success
 * @throws ApiError
 */
export const getEcomEcomListingPushGetByQuery = (
  data: GetEcomEcomListingPushGetByQueryData,
): CancelablePromise<GetEcomEcomListingPushGetByQueryResponse> => {
  return __request(OpenAPI, {
    method: 'GET',
    url: '/Ecom/EcomListingPush/GetByQuery',
    headers: {
      Authorization: data.authorization,
    },
    query: {
      KeyWord: data.keyWord,
      Status: data.status,
      From: data.from,
      Size: data.size,
    },
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.id
 * @returns unknown Success
 * @throws ApiError
 */
export const getEcomEcomListingPushGetDetail = (
  data: GetEcomEcomListingPushGetDetailData,
): CancelablePromise<GetEcomEcomListingPushGetDetailResponse> => {
  return __request(OpenAPI, {
    method: 'GET',
    url: '/Ecom/EcomListingPush/GetDetail',
    headers: {
      Authorization: data.authorization,
    },
    query: {
      id: data.id,
    },
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.requestBody
 * @returns unknown Success
 * @throws ApiError
 */
export const postEcomEcomListingPushUpdate = (
  data: PostEcomEcomListingPushUpdateData,
): CancelablePromise<PostEcomEcomListingPushUpdateResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/Ecom/EcomListingPush/Update',
    headers: {
      Authorization: data.authorization,
    },
    body: data.requestBody,
    mediaType: 'application/json',
  });
};

/**
 * @param data The data for the request.
 * @param data.requestBody
 * @returns unknown Success
 * @throws ApiError
 */
export const postListingSearch = (
  data: PostListingSearchData = {},
): CancelablePromise<PostListingSearchResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/Listing/Search',
    body: data.requestBody,
    mediaType: 'application/json',
  });
};

/**
 * @param data The data for the request.
 * @param data.requestBody
 * @returns unknown Success
 * @throws ApiError
 */
export const postListingGeo = (
  data: PostListingGeoData = {},
): CancelablePromise<PostListingGeoResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/Listing/Geo',
    body: data.requestBody,
    mediaType: 'application/json',
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.requestBody
 * @returns unknown Success
 * @throws ApiError
 */
export const postEcomListingStaffGetListingForStaff = (
  data: PostEcomListingStaffGetListingForStaffData,
): CancelablePromise<PostEcomListingStaffGetListingForStaffResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/EcomListingStaff/GetListingForStaff',
    headers: {
      Authorization: data.authorization,
    },
    body: data.requestBody,
    mediaType: 'application/json',
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @returns unknown Success
 * @throws ApiError
 */
export const postEcomListingStaffCreateByStaff = (
  data: PostEcomListingStaffCreateByStaffData,
): CancelablePromise<PostEcomListingStaffCreateByStaffResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/EcomListingStaff/CreateByStaff',
    headers: {
      Authorization: data.authorization,
    },
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @returns unknown Success
 * @throws ApiError
 */
export const postEcomListingStaffUpdateByStaff = (
  data: PostEcomListingStaffUpdateByStaffData,
): CancelablePromise<PostEcomListingStaffUpdateByStaffResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/EcomListingStaff/UpdateByStaff',
    headers: {
      Authorization: data.authorization,
    },
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.requestBody
 * @returns unknown Success
 * @throws ApiError
 */
export const postEcomListingStaffUpdateStatus = (
  data: PostEcomListingStaffUpdateStatusData,
): CancelablePromise<PostEcomListingStaffUpdateStatusResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/EcomListingStaff/UpdateStatus',
    headers: {
      Authorization: data.authorization,
    },
    body: data.requestBody,
    mediaType: 'application/json',
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.requestBody
 * @returns unknown Success
 * @throws ApiError
 */
export const postEcomListingStaffMarkAsVip = (
  data: PostEcomListingStaffMarkAsVipData,
): CancelablePromise<PostEcomListingStaffMarkAsVipResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/EcomListingStaff/MarkAsVip',
    headers: {
      Authorization: data.authorization,
    },
    body: data.requestBody,
    mediaType: 'application/json',
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.requestBody
 * @returns unknown Success
 * @throws ApiError
 */
export const postEcomListingStaffMarkAsPublish = (
  data: PostEcomListingStaffMarkAsPublishData,
): CancelablePromise<PostEcomListingStaffMarkAsPublishResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/EcomListingStaff/MarkAsPublish',
    headers: {
      Authorization: data.authorization,
    },
    body: data.requestBody,
    mediaType: 'application/json',
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.requestBody
 * @returns unknown Success
 * @throws ApiError
 */
export const postEcomListingStaffMarkAsExpired = (
  data: PostEcomListingStaffMarkAsExpiredData,
): CancelablePromise<PostEcomListingStaffMarkAsExpiredResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/EcomListingStaff/MarkAsExpired',
    headers: {
      Authorization: data.authorization,
    },
    body: data.requestBody,
    mediaType: 'application/json',
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.id
 * @returns unknown Success
 * @throws ApiError
 */
export const getEcomListingStaffGetDetailForEditByStaff = (
  data: GetEcomListingStaffGetDetailForEditByStaffData,
): CancelablePromise<GetEcomListingStaffGetDetailForEditByStaffResponse> => {
  return __request(OpenAPI, {
    method: 'GET',
    url: '/EcomListingStaff/GetDetailForEditByStaff',
    headers: {
      Authorization: data.authorization,
    },
    query: {
      id: data.id,
    },
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.id
 * @returns unknown Success
 * @throws ApiError
 */
export const deleteEcomListingStaffDeleteByStaff = (
  data: DeleteEcomListingStaffDeleteByStaffData,
): CancelablePromise<DeleteEcomListingStaffDeleteByStaffResponse> => {
  return __request(OpenAPI, {
    method: 'DELETE',
    url: '/EcomListingStaff/DeleteByStaff',
    headers: {
      Authorization: data.authorization,
    },
    query: {
      id: data.id,
    },
  });
};

/**
 * @param data The data for the request.
 * @param data.requestBody
 * @returns unknown Success
 * @throws ApiError
 */
export const postEcomListingViewGetByQuery = (
  data: PostEcomListingViewGetByQueryData = {},
): CancelablePromise<PostEcomListingViewGetByQueryResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/EcomListingView/GetByQuery',
    body: data.requestBody,
    mediaType: 'application/json',
  });
};

/**
 * @returns unknown Success
 * @throws ApiError
 */
export const getEcomListingViewGetList =
  (): CancelablePromise<GetEcomListingViewGetListResponse> => {
    return __request(OpenAPI, {
      method: 'GET',
      url: '/EcomListingView/GetList',
    });
  };

/**
 * @returns unknown Success
 * @throws ApiError
 */
export const getEcomListingViewMigrationView =
  (): CancelablePromise<GetEcomListingViewMigrationViewResponse> => {
    return __request(OpenAPI, {
      method: 'GET',
      url: '/EcomListingView/MigrationView',
    });
  };

/**
 * @param data The data for the request.
 * @param data.requestBody
 * @returns unknown Success
 * @throws ApiError
 */
export const postEcomListingViewBalconyGetByQuery = (
  data: PostEcomListingViewBalconyGetByQueryData = {},
): CancelablePromise<PostEcomListingViewBalconyGetByQueryResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/EcomListingViewBalcony/GetByQuery',
    body: data.requestBody,
    mediaType: 'application/json',
  });
};

/**
 * @returns unknown Success
 * @throws ApiError
 */
export const getEcomListingViewBalconyGetList =
  (): CancelablePromise<GetEcomListingViewBalconyGetListResponse> => {
    return __request(OpenAPI, {
      method: 'GET',
      url: '/EcomListingViewBalcony/GetList',
    });
  };

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.requestBody
 * @returns unknown Success
 * @throws ApiError
 */
export const postEcomLogoBannerGetByQuery = (
  data: PostEcomLogoBannerGetByQueryData,
): CancelablePromise<PostEcomLogoBannerGetByQueryResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/EcomLogoBanner/GetByQuery',
    headers: {
      Authorization: data.authorization,
    },
    body: data.requestBody,
    mediaType: 'application/json',
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.id
 * @returns unknown Success
 * @throws ApiError
 */
export const getEcomLogoBannerGetDetailForEdit = (
  data: GetEcomLogoBannerGetDetailForEditData,
): CancelablePromise<GetEcomLogoBannerGetDetailForEditResponse> => {
  return __request(OpenAPI, {
    method: 'GET',
    url: '/EcomLogoBanner/GetDetailForEdit',
    headers: {
      Authorization: data.authorization,
    },
    query: {
      id: data.id,
    },
  });
};

/**
 * @returns unknown Success
 * @throws ApiError
 */
export const getEcomLogoBannerGetAll = (): CancelablePromise<GetEcomLogoBannerGetAllResponse> => {
  return __request(OpenAPI, {
    method: 'GET',
    url: '/EcomLogoBanner/GetAll',
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @returns unknown Success
 * @throws ApiError
 */
export const postEcomLogoBannerCreate = (
  data: PostEcomLogoBannerCreateData,
): CancelablePromise<PostEcomLogoBannerCreateResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/EcomLogoBanner/Create',
    headers: {
      Authorization: data.authorization,
    },
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @returns unknown Success
 * @throws ApiError
 */
export const putEcomLogoBannerUpdate = (
  data: PutEcomLogoBannerUpdateData,
): CancelablePromise<PutEcomLogoBannerUpdateResponse> => {
  return __request(OpenAPI, {
    method: 'PUT',
    url: '/EcomLogoBanner/Update',
    headers: {
      Authorization: data.authorization,
    },
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.requestBody
 * @returns unknown Success
 * @throws ApiError
 */
export const postEcomEcomNotificationGetByQuery = (
  data: PostEcomEcomNotificationGetByQueryData,
): CancelablePromise<PostEcomEcomNotificationGetByQueryResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/Ecom/EcomNotification/GetByQuery',
    headers: {
      Authorization: data.authorization,
    },
    body: data.requestBody,
    mediaType: 'application/json',
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.id
 * @param data.method
 * @returns unknown Success
 * @throws ApiError
 */
export const postEcomEcomNotificationMarkRead = (
  data: PostEcomEcomNotificationMarkReadData,
): CancelablePromise<PostEcomEcomNotificationMarkReadResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/Ecom/EcomNotification/MarkRead',
    headers: {
      Authorization: data.authorization,
    },
    query: {
      id: data.id,
      method: data.method,
    },
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.method
 * @returns unknown Success
 * @throws ApiError
 */
export const postEcomEcomNotificationMarkReadAll = (
  data: PostEcomEcomNotificationMarkReadAllData,
): CancelablePromise<PostEcomEcomNotificationMarkReadAllResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/Ecom/EcomNotification/MarkReadAll',
    headers: {
      Authorization: data.authorization,
    },
    query: {
      method: data.method,
    },
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.method
 * @returns unknown Success
 * @throws ApiError
 */
export const getEcomEcomNotificationCountUnread = (
  data: GetEcomEcomNotificationCountUnreadData,
): CancelablePromise<GetEcomEcomNotificationCountUnreadResponse> => {
  return __request(OpenAPI, {
    method: 'GET',
    url: '/Ecom/EcomNotification/CountUnread',
    headers: {
      Authorization: data.authorization,
    },
    query: {
      method: data.method,
    },
  });
};

/**
 * @returns unknown Success
 * @throws ApiError
 */
export const getEcomEcomPlaceGetProvince =
  (): CancelablePromise<GetEcomEcomPlaceGetProvinceResponse> => {
    return __request(OpenAPI, {
      method: 'GET',
      url: '/Ecom/EcomPlace/GetProvince',
    });
  };

/**
 * @param data The data for the request.
 * @param data.provinceId
 * @returns unknown Success
 * @throws ApiError
 */
export const getEcomEcomPlaceGetDistrict = (
  data: GetEcomEcomPlaceGetDistrictData = {},
): CancelablePromise<GetEcomEcomPlaceGetDistrictResponse> => {
  return __request(OpenAPI, {
    method: 'GET',
    url: '/Ecom/EcomPlace/GetDistrict',
    query: {
      provinceId: data.provinceId,
    },
  });
};

/**
 * @param data The data for the request.
 * @param data.districtId
 * @returns unknown Success
 * @throws ApiError
 */
export const getEcomEcomPlaceGetWard = (
  data: GetEcomEcomPlaceGetWardData = {},
): CancelablePromise<GetEcomEcomPlaceGetWardResponse> => {
  return __request(OpenAPI, {
    method: 'GET',
    url: '/Ecom/EcomPlace/GetWard',
    query: {
      districtId: data.districtId,
    },
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.requestBody
 * @returns unknown Success
 * @throws ApiError
 */
export const postEcomEcomProjectGetByQuery = (
  data: PostEcomEcomProjectGetByQueryData,
): CancelablePromise<PostEcomEcomProjectGetByQueryResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/Ecom/EcomProject/GetByQuery',
    headers: {
      Authorization: data.authorization,
    },
    body: data.requestBody,
    mediaType: 'application/json',
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.id
 * @returns unknown Success
 * @throws ApiError
 */
export const postEcomEcomProjectGetById = (
  data: PostEcomEcomProjectGetByIdData,
): CancelablePromise<PostEcomEcomProjectGetByIdResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/Ecom/EcomProject/GetById',
    headers: {
      Authorization: data.authorization,
    },
    query: {
      id: data.id,
    },
  });
};

/**
 * @param data The data for the request.
 * @param data.id
 * @returns unknown Success
 * @throws ApiError
 */
export const getEcomEcomProjectGet = (
  data: GetEcomEcomProjectGetData = {},
): CancelablePromise<GetEcomEcomProjectGetResponse> => {
  return __request(OpenAPI, {
    method: 'GET',
    url: '/Ecom/EcomProject/Get',
    query: {
      id: data.id,
    },
  });
};

/**
 * @param data The data for the request.
 * @param data.requestBody
 * @returns unknown Success
 * @throws ApiError
 */
export const postEcomEcomProjectGetMoreInfoByQuery = (
  data: PostEcomEcomProjectGetMoreInfoByQueryData = {},
): CancelablePromise<PostEcomEcomProjectGetMoreInfoByQueryResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/Ecom/EcomProject/GetMoreInfoByQuery',
    body: data.requestBody,
    mediaType: 'application/json',
  });
};

/**
 * @param data The data for the request.
 * @param data.requestBody
 * @returns unknown Success
 * @throws ApiError
 */
export const postEcomEcomProjectGetBlockByQuery = (
  data: PostEcomEcomProjectGetBlockByQueryData = {},
): CancelablePromise<PostEcomEcomProjectGetBlockByQueryResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/Ecom/EcomProject/GetBlockByQuery',
    body: data.requestBody,
    mediaType: 'application/json',
  });
};

/**
 * @param data The data for the request.
 * @param data.requestBody
 * @returns unknown Success
 * @throws ApiError
 */
export const postEcomEcomProjectGetGalleryByQuery = (
  data: PostEcomEcomProjectGetGalleryByQueryData = {},
): CancelablePromise<PostEcomEcomProjectGetGalleryByQueryResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/Ecom/EcomProject/GetGalleryByQuery',
    body: data.requestBody,
    mediaType: 'application/json',
  });
};

/**
 * @param data The data for the request.
 * @param data.requestBody
 * @returns unknown Success
 * @throws ApiError
 */
export const postEcomEcomProjectGetPolicyByQuery = (
  data: PostEcomEcomProjectGetPolicyByQueryData = {},
): CancelablePromise<PostEcomEcomProjectGetPolicyByQueryResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/Ecom/EcomProject/GetPolicyByQuery',
    body: data.requestBody,
    mediaType: 'application/json',
  });
};

/**
 * @param data The data for the request.
 * @param data.requestBody
 * @returns unknown Success
 * @throws ApiError
 */
export const postEcomEcomProjectGetBrochureByQuery = (
  data: PostEcomEcomProjectGetBrochureByQueryData = {},
): CancelablePromise<PostEcomEcomProjectGetBrochureByQueryResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/Ecom/EcomProject/GetBrochureByQuery',
    body: data.requestBody,
    mediaType: 'application/json',
  });
};

/**
 * @param data The data for the request.
 * @param data.requestBody
 * @returns unknown Success
 * @throws ApiError
 */
export const postEcomEcomProjectGetMasterPlanByQuery = (
  data: PostEcomEcomProjectGetMasterPlanByQueryData = {},
): CancelablePromise<PostEcomEcomProjectGetMasterPlanByQueryResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/Ecom/EcomProject/GetMasterPlanByQuery',
    body: data.requestBody,
    mediaType: 'application/json',
  });
};

/**
 * @param data The data for the request.
 * @param data.requestBody
 * @returns unknown Success
 * @throws ApiError
 */
export const postEcomEcomProjectGet360AlbumByQuery = (
  data: PostEcomEcomProjectGet360AlbumByQueryData = {},
): CancelablePromise<PostEcomEcomProjectGet360AlbumByQueryResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/Ecom/EcomProject/Get360AlbumByQuery',
    body: data.requestBody,
    mediaType: 'application/json',
  });
};

/**
 * @param data The data for the request.
 * @param data.requestBody
 * @returns unknown Success
 * @throws ApiError
 */
export const postEcomEcomProjectGetSlideByQuery = (
  data: PostEcomEcomProjectGetSlideByQueryData = {},
): CancelablePromise<PostEcomEcomProjectGetSlideByQueryResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/Ecom/EcomProject/GetSlideByQuery',
    body: data.requestBody,
    mediaType: 'application/json',
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.requestBody
 * @returns unknown Success
 * @throws ApiError
 */
export const postEcomEcomProjectGetProjectByQueryForPortal = (
  data: PostEcomEcomProjectGetProjectByQueryForPortalData,
): CancelablePromise<PostEcomEcomProjectGetProjectByQueryForPortalResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/Ecom/EcomProject/GetProjectByQueryForPortal',
    headers: {
      Authorization: data.authorization,
    },
    body: data.requestBody,
    mediaType: 'application/json',
  });
};

/**
 * @param data The data for the request.
 * @param data.requestBody
 * @returns unknown Success
 * @throws ApiError
 */
export const postEcomEcomProjectGetListProject = (
  data: PostEcomEcomProjectGetListProjectData = {},
): CancelablePromise<PostEcomEcomProjectGetListProjectResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/Ecom/EcomProject/GetListProject',
    body: data.requestBody,
    mediaType: 'application/json',
  });
};

/**
 * @returns unknown Success
 * @throws ApiError
 */
export const getEcomEcomProjectGetListProjectSearch =
  (): CancelablePromise<PostEcomEcomProjectGetListProjectSearchResponse> => {
    return __request(OpenAPI, {
      method: 'POST',
      url: '/Ecom/EcomProject/GetListProjectSearch',
    });
  };

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.projectId
 * @returns unknown Success
 * @throws ApiError
 */
export const getEcomEcomProjectGetProjectMasterPlanById = (
  data: GetEcomEcomProjectGetProjectMasterPlanByIdData,
): CancelablePromise<GetEcomEcomProjectGetProjectMasterPlanByIdResponse> => {
  return __request(OpenAPI, {
    method: 'GET',
    url: '/Ecom/EcomProject/GetProjectMasterPlanById',
    headers: {
      Authorization: data.authorization,
    },
    query: {
      projectId: data.projectId,
    },
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.projectId
 * @returns unknown Success
 * @throws ApiError
 */
export const getEcomEcomProjectGetProjectBrochureById = (
  data: GetEcomEcomProjectGetProjectBrochureByIdData,
): CancelablePromise<GetEcomEcomProjectGetProjectBrochureByIdResponse> => {
  return __request(OpenAPI, {
    method: 'GET',
    url: '/Ecom/EcomProject/GetProjectBrochureById',
    headers: {
      Authorization: data.authorization,
    },
    query: {
      projectId: data.projectId,
    },
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @returns unknown Success
 * @throws ApiError
 */
export const postEcomEcomProjectCreateProject = (
  data: PostEcomEcomProjectCreateProjectData,
): CancelablePromise<PostEcomEcomProjectCreateProjectResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/Ecom/EcomProject/CreateProject',
    headers: {
      Authorization: data.authorization,
    },
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @returns unknown Success
 * @throws ApiError
 */
export const putEcomEcomProjectUpdateProject = (
  data: PutEcomEcomProjectUpdateProjectData,
): CancelablePromise<PutEcomEcomProjectUpdateProjectResponse> => {
  return __request(OpenAPI, {
    method: 'PUT',
    url: '/Ecom/EcomProject/UpdateProject',
    headers: {
      Authorization: data.authorization,
    },
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @returns unknown Success
 * @throws ApiError
 */
export const postEcomEcomProjectCreateProjectMasterPlan = (
  data: PostEcomEcomProjectCreateProjectMasterPlanData,
): CancelablePromise<PostEcomEcomProjectCreateProjectMasterPlanResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/Ecom/EcomProject/CreateProjectMasterPlan',
    headers: {
      Authorization: data.authorization,
    },
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @returns unknown Success
 * @throws ApiError
 */
export const putEcomEcomProjectUpdateProjectMasterPlan = (
  data: PutEcomEcomProjectUpdateProjectMasterPlanData,
): CancelablePromise<PutEcomEcomProjectUpdateProjectMasterPlanResponse> => {
  return __request(OpenAPI, {
    method: 'PUT',
    url: '/Ecom/EcomProject/UpdateProjectMasterPlan',
    headers: {
      Authorization: data.authorization,
    },
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @returns unknown Success
 * @throws ApiError
 */
export const postEcomEcomProjectCreateProjectBrochure = (
  data: PostEcomEcomProjectCreateProjectBrochureData,
): CancelablePromise<PostEcomEcomProjectCreateProjectBrochureResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/Ecom/EcomProject/CreateProjectBrochure',
    headers: {
      Authorization: data.authorization,
    },
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @returns unknown Success
 * @throws ApiError
 */
export const putEcomEcomProjectUpdateProjectBrochure = (
  data: PutEcomEcomProjectUpdateProjectBrochureData,
): CancelablePromise<PutEcomEcomProjectUpdateProjectBrochureResponse> => {
  return __request(OpenAPI, {
    method: 'PUT',
    url: '/Ecom/EcomProject/UpdateProjectBrochure',
    headers: {
      Authorization: data.authorization,
    },
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @returns unknown Success
 * @throws ApiError
 */
export const getEcomEcomProjectMigrate = (
  data: GetEcomEcomProjectMigrateData,
): CancelablePromise<GetEcomEcomProjectMigrateResponse> => {
  return __request(OpenAPI, {
    method: 'GET',
    url: '/Ecom/EcomProject/Migrate',
    headers: {
      Authorization: data.authorization,
    },
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.requestBody
 * @returns unknown Success
 * @throws ApiError
 */
export const postEcomV1EcomProjectCreate = (
  data: PostEcomV1EcomProjectCreateData,
): CancelablePromise<PostEcomV1EcomProjectCreateResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/Ecom/v1/EcomProject/Create',
    headers: {
      Authorization: data.authorization,
    },
    body: data.requestBody,
    mediaType: 'application/json',
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.requestBody
 * @returns unknown Success
 * @throws ApiError
 */
export const putEcomV1EcomProjectUpdate = (
  data: PutEcomV1EcomProjectUpdateData,
): CancelablePromise<PutEcomV1EcomProjectUpdateResponse> => {
  return __request(OpenAPI, {
    method: 'PUT',
    url: '/Ecom/v1/EcomProject/Update',
    headers: {
      Authorization: data.authorization,
    },
    body: data.requestBody,
    mediaType: 'application/json',
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.requestBody
 * @returns unknown Success
 * @throws ApiError
 */
export const postEcomV1EcomProjectGetProjectByQueryForMobile = (
  data: PostEcomV1EcomProjectGetProjectByQueryForMobileData,
): CancelablePromise<PostEcomV1EcomProjectGetProjectByQueryForMobileResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/Ecom/v1/EcomProject/GetProjectByQueryForMobile',
    headers: {
      Authorization: data.authorization,
    },
    body: data.requestBody,
    mediaType: 'application/json',
  });
};

/**
 * @param data The data for the request.
 * @param data.requestBody
 * @returns unknown Success
 * @throws ApiError
 */
export const postEcomEcomPropertyGetByQuery = (
  data: PostEcomEcomPropertyGetByQueryData = {},
): CancelablePromise<PostEcomEcomPropertyGetByQueryResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/Ecom/EcomProperty/GetByQuery',
    body: data.requestBody,
    mediaType: 'application/json',
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.projectId
 * @param data.unitCode
 * @returns unknown Success
 * @throws ApiError
 */
export const postEcomEcomPropertyGetByQueryForPortal = (
  data: PostEcomEcomPropertyGetByQueryForPortalData,
): CancelablePromise<PostEcomEcomPropertyGetByQueryForPortalResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/Ecom/EcomProperty/GetByQueryForPortal',
    headers: {
      Authorization: data.authorization,
    },
    query: {
      projectId: data.projectId,
      unitCode: data.unitCode,
    },
  });
};

/**
 * @param data The data for the request.
 * @param data.id
 * @returns unknown Success
 * @throws ApiError
 */
export const postEcomEcomPropertyGetById = (
  data: PostEcomEcomPropertyGetByIdData = {},
): CancelablePromise<PostEcomEcomPropertyGetByIdResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/Ecom/EcomProperty/GetById',
    query: {
      id: data.id,
    },
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.listingId
 * @param data.requestBody
 * @returns unknown Success
 * @throws ApiError
 */
export const postEcomEcomReviewGetByQueryListing = (
  data: PostEcomEcomReviewGetByQueryListingData,
): CancelablePromise<PostEcomEcomReviewGetByQueryListingResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/Ecom/EcomReview/GetByQueryListing',
    headers: {
      Authorization: data.authorization,
    },
    query: {
      listingId: data.listingId,
    },
    body: data.requestBody,
    mediaType: 'application/json',
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.memberId
 * @param data.requestBody
 * @returns unknown Success
 * @throws ApiError
 */
export const postEcomEcomReviewGetByQueryMember = (
  data: PostEcomEcomReviewGetByQueryMemberData,
): CancelablePromise<PostEcomEcomReviewGetByQueryMemberResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/Ecom/EcomReview/GetByQueryMember',
    headers: {
      Authorization: data.authorization,
    },
    query: {
      memberId: data.memberId,
    },
    body: data.requestBody,
    mediaType: 'application/json',
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.id
 * @returns unknown Success
 * @throws ApiError
 */
export const getEcomEcomReviewGetById = (
  data: GetEcomEcomReviewGetByIdData,
): CancelablePromise<GetEcomEcomReviewGetByIdResponse> => {
  return __request(OpenAPI, {
    method: 'GET',
    url: '/Ecom/EcomReview/GetById',
    headers: {
      Authorization: data.authorization,
    },
    query: {
      id: data.id,
    },
  });
};

/**
 * @param data The data for the request.
 * @param data.requestBody
 * @returns unknown Success
 * @throws ApiError
 */
export const postEcomEcomReviewCreateListing = (
  data: PostEcomEcomReviewCreateListingData = {},
): CancelablePromise<PostEcomEcomReviewCreateListingResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/Ecom/EcomReview/CreateListing',
    body: data.requestBody,
    mediaType: 'application/json',
  });
};

/**
 * @param data The data for the request.
 * @param data.requestBody
 * @returns unknown Success
 * @throws ApiError
 */
export const postEcomEcomReviewCreateMember = (
  data: PostEcomEcomReviewCreateMemberData = {},
): CancelablePromise<PostEcomEcomReviewCreateMemberResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/Ecom/EcomReview/CreateMember',
    body: data.requestBody,
    mediaType: 'application/json',
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.id
 * @param data.authorization Bearer {token}
 * @returns unknown Success
 * @throws ApiError
 */
export const postEcomEcomReviewApproveById = (
  data: PostEcomEcomReviewApproveByIdData,
): CancelablePromise<PostEcomEcomReviewApproveByIdResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/Ecom/EcomReview/Approve/{id}',
    path: {
      id: data.id,
    },
    headers: {
      Authorization: data.authorization,
    },
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.id
 * @param data.authorization Bearer {token}
 * @returns unknown Success
 * @throws ApiError
 */
export const postEcomEcomReviewRejectById = (
  data: PostEcomEcomReviewRejectByIdData,
): CancelablePromise<PostEcomEcomReviewRejectByIdResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/Ecom/EcomReview/Reject/{id}',
    path: {
      id: data.id,
    },
    headers: {
      Authorization: data.authorization,
    },
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.id
 * @param data.authorization Bearer {token}
 * @returns unknown Success
 * @throws ApiError
 */
export const postEcomEcomReviewDeleteById = (
  data: PostEcomEcomReviewDeleteByIdData,
): CancelablePromise<PostEcomEcomReviewDeleteByIdResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/Ecom/EcomReview/Delete/{id}',
    path: {
      id: data.id,
    },
    headers: {
      Authorization: data.authorization,
    },
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.id
 * @param data.authorization Bearer {token}
 * @param data.show
 * @returns unknown Success
 * @throws ApiError
 */
export const postEcomEcomReviewToggleShowById = (
  data: PostEcomEcomReviewToggleShowByIdData,
): CancelablePromise<PostEcomEcomReviewToggleShowByIdResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/Ecom/EcomReview/ToggleShow/{id}',
    path: {
      id: data.id,
    },
    headers: {
      Authorization: data.authorization,
    },
    query: {
      show: data.show,
    },
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.listingId
 * @param data.requestBody
 * @returns unknown Success
 * @throws ApiError
 */
export const postEcomEcomReviewGetReviewMyListing = (
  data: PostEcomEcomReviewGetReviewMyListingData,
): CancelablePromise<PostEcomEcomReviewGetReviewMyListingResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/Ecom/EcomReview/GetReviewMyListing',
    headers: {
      Authorization: data.authorization,
    },
    query: {
      listingId: data.listingId,
    },
    body: data.requestBody,
    mediaType: 'application/json',
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.memberId
 * @param data.requestBody
 * @returns unknown Success
 * @throws ApiError
 */
export const postEcomEcomReviewGetReviewMyProfile = (
  data: PostEcomEcomReviewGetReviewMyProfileData,
): CancelablePromise<PostEcomEcomReviewGetReviewMyProfileResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/Ecom/EcomReview/GetReviewMyProfile',
    headers: {
      Authorization: data.authorization,
    },
    query: {
      memberId: data.memberId,
    },
    body: data.requestBody,
    mediaType: 'application/json',
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.requestBody
 * @returns unknown Success
 * @throws ApiError
 */
export const postEcomEcomReviewGetReviewListingByQuery = (
  data: PostEcomEcomReviewGetReviewListingByQueryData,
): CancelablePromise<PostEcomEcomReviewGetReviewListingByQueryResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/Ecom/EcomReview/GetReviewListingByQuery',
    headers: {
      Authorization: data.authorization,
    },
    body: data.requestBody,
    mediaType: 'application/json',
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.requestBody
 * @returns unknown Success
 * @throws ApiError
 */
export const postEcomEcomReviewGetReviewMemberByQuery = (
  data: PostEcomEcomReviewGetReviewMemberByQueryData,
): CancelablePromise<PostEcomEcomReviewGetReviewMemberByQueryResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/Ecom/EcomReview/GetReviewMemberByQuery',
    headers: {
      Authorization: data.authorization,
    },
    body: data.requestBody,
    mediaType: 'application/json',
  });
};

/**
 * @param data The data for the request.
 * @param data.listingId
 * @param data.requestBody
 * @returns unknown Success
 * @throws ApiError
 */
export const postEcomEcomReviewPublicGetByQueryListing = (
  data: PostEcomEcomReviewPublicGetByQueryListingData = {},
): CancelablePromise<PostEcomEcomReviewPublicGetByQueryListingResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/Ecom/EcomReviewPublic/GetByQueryListing',
    query: {
      listingId: data.listingId,
    },
    body: data.requestBody,
    mediaType: 'application/json',
  });
};

/**
 * @param data The data for the request.
 * @param data.memberId
 * @param data.requestBody
 * @returns unknown Success
 * @throws ApiError
 */
export const postEcomEcomReviewPublicGetByQueryMember = (
  data: PostEcomEcomReviewPublicGetByQueryMemberData = {},
): CancelablePromise<PostEcomEcomReviewPublicGetByQueryMemberResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/Ecom/EcomReviewPublic/GetByQueryMember',
    query: {
      memberId: data.memberId,
    },
    body: data.requestBody,
    mediaType: 'application/json',
  });
};

/**
 * @param data The data for the request.
 * @param data.applyId
 * @returns unknown Success
 * @throws ApiError
 */
export const getEcomEcomReviewPublicSummaryReview = (
  data: GetEcomEcomReviewPublicSummaryReviewData = {},
): CancelablePromise<GetEcomEcomReviewPublicSummaryReviewResponse> => {
  return __request(OpenAPI, {
    method: 'GET',
    url: '/Ecom/EcomReviewPublic/SummaryReview',
    query: {
      applyId: data.applyId,
    },
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.from
 * @param data.size
 * @param data.district
 * @param data.province
 * @param data.type
 * @param data.status
 * @returns unknown Success
 * @throws ApiError
 */
export const getEcomEcomSearchLocationGetByQuery = (
  data: GetEcomEcomSearchLocationGetByQueryData,
): CancelablePromise<GetEcomEcomSearchLocationGetByQueryResponse> => {
  return __request(OpenAPI, {
    method: 'GET',
    url: '/Ecom/EcomSearchLocation/GetByQuery',
    headers: {
      Authorization: data.authorization,
    },
    query: {
      from: data.from,
      size: data.size,
      district: data.district,
      province: data.province,
      type: data.type,
      status: data.status,
    },
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.id
 * @returns unknown Success
 * @throws ApiError
 */
export const getEcomEcomSearchLocationGetDetailForEdit = (
  data: GetEcomEcomSearchLocationGetDetailForEditData,
): CancelablePromise<GetEcomEcomSearchLocationGetDetailForEditResponse> => {
  return __request(OpenAPI, {
    method: 'GET',
    url: '/Ecom/EcomSearchLocation/GetDetailForEdit',
    headers: {
      Authorization: data.authorization,
    },
    query: {
      id: data.id,
    },
  });
};

/**
 * @param data The data for the request.
 * @param data.district
 * @param data.province
 * @returns unknown Success
 * @throws ApiError
 */
export const getEcomEcomSearchLocationGetListForSearch = (
  data: GetEcomEcomSearchLocationGetListForSearchData = {},
): CancelablePromise<GetEcomEcomSearchLocationGetListForSearchResponse> => {
  return __request(OpenAPI, {
    method: 'GET',
    url: '/Ecom/EcomSearchLocation/GetListForSearch',
    query: {
      district: data.district,
      province: data.province,
    },
  });
};

/**
 * @returns unknown Success
 * @throws ApiError
 */
export const getEcomEcomSearchLocationGetTypeMaterialPlace =
  (): CancelablePromise<GetEcomEcomSearchLocationGetTypeMaterialPlaceResponse> => {
    return __request(OpenAPI, {
      method: 'GET',
      url: '/Ecom/EcomSearchLocation/GetTypeMaterialPlace',
    });
  };

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.requestBody
 * @returns unknown Success
 * @throws ApiError
 */
export const postEcomEcomSearchLocationCreate = (
  data: PostEcomEcomSearchLocationCreateData,
): CancelablePromise<PostEcomEcomSearchLocationCreateResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/Ecom/EcomSearchLocation/Create',
    headers: {
      Authorization: data.authorization,
    },
    body: data.requestBody,
    mediaType: 'application/json',
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.requestBody
 * @returns unknown Success
 * @throws ApiError
 */
export const putEcomEcomSearchLocationUpdate = (
  data: PutEcomEcomSearchLocationUpdateData,
): CancelablePromise<PutEcomEcomSearchLocationUpdateResponse> => {
  return __request(OpenAPI, {
    method: 'PUT',
    url: '/Ecom/EcomSearchLocation/Update',
    headers: {
      Authorization: data.authorization,
    },
    body: data.requestBody,
    mediaType: 'application/json',
  });
};

/**
 * @param data The data for the request.
 * @param data.input
 * @returns unknown Success
 * @throws ApiError
 */
export const getEcomEcomSearchLocationGetAutoCompleteAutocomplete = (
  data: GetEcomEcomSearchLocationGetAutoCompleteAutocompleteData = {},
): CancelablePromise<GetEcomEcomSearchLocationGetAutoCompleteAutocompleteResponse> => {
  return __request(OpenAPI, {
    method: 'GET',
    url: '/Ecom/EcomSearchLocation/GetAutoComplete/Autocomplete',
    query: {
      input: data.input,
    },
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.requestBody
 * @returns unknown Success
 * @throws ApiError
 */
export const postEcomEcomSearchLocationDeleteMaterialPlace = (
  data: PostEcomEcomSearchLocationDeleteMaterialPlaceData,
): CancelablePromise<PostEcomEcomSearchLocationDeleteMaterialPlaceResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/Ecom/EcomSearchLocation/DeleteMaterialPlace',
    headers: {
      Authorization: data.authorization,
    },
    body: data.requestBody,
    mediaType: 'application/json',
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.requestBody
 * @returns unknown Success
 * @throws ApiError
 */
export const postEcomEcomTopupStaffCreateRequest = (
  data: PostEcomEcomTopupStaffCreateRequestData,
): CancelablePromise<PostEcomEcomTopupStaffCreateRequestResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/Ecom/EcomTopupStaff/CreateRequest',
    headers: {
      Authorization: data.authorization,
    },
    body: data.requestBody,
    mediaType: 'application/json',
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.requestBody
 * @returns unknown Success
 * @throws ApiError
 */
export const postEcomEcomTopupStaffUpdateStatus = (
  data: PostEcomEcomTopupStaffUpdateStatusData,
): CancelablePromise<PostEcomEcomTopupStaffUpdateStatusResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/Ecom/EcomTopupStaff/UpdateStatus',
    headers: {
      Authorization: data.authorization,
    },
    body: data.requestBody,
    mediaType: 'application/json',
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.status
 * @param data.paymentChannels
 * @param data.fromDate
 * @param data.toDate
 * @param data.keyword
 * @param data.from
 * @param data.size
 * @returns unknown Success
 * @throws ApiError
 */
export const getEcomEcomTopupStaffGetByQuery = (
  data: GetEcomEcomTopupStaffGetByQueryData,
): CancelablePromise<GetEcomEcomTopupStaffGetByQueryResponse> => {
  return __request(OpenAPI, {
    method: 'GET',
    url: '/Ecom/EcomTopupStaff/GetByQuery',
    headers: {
      Authorization: data.authorization,
    },
    query: {
      Status: data.status,
      PaymentChannels: data.paymentChannels,
      FromDate: data.fromDate,
      ToDate: data.toDate,
      Keyword: data.keyword,
      From: data.from,
      Size: data.size,
    },
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.requestBody
 * @returns unknown Success
 * @throws ApiError
 */
export const postEcomEcomTopupStaffExportTopUp = (
  data: PostEcomEcomTopupStaffExportTopUpData,
): CancelablePromise<PostEcomEcomTopupStaffExportTopUpResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/Ecom/EcomTopupStaff/ExportTopUp',
    headers: {
      Authorization: data.authorization,
    },
    body: data.requestBody,
    mediaType: 'application/json',
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.status
 * @param data.paymentChannels
 * @param data.fromDate
 * @param data.toDate
 * @param data.keyword
 * @param data.from
 * @param data.size
 * @returns unknown Success
 * @throws ApiError
 */
export const getEcomEcomTopupUserGetByQuery = (
  data: GetEcomEcomTopupUserGetByQueryData,
): CancelablePromise<GetEcomEcomTopupUserGetByQueryResponse> => {
  return __request(OpenAPI, {
    method: 'GET',
    url: '/Ecom/EcomTopupUser/GetByQuery',
    headers: {
      Authorization: data.authorization,
    },
    query: {
      Status: data.status,
      PaymentChannels: data.paymentChannels,
      FromDate: data.fromDate,
      ToDate: data.toDate,
      Keyword: data.keyword,
      From: data.from,
      Size: data.size,
    },
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.keyword
 * @param data.userId
 * @param data.userTypes
 * @param data.status
 * @param data.paymentMethods
 * @param data.fromDate
 * @param data.toDate
 * @param data.from
 * @param data.size
 * @returns unknown Success
 * @throws ApiError
 */
export const getEcomEcomTransactionGetMyTransaction = (
  data: GetEcomEcomTransactionGetMyTransactionData,
): CancelablePromise<GetEcomEcomTransactionGetMyTransactionResponse> => {
  return __request(OpenAPI, {
    method: 'GET',
    url: '/Ecom/EcomTransaction/GetMyTransaction',
    headers: {
      Authorization: data.authorization,
    },
    query: {
      Keyword: data.keyword,
      UserId: data.userId,
      UserTypes: data.userTypes,
      Status: data.status,
      PaymentMethods: data.paymentMethods,
      FromDate: data.fromDate,
      ToDate: data.toDate,
      From: data.from,
      Size: data.size,
    },
  });
};

/**
 * @param data The data for the request.
 * @param data.keyword
 * @param data.userId
 * @param data.userTypes
 * @param data.status
 * @param data.paymentMethods
 * @param data.fromDate
 * @param data.toDate
 * @param data.from
 * @param data.size
 * @returns unknown Success
 * @throws ApiError
 */
export const getEcomEcomTransactionGetAllTransaction = (
  data: GetEcomEcomTransactionGetAllTransactionData = {},
): CancelablePromise<GetEcomEcomTransactionGetAllTransactionResponse> => {
  return __request(OpenAPI, {
    method: 'GET',
    url: '/Ecom/EcomTransaction/GetAllTransaction',
    query: {
      Keyword: data.keyword,
      UserId: data.userId,
      UserTypes: data.userTypes,
      Status: data.status,
      PaymentMethods: data.paymentMethods,
      FromDate: data.fromDate,
      ToDate: data.toDate,
      From: data.from,
      Size: data.size,
    },
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.id
 * @returns unknown Success
 * @throws ApiError
 */
export const getEcomEcomTransactionGetOrderById = (
  data: GetEcomEcomTransactionGetOrderByIdData,
): CancelablePromise<GetEcomEcomTransactionGetOrderByIdResponse> => {
  return __request(OpenAPI, {
    method: 'GET',
    url: '/Ecom/EcomTransaction/GetOrderById',
    headers: {
      Authorization: data.authorization,
    },
    query: {
      id: data.id,
    },
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.requestBody
 * @returns unknown Success
 * @throws ApiError
 */
export const postEcomEcomTransactionExportMyTransaction = (
  data: PostEcomEcomTransactionExportMyTransactionData,
): CancelablePromise<PostEcomEcomTransactionExportMyTransactionResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/Ecom/EcomTransaction/ExportMyTransaction',
    headers: {
      Authorization: data.authorization,
    },
    body: data.requestBody,
    mediaType: 'application/json',
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.requestBody
 * @returns unknown Success
 * @throws ApiError
 */
export const postEcomEcomTransactionExportGetAllTransaction = (
  data: PostEcomEcomTransactionExportGetAllTransactionData,
): CancelablePromise<PostEcomEcomTransactionExportGetAllTransactionResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/Ecom/EcomTransaction/ExportGetAllTransaction',
    headers: {
      Authorization: data.authorization,
    },
    body: data.requestBody,
    mediaType: 'application/json',
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.requestBody
 * @returns unknown Success
 * @throws ApiError
 */
export const postEcomUnitCreate = (
  data: PostEcomUnitCreateData,
): CancelablePromise<PostEcomUnitCreateResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/EcomUnit/Create',
    headers: {
      Authorization: data.authorization,
    },
    body: data.requestBody,
    mediaType: 'application/json',
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.requestBody
 * @returns unknown Success
 * @throws ApiError
 */
export const putEcomUnitUpdate = (
  data: PutEcomUnitUpdateData,
): CancelablePromise<PutEcomUnitUpdateResponse> => {
  return __request(OpenAPI, {
    method: 'PUT',
    url: '/EcomUnit/Update',
    headers: {
      Authorization: data.authorization,
    },
    body: data.requestBody,
    mediaType: 'application/json',
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.keyWord
 * @param data.status
 * @param data.type
 * @param data.projectId
 * @param data.from
 * @param data.size
 * @returns unknown Success
 * @throws ApiError
 */
export const getEcomUnitGetAll = (
  data: GetEcomUnitGetAllData,
): CancelablePromise<GetEcomUnitGetAllResponse> => {
  return __request(OpenAPI, {
    method: 'GET',
    url: '/EcomUnit/GetAll',
    headers: {
      Authorization: data.authorization,
    },
    query: {
      KeyWord: data.keyWord,
      Status: data.status,
      Type: data.type,
      ProjectId: data.projectId,
      From: data.from,
      Size: data.size,
    },
  });
};

/**
 * @param data The data for the request.
 * @param data.projectId
 * @param data.status
 * @returns unknown Success
 * @throws ApiError
 */
export const getEcomUnitGetListByProjectId = (
  data: GetEcomUnitGetListByProjectIdData = {},
): CancelablePromise<GetEcomUnitGetListByProjectIdResponse> => {
  return __request(OpenAPI, {
    method: 'GET',
    url: '/EcomUnit/GetListByProjectId',
    query: {
      projectId: data.projectId,
      status: data.status,
    },
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.id
 * @returns unknown Success
 * @throws ApiError
 */
export const getEcomUnitGetDetail = (
  data: GetEcomUnitGetDetailData,
): CancelablePromise<GetEcomUnitGetDetailResponse> => {
  return __request(OpenAPI, {
    method: 'GET',
    url: '/EcomUnit/GetDetail',
    headers: {
      Authorization: data.authorization,
    },
    query: {
      id: data.id,
    },
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.id
 * @returns unknown Success
 * @throws ApiError
 */
export const deleteEcomUnitDelete = (
  data: DeleteEcomUnitDeleteData,
): CancelablePromise<DeleteEcomUnitDeleteResponse> => {
  return __request(OpenAPI, {
    method: 'DELETE',
    url: '/EcomUnit/Delete',
    headers: {
      Authorization: data.authorization,
    },
    query: {
      id: data.id,
    },
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.input
 * @returns unknown Success
 * @throws ApiError
 */
export const getEcomUnitGetAutoCompleteAutocomplete = (
  data: GetEcomUnitGetAutoCompleteAutocompleteData,
): CancelablePromise<GetEcomUnitGetAutoCompleteAutocompleteResponse> => {
  return __request(OpenAPI, {
    method: 'GET',
    url: '/EcomUnit/GetAutoComplete/Autocomplete',
    headers: {
      Authorization: data.authorization,
    },
    query: {
      input: data.input,
    },
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.id
 * @returns unknown Success
 * @throws ApiError
 */
export const getEcomEcomVatConfigGet = (
  data: GetEcomEcomVatConfigGetData,
): CancelablePromise<GetEcomEcomVatConfigGetResponse> => {
  return __request(OpenAPI, {
    method: 'GET',
    url: '/Ecom/EcomVatConfig/Get',
    headers: {
      Authorization: data.authorization,
    },
    query: {
      id: data.id,
    },
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.requestBody
 * @returns unknown Success
 * @throws ApiError
 */
export const postEcomEcomVatConfigGetAll = (
  data: PostEcomEcomVatConfigGetAllData,
): CancelablePromise<PostEcomEcomVatConfigGetAllResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/Ecom/EcomVatConfig/GetAll',
    headers: {
      Authorization: data.authorization,
    },
    body: data.requestBody,
    mediaType: 'application/json',
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.requestBody
 * @returns unknown Success
 * @throws ApiError
 */
export const postEcomEcomVatConfigCreate = (
  data: PostEcomEcomVatConfigCreateData,
): CancelablePromise<PostEcomEcomVatConfigCreateResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/Ecom/EcomVatConfig/Create',
    headers: {
      Authorization: data.authorization,
    },
    body: data.requestBody,
    mediaType: 'application/json',
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.requestBody
 * @returns unknown Success
 * @throws ApiError
 */
export const postEcomEcomVatConfigUpdate = (
  data: PostEcomEcomVatConfigUpdateData,
): CancelablePromise<PostEcomEcomVatConfigUpdateResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/Ecom/EcomVatConfig/Update',
    headers: {
      Authorization: data.authorization,
    },
    body: data.requestBody,
    mediaType: 'application/json',
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.id
 * @returns unknown Success
 * @throws ApiError
 */
export const deleteEcomEcomVatConfigDeleteById = (
  data: DeleteEcomEcomVatConfigDeleteByIdData,
): CancelablePromise<DeleteEcomEcomVatConfigDeleteByIdResponse> => {
  return __request(OpenAPI, {
    method: 'DELETE',
    url: '/Ecom/EcomVatConfig/DeleteById',
    headers: {
      Authorization: data.authorization,
    },
    query: {
      id: data.id,
    },
  });
};

/**
 * @returns unknown Success
 * @throws ApiError
 */
export const getEcomEcomVatConfigGetCurrent =
  (): CancelablePromise<GetEcomEcomVatConfigGetCurrentResponse> => {
    return __request(OpenAPI, {
      method: 'GET',
      url: '/Ecom/EcomVatConfig/GetCurrent',
    });
  };

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @returns unknown Success
 * @throws ApiError
 */
export const postEcomEcomVatConfigMigrationVatDefault = (
  data: PostEcomEcomVatConfigMigrationVatDefaultData,
): CancelablePromise<PostEcomEcomVatConfigMigrationVatDefaultResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/Ecom/EcomVatConfig/MigrationVatDefault',
    headers: {
      Authorization: data.authorization,
    },
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.requestBody
 * @returns unknown Success
 * @throws ApiError
 */
export const postEventGetByQuery = (
  data: PostEventGetByQueryData,
): CancelablePromise<PostEventGetByQueryResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/Event/GetByQuery',
    headers: {
      Authorization: data.authorization,
    },
    body: data.requestBody,
    mediaType: 'application/json',
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.id
 * @returns unknown Success
 * @throws ApiError
 */
export const getEventGetById = (
  data: GetEventGetByIdData,
): CancelablePromise<GetEventGetByIdResponse> => {
  return __request(OpenAPI, {
    method: 'GET',
    url: '/Event/GetById',
    headers: {
      Authorization: data.authorization,
    },
    query: {
      id: data.id,
    },
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.formData
 * @returns unknown Success
 * @throws ApiError
 */
export const putEventCreate = (
  data: PutEventCreateData,
): CancelablePromise<PutEventCreateResponse> => {
  return __request(OpenAPI, {
    method: 'PUT',
    url: '/Event/Create',
    headers: {
      Authorization: data.authorization,
    },
    formData: data.formData,
    mediaType: 'multipart/form-data',
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.formData
 * @returns unknown Success
 * @throws ApiError
 */
export const postEventUpdate = (
  data: PostEventUpdateData,
): CancelablePromise<PostEventUpdateResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/Event/Update',
    headers: {
      Authorization: data.authorization,
    },
    formData: data.formData,
    mediaType: 'multipart/form-data',
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.id
 * @returns unknown Success
 * @throws ApiError
 */
export const deleteEventDelete = (
  data: DeleteEventDeleteData,
): CancelablePromise<DeleteEventDeleteResponse> => {
  return __request(OpenAPI, {
    method: 'DELETE',
    url: '/Event/Delete',
    headers: {
      Authorization: data.authorization,
    },
    query: {
      id: data.id,
    },
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.id
 * @returns unknown Success
 * @throws ApiError
 */
export const postEventNotification = (
  data: PostEventNotificationData,
): CancelablePromise<PostEventNotificationResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/Event/Notification',
    headers: {
      Authorization: data.authorization,
    },
    query: {
      id: data.id,
    },
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @returns unknown Success
 * @throws ApiError
 */
export const postEventGetNearestEvent = (
  data: PostEventGetNearestEventData,
): CancelablePromise<PostEventGetNearestEventResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/Event/GetNearestEvent',
    headers: {
      Authorization: data.authorization,
    },
  });
};

/**
 * @param data The data for the request.
 * @param data.id
 * @param data.numberHours
 * @param data.userName
 * @returns unknown Success
 * @throws ApiError
 */
export const postEventRemind = (
  data: PostEventRemindData = {},
): CancelablePromise<PostEventRemindResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/Event/Remind',
    query: {
      id: data.id,
      numberHours: data.numberHours,
      userName: data.userName,
    },
  });
};

/**
 * @param data The data for the request.
 * @param data.id
 * @param data.numberHours
 * @param data.userName
 * @param data.date
 * @param data.period
 * @param data.jobindex
 * @returns unknown Success
 * @throws ApiError
 */
export const postEventRemindSub = (
  data: PostEventRemindSubData = {},
): CancelablePromise<PostEventRemindSubResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/Event/RemindSub',
    query: {
      id: data.id,
      numberHours: data.numberHours,
      userName: data.userName,
      _date: data.date,
      period: data.period,
      jobindex: data.jobindex,
    },
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @returns unknown Success
 * @throws ApiError
 */
export const postEventMigrateShowOnApp = (
  data: PostEventMigrateShowOnAppData,
): CancelablePromise<PostEventMigrateShowOnAppResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/Event/MigrateShowOnApp',
    headers: {
      Authorization: data.authorization,
    },
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.lat
 * @param data.lng
 * @returns unknown Success
 * @throws ApiError
 */
export const getGoogleMapsLocationGeocode = (
  data: GetGoogleMapsLocationGeocodeData,
): CancelablePromise<GetGoogleMapsLocationGeocodeResponse> => {
  return __request(OpenAPI, {
    method: 'GET',
    url: '/GoogleMaps/LocationGeocode',
    headers: {
      Authorization: data.authorization,
    },
    query: {
      lat: data.lat,
      lng: data.lng,
    },
  });
};

/**
 * @param data The data for the request.
 * @param data.input
 * @returns unknown Success
 * @throws ApiError
 */
export const getGoogleMapsAutocomplete = (
  data: GetGoogleMapsAutocompleteData = {},
): CancelablePromise<GetGoogleMapsAutocompleteResponse> => {
  return __request(OpenAPI, {
    method: 'GET',
    url: '/GoogleMaps/Autocomplete',
    query: {
      input: data.input,
    },
  });
};

/**
 * @param data The data for the request.
 * @param data.placeId
 * @returns unknown Success
 * @throws ApiError
 */
export const getGoogleMapsPlaceDetail = (
  data: GetGoogleMapsPlaceDetailData = {},
): CancelablePromise<GetGoogleMapsPlaceDetailResponse> => {
  return __request(OpenAPI, {
    method: 'GET',
    url: '/GoogleMaps/PlaceDetail',
    query: {
      placeId: data.placeId,
    },
  });
};

/**
 * @returns unknown Success
 * @throws ApiError
 */
export const getGoogleMapsNearBy = (): CancelablePromise<GetGoogleMapsNearByResponse> => {
  return __request(OpenAPI, {
    method: 'GET',
    url: '/GoogleMaps/NearBy',
  });
};

/**
 * @returns unknown Success
 * @throws ApiError
 */
export const getHealth = (): CancelablePromise<GetHealthResponse> => {
  return __request(OpenAPI, {
    method: 'GET',
    url: '/health',
  });
};

/**
 * @returns unknown Success
 * @throws ApiError
 */
export const getHealths = (): CancelablePromise<GetHealthsResponse> => {
  return __request(OpenAPI, {
    method: 'GET',
    url: '/healths',
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.requestBody
 * @returns unknown Success
 * @throws ApiError
 */
export const postEcomKeywordBlacklistCreateOrUpdate = (
  data: PostEcomKeywordBlacklistCreateOrUpdateData,
): CancelablePromise<PostEcomKeywordBlacklistCreateOrUpdateResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/Ecom/KeywordBlacklist/CreateOrUpdate',
    headers: {
      Authorization: data.authorization,
    },
    body: data.requestBody,
    mediaType: 'application/json',
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.id
 * @returns unknown Success
 * @throws ApiError
 */
export const deleteEcomKeywordBlacklistDelete = (
  data: DeleteEcomKeywordBlacklistDeleteData,
): CancelablePromise<DeleteEcomKeywordBlacklistDeleteResponse> => {
  return __request(OpenAPI, {
    method: 'DELETE',
    url: '/Ecom/KeywordBlacklist/Delete',
    headers: {
      Authorization: data.authorization,
    },
    query: {
      id: data.id,
    },
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @returns unknown Success
 * @throws ApiError
 */
export const deleteEcomKeywordBlacklistDeleteAll = (
  data: DeleteEcomKeywordBlacklistDeleteAllData,
): CancelablePromise<DeleteEcomKeywordBlacklistDeleteAllResponse> => {
  return __request(OpenAPI, {
    method: 'DELETE',
    url: '/Ecom/KeywordBlacklist/DeleteAll',
    headers: {
      Authorization: data.authorization,
    },
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @returns unknown Success
 * @throws ApiError
 */
export const getEcomKeywordBlacklistGetAll = (
  data: GetEcomKeywordBlacklistGetAllData,
): CancelablePromise<GetEcomKeywordBlacklistGetAllResponse> => {
  return __request(OpenAPI, {
    method: 'GET',
    url: '/Ecom/KeywordBlacklist/GetAll',
    headers: {
      Authorization: data.authorization,
    },
  });
};

/**
 * @returns unknown Success
 * @throws ApiError
 */
export const getEcomKeywordBlacklistGetLists =
  (): CancelablePromise<GetEcomKeywordBlacklistGetListsResponse> => {
    return __request(OpenAPI, {
      method: 'GET',
      url: '/Ecom/KeywordBlacklist/GetLists',
    });
  };

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.keyWord
 * @param data.status
 * @param data.from
 * @param data.size
 * @returns unknown Success
 * @throws ApiError
 */
export const getEcomLaGetByQuery = (
  data: GetEcomLaGetByQueryData,
): CancelablePromise<GetEcomLaGetByQueryResponse> => {
  return __request(OpenAPI, {
    method: 'GET',
    url: '/Ecom/LA/GetByQuery',
    headers: {
      Authorization: data.authorization,
    },
    query: {
      KeyWord: data.keyWord,
      Status: data.status,
      From: data.from,
      Size: data.size,
    },
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.id
 * @returns unknown Success
 * @throws ApiError
 */
export const getEcomLaGetDetail = (
  data: GetEcomLaGetDetailData,
): CancelablePromise<GetEcomLaGetDetailResponse> => {
  return __request(OpenAPI, {
    method: 'GET',
    url: '/Ecom/LA/GetDetail',
    headers: {
      Authorization: data.authorization,
    },
    query: {
      id: data.id,
    },
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.requestBody
 * @returns unknown Success
 * @throws ApiError
 */
export const postEcomLaCreate = (
  data: PostEcomLaCreateData,
): CancelablePromise<PostEcomLaCreateResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/Ecom/LA/Create',
    headers: {
      Authorization: data.authorization,
    },
    body: data.requestBody,
    mediaType: 'application/json',
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.requestBody
 * @returns unknown Success
 * @throws ApiError
 */
export const putEcomLaUpdate = (
  data: PutEcomLaUpdateData,
): CancelablePromise<PutEcomLaUpdateResponse> => {
  return __request(OpenAPI, {
    method: 'PUT',
    url: '/Ecom/LA/Update',
    headers: {
      Authorization: data.authorization,
    },
    body: data.requestBody,
    mediaType: 'application/json',
  });
};

/**
 * @returns unknown Success
 * @throws ApiError
 */
export const postEcomListingLocationListingUnset =
  (): CancelablePromise<PostEcomListingLocationListingUnsetResponse> => {
    return __request(OpenAPI, {
      method: 'POST',
      url: '/Ecom/ListingLocation/ListingUnset',
    });
  };

/**
 * @returns unknown Success
 * @throws ApiError
 */
export const postEcomListingLocationListingMigration =
  (): CancelablePromise<PostEcomListingLocationListingMigrationResponse> => {
    return __request(OpenAPI, {
      method: 'POST',
      url: '/Ecom/ListingLocation/ListingMigration',
    });
  };

/**
 * @returns unknown Success
 * @throws ApiError
 */
export const postEcomListingLocationListingMigrationSetIsDelete =
  (): CancelablePromise<PostEcomListingLocationListingMigrationSetIsDeleteResponse> => {
    return __request(OpenAPI, {
      method: 'POST',
      url: '/Ecom/ListingLocation/ListingMigrationSetIsDelete',
    });
  };

/**
 * @returns unknown Success
 * @throws ApiError
 */
export const postEcomListingLocationListingMigrationShortDescription =
  (): CancelablePromise<PostEcomListingLocationListingMigrationShortDescriptionResponse> => {
    return __request(OpenAPI, {
      method: 'POST',
      url: '/Ecom/ListingLocation/ListingMigrationShortDescription',
    });
  };

/**
 * @returns unknown Success
 * @throws ApiError
 */
export const postEcomListingLocationListingLocation =
  (): CancelablePromise<PostEcomListingLocationListingLocationResponse> => {
    return __request(OpenAPI, {
      method: 'POST',
      url: '/Ecom/ListingLocation/ListingLocation',
    });
  };

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.keyWord
 * @param data.projectIds
 * @param data.status
 * @param data.from
 * @param data.size
 * @returns unknown Success
 * @throws ApiError
 */
export const getEcomOsaGetByQuery = (
  data: GetEcomOsaGetByQueryData,
): CancelablePromise<GetEcomOsaGetByQueryResponse> => {
  return __request(OpenAPI, {
    method: 'GET',
    url: '/Ecom/OSA/GetByQuery',
    headers: {
      Authorization: data.authorization,
    },
    query: {
      KeyWord: data.keyWord,
      ProjectIds: data.projectIds,
      Status: data.status,
      From: data.from,
      Size: data.size,
    },
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.id
 * @returns unknown Success
 * @throws ApiError
 */
export const getEcomOsaGetDetail = (
  data: GetEcomOsaGetDetailData,
): CancelablePromise<GetEcomOsaGetDetailResponse> => {
  return __request(OpenAPI, {
    method: 'GET',
    url: '/Ecom/OSA/GetDetail',
    headers: {
      Authorization: data.authorization,
    },
    query: {
      id: data.id,
    },
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.requestBody
 * @returns unknown Success
 * @throws ApiError
 */
export const postEcomOsaCreate = (
  data: PostEcomOsaCreateData,
): CancelablePromise<PostEcomOsaCreateResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/Ecom/OSA/Create',
    headers: {
      Authorization: data.authorization,
    },
    body: data.requestBody,
    mediaType: 'application/json',
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.requestBody
 * @returns unknown Success
 * @throws ApiError
 */
export const putEcomOsaUpdate = (
  data: PutEcomOsaUpdateData,
): CancelablePromise<PutEcomOsaUpdateResponse> => {
  return __request(OpenAPI, {
    method: 'PUT',
    url: '/Ecom/OSA/Update',
    headers: {
      Authorization: data.authorization,
    },
    body: data.requestBody,
    mediaType: 'application/json',
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.phone
 * @param data.from
 * @param data.size
 * @returns unknown Success
 * @throws ApiError
 */
export const getEcomOtpGetOtpByQuery = (
  data: GetEcomOtpGetOtpByQueryData,
): CancelablePromise<GetEcomOtpGetOtpByQueryResponse> => {
  return __request(OpenAPI, {
    method: 'GET',
    url: '/Ecom/Otp/GetOtpByQuery',
    headers: {
      Authorization: data.authorization,
    },
    query: {
      Phone: data.phone,
      From: data.from,
      Size: data.size,
    },
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @returns unknown Success
 * @throws ApiError
 */
export const postEcomOwnerCreateOrUpdate = (
  data: PostEcomOwnerCreateOrUpdateData,
): CancelablePromise<PostEcomOwnerCreateOrUpdateResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/Ecom/Owner/CreateOrUpdate',
    headers: {
      Authorization: data.authorization,
    },
  });
};

/**
 * @returns unknown Success
 * @throws ApiError
 */
export const getEcomOwnerGetDetail = (): CancelablePromise<GetEcomOwnerGetDetailResponse> => {
  return __request(OpenAPI, {
    method: 'GET',
    url: '/Ecom/Owner/GetDetail',
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @returns unknown Success
 * @throws ApiError
 */
export const getEcomOwnerGetDetailEdit = (
  data: GetEcomOwnerGetDetailEditData,
): CancelablePromise<GetEcomOwnerGetDetailEditResponse> => {
  return __request(OpenAPI, {
    method: 'GET',
    url: '/Ecom/Owner/GetDetailEdit',
    headers: {
      Authorization: data.authorization,
    },
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.keyWord
 * @param data.status
 * @param data.from
 * @param data.size
 * @returns unknown Success
 * @throws ApiError
 */
export const getEcomOwnerInquiryGetByQuery = (
  data: GetEcomOwnerInquiryGetByQueryData,
): CancelablePromise<GetEcomOwnerInquiryGetByQueryResponse> => {
  return __request(OpenAPI, {
    method: 'GET',
    url: '/Ecom/OwnerInquiry/GetByQuery',
    headers: {
      Authorization: data.authorization,
    },
    query: {
      KeyWord: data.keyWord,
      Status: data.status,
      From: data.from,
      Size: data.size,
    },
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.keyWord
 * @param data.status
 * @param data.from
 * @param data.size
 * @returns unknown Success
 * @throws ApiError
 */
export const getEcomOwnerInquiryGetByQueryForClient = (
  data: GetEcomOwnerInquiryGetByQueryForClientData,
): CancelablePromise<GetEcomOwnerInquiryGetByQueryForClientResponse> => {
  return __request(OpenAPI, {
    method: 'GET',
    url: '/Ecom/OwnerInquiry/GetByQueryForClient',
    headers: {
      Authorization: data.authorization,
    },
    query: {
      KeyWord: data.keyWord,
      Status: data.status,
      From: data.from,
      Size: data.size,
    },
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @returns unknown Success
 * @throws ApiError
 */
export const getEcomOwnerInquiryGetAll = (
  data: GetEcomOwnerInquiryGetAllData,
): CancelablePromise<GetEcomOwnerInquiryGetAllResponse> => {
  return __request(OpenAPI, {
    method: 'GET',
    url: '/Ecom/OwnerInquiry/GetAll',
    headers: {
      Authorization: data.authorization,
    },
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.id
 * @returns unknown Success
 * @throws ApiError
 */
export const getEcomOwnerInquiryGetDetailForClient = (
  data: GetEcomOwnerInquiryGetDetailForClientData,
): CancelablePromise<GetEcomOwnerInquiryGetDetailForClientResponse> => {
  return __request(OpenAPI, {
    method: 'GET',
    url: '/Ecom/OwnerInquiry/GetDetailForClient',
    headers: {
      Authorization: data.authorization,
    },
    query: {
      id: data.id,
    },
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.id
 * @returns unknown Success
 * @throws ApiError
 */
export const getEcomOwnerInquiryGetDetail = (
  data: GetEcomOwnerInquiryGetDetailData,
): CancelablePromise<GetEcomOwnerInquiryGetDetailResponse> => {
  return __request(OpenAPI, {
    method: 'GET',
    url: '/Ecom/OwnerInquiry/GetDetail',
    headers: {
      Authorization: data.authorization,
    },
    query: {
      id: data.id,
    },
  });
};

/**
 * @param data The data for the request.
 * @param data.requestBody
 * @returns unknown Success
 * @throws ApiError
 */
export const postEcomOwnerInquiryCreate = (
  data: PostEcomOwnerInquiryCreateData = {},
): CancelablePromise<PostEcomOwnerInquiryCreateResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/Ecom/OwnerInquiry/Create',
    body: data.requestBody,
    mediaType: 'application/json',
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.requestBody
 * @returns unknown Success
 * @throws ApiError
 */
export const putEcomOwnerInquiryUpdate = (
  data: PutEcomOwnerInquiryUpdateData,
): CancelablePromise<PutEcomOwnerInquiryUpdateResponse> => {
  return __request(OpenAPI, {
    method: 'PUT',
    url: '/Ecom/OwnerInquiry/Update',
    headers: {
      Authorization: data.authorization,
    },
    body: data.requestBody,
    mediaType: 'application/json',
  });
};

/**
 * @param data The data for the request.
 * @param data.requestBody
 * @returns unknown Success
 * @throws ApiError
 */
export const postEcomPayMeIpn = (
  data: PostEcomPayMeIpnData = {},
): CancelablePromise<PostEcomPayMeIpnResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/Ecom/PayMe/ipn',
    body: data.requestBody,
    mediaType: 'application/json',
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.requestBody
 * @returns unknown Success
 * @throws ApiError
 */
export const postEcomPayMePaymentWeb = (
  data: PostEcomPayMePaymentWebData,
): CancelablePromise<PostEcomPayMePaymentWebResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/Ecom/PayMe/Payment/Web',
    headers: {
      Authorization: data.authorization,
    },
    body: data.requestBody,
    mediaType: 'application/json',
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.transaction
 * @param data.authorization Bearer {token}
 * @returns unknown Success
 * @throws ApiError
 */
export const getEcomPayMePaymentQuery = (
  data: GetEcomPayMePaymentQueryData,
): CancelablePromise<GetEcomPayMePaymentQueryResponse> => {
  return __request(OpenAPI, {
    method: 'GET',
    url: '/Ecom/PayMe/Payment/Query',
    headers: {
      Authorization: data.authorization,
    },
    query: {
      Transaction: data.transaction,
    },
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @returns unknown Success
 * @throws ApiError
 */
export const postPingHifaceLog = (
  data: PostPingHifaceLogData,
): CancelablePromise<PostPingHifaceLogResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/Ping/hifaceLog',
    headers: {
      Authorization: data.authorization,
    },
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @returns unknown Success
 * @throws ApiError
 */
export const postPingTestSchedule = (
  data: PostPingTestScheduleData,
): CancelablePromise<PostPingTestScheduleResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/Ping/testSchedule',
    headers: {
      Authorization: data.authorization,
    },
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @returns unknown Success
 * @throws ApiError
 */
export const postPingTestTask = (
  data: PostPingTestTaskData,
): CancelablePromise<PostPingTestTaskResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/Ping/testTask',
    headers: {
      Authorization: data.authorization,
    },
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.param
 * @returns unknown Success
 * @throws ApiError
 */
export const postPingWebhookTask = (
  data: PostPingWebhookTaskData,
): CancelablePromise<PostPingWebhookTaskResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/Ping/WebhookTask',
    headers: {
      Authorization: data.authorization,
    },
    query: {
      param: data.param,
    },
  });
};

/**
 * @param data The data for the request.
 * @param data.customerId
 * @returns unknown Success
 * @throws ApiError
 */
export const postPingByCustomerId = (
  data: PostPingByCustomerIdData,
): CancelablePromise<PostPingByCustomerIdResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/Ping/{customerId}',
    path: {
      customerId: data.customerId,
    },
  });
};

/**
 * @returns unknown Success
 * @throws ApiError
 */
export const postPingInitCommonPlace = (): CancelablePromise<PostPingInitCommonPlaceResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/Ping/InitCommonPlace',
  });
};

/**
 * @returns unknown Success
 * @throws ApiError
 */
export const getPingMigration = (): CancelablePromise<GetPingMigrationResponse> => {
  return __request(OpenAPI, {
    method: 'GET',
    url: '/Ping/Migration',
  });
};

/**
 * @returns unknown Success
 * @throws ApiError
 */
export const getPingDeleteIndex = (): CancelablePromise<GetPingDeleteIndexResponse> => {
  return __request(OpenAPI, {
    method: 'GET',
    url: '/Ping/DeleteIndex',
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @returns unknown Success
 * @throws ApiError
 */
export const postPingWebhook = (
  data: PostPingWebhookData,
): CancelablePromise<PostPingWebhookResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/Ping/webhook',
    headers: {
      Authorization: data.authorization,
    },
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.requestBody
 * @returns unknown Success
 * @throws ApiError
 */
export const postProjectGetProjectByQuery = (
  data: PostProjectGetProjectByQueryData,
): CancelablePromise<PostProjectGetProjectByQueryResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/Project/GetProjectByQuery',
    headers: {
      Authorization: data.authorization,
    },
    body: data.requestBody,
    mediaType: 'application/json',
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.id
 * @returns unknown Success
 * @throws ApiError
 */
export const getProjectGetProjectById = (
  data: GetProjectGetProjectByIdData,
): CancelablePromise<GetProjectGetProjectByIdResponse> => {
  return __request(OpenAPI, {
    method: 'GET',
    url: '/Project/GetProjectById',
    headers: {
      Authorization: data.authorization,
    },
    query: {
      id: data.id,
    },
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.id
 * @param data.note
 * @returns unknown Success
 * @throws ApiError
 */
export const deleteProjectDeleteProject = (
  data: DeleteProjectDeleteProjectData,
): CancelablePromise<DeleteProjectDeleteProjectResponse> => {
  return __request(OpenAPI, {
    method: 'DELETE',
    url: '/Project/DeleteProject',
    headers: {
      Authorization: data.authorization,
    },
    query: {
      id: data.id,
      note: data.note,
    },
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @returns unknown Success
 * @throws ApiError
 */
export const postProjectProjectGetImportTemplate = (
  data: PostProjectProjectGetImportTemplateData,
): CancelablePromise<PostProjectProjectGetImportTemplateResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/Project/Project_GetImportTemplate',
    headers: {
      Authorization: data.authorization,
    },
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.formData
 * @returns unknown Success
 * @throws ApiError
 */
export const postProjectProjectImport = (
  data: PostProjectProjectImportData,
): CancelablePromise<PostProjectProjectImportResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/Project/Project_Import',
    headers: {
      Authorization: data.authorization,
    },
    formData: data.formData,
    mediaType: 'multipart/form-data',
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.requestBody
 * @returns unknown Success
 * @throws ApiError
 */
export const postProjectGetProjectMoreInfoByQuery = (
  data: PostProjectGetProjectMoreInfoByQueryData,
): CancelablePromise<PostProjectGetProjectMoreInfoByQueryResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/Project/GetProjectMoreInfoByQuery',
    headers: {
      Authorization: data.authorization,
    },
    body: data.requestBody,
    mediaType: 'application/json',
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.id
 * @returns unknown Success
 * @throws ApiError
 */
export const getProjectGetProjectMoreInfoById = (
  data: GetProjectGetProjectMoreInfoByIdData,
): CancelablePromise<GetProjectGetProjectMoreInfoByIdResponse> => {
  return __request(OpenAPI, {
    method: 'GET',
    url: '/Project/GetProjectMoreInfoById',
    headers: {
      Authorization: data.authorization,
    },
    query: {
      id: data.id,
    },
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.formData
 * @returns unknown Success
 * @throws ApiError
 */
export const putProjectCreateProjectMoreInfo = (
  data: PutProjectCreateProjectMoreInfoData,
): CancelablePromise<PutProjectCreateProjectMoreInfoResponse> => {
  return __request(OpenAPI, {
    method: 'PUT',
    url: '/Project/CreateProjectMoreInfo',
    headers: {
      Authorization: data.authorization,
    },
    formData: data.formData,
    mediaType: 'multipart/form-data',
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.formData
 * @returns unknown Success
 * @throws ApiError
 */
export const postProjectUpdateProjectMoreInfo = (
  data: PostProjectUpdateProjectMoreInfoData,
): CancelablePromise<PostProjectUpdateProjectMoreInfoResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/Project/UpdateProjectMoreInfo',
    headers: {
      Authorization: data.authorization,
    },
    formData: data.formData,
    mediaType: 'multipart/form-data',
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.id
 * @returns unknown Success
 * @throws ApiError
 */
export const deleteProjectDeleteProjectMoreInfo = (
  data: DeleteProjectDeleteProjectMoreInfoData,
): CancelablePromise<DeleteProjectDeleteProjectMoreInfoResponse> => {
  return __request(OpenAPI, {
    method: 'DELETE',
    url: '/Project/DeleteProjectMoreInfo',
    headers: {
      Authorization: data.authorization,
    },
    query: {
      id: data.id,
    },
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.requestBody
 * @returns unknown Success
 * @throws ApiError
 */
export const postProjectGetProjectGalleryByQuery = (
  data: PostProjectGetProjectGalleryByQueryData,
): CancelablePromise<PostProjectGetProjectGalleryByQueryResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/Project/GetProjectGalleryByQuery',
    headers: {
      Authorization: data.authorization,
    },
    body: data.requestBody,
    mediaType: 'application/json',
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.id
 * @returns unknown Success
 * @throws ApiError
 */
export const getProjectGetProjectGalleryById = (
  data: GetProjectGetProjectGalleryByIdData,
): CancelablePromise<GetProjectGetProjectGalleryByIdResponse> => {
  return __request(OpenAPI, {
    method: 'GET',
    url: '/Project/GetProjectGalleryById',
    headers: {
      Authorization: data.authorization,
    },
    query: {
      id: data.id,
    },
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.formData
 * @returns unknown Success
 * @throws ApiError
 */
export const putProjectCreateProjectGallery = (
  data: PutProjectCreateProjectGalleryData,
): CancelablePromise<PutProjectCreateProjectGalleryResponse> => {
  return __request(OpenAPI, {
    method: 'PUT',
    url: '/Project/CreateProjectGallery',
    headers: {
      Authorization: data.authorization,
    },
    formData: data.formData,
    mediaType: 'multipart/form-data',
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.formData
 * @returns unknown Success
 * @throws ApiError
 */
export const postProjectUpdateProjectGallery = (
  data: PostProjectUpdateProjectGalleryData,
): CancelablePromise<PostProjectUpdateProjectGalleryResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/Project/UpdateProjectGallery',
    headers: {
      Authorization: data.authorization,
    },
    formData: data.formData,
    mediaType: 'multipart/form-data',
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.id
 * @returns unknown Success
 * @throws ApiError
 */
export const deleteProjectDeleteProjectGallery = (
  data: DeleteProjectDeleteProjectGalleryData,
): CancelablePromise<DeleteProjectDeleteProjectGalleryResponse> => {
  return __request(OpenAPI, {
    method: 'DELETE',
    url: '/Project/DeleteProjectGallery',
    headers: {
      Authorization: data.authorization,
    },
    query: {
      id: data.id,
    },
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.formData
 * @returns unknown Success
 * @throws ApiError
 */
export const postProjectProjectGalleryUploadImage = (
  data: PostProjectProjectGalleryUploadImageData,
): CancelablePromise<PostProjectProjectGalleryUploadImageResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/Project/ProjectGalleryUploadImage',
    headers: {
      Authorization: data.authorization,
    },
    formData: data.formData,
    mediaType: 'multipart/form-data',
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.requestBody
 * @returns unknown Success
 * @throws ApiError
 */
export const postProjectProjectGalleryDeleteImage = (
  data: PostProjectProjectGalleryDeleteImageData,
): CancelablePromise<PostProjectProjectGalleryDeleteImageResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/Project/ProjectGalleryDeleteImage',
    headers: {
      Authorization: data.authorization,
    },
    body: data.requestBody,
    mediaType: 'application/json',
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.requestBody
 * @returns unknown Success
 * @throws ApiError
 */
export const postProjectGetProjectSlideByQuery = (
  data: PostProjectGetProjectSlideByQueryData,
): CancelablePromise<PostProjectGetProjectSlideByQueryResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/Project/GetProjectSlideByQuery',
    headers: {
      Authorization: data.authorization,
    },
    body: data.requestBody,
    mediaType: 'application/json',
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.id
 * @returns unknown Success
 * @throws ApiError
 */
export const getProjectGetProjectSlideById = (
  data: GetProjectGetProjectSlideByIdData,
): CancelablePromise<GetProjectGetProjectSlideByIdResponse> => {
  return __request(OpenAPI, {
    method: 'GET',
    url: '/Project/GetProjectSlideById',
    headers: {
      Authorization: data.authorization,
    },
    query: {
      id: data.id,
    },
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.formData
 * @returns unknown Success
 * @throws ApiError
 */
export const putProjectCreateProjectSlide = (
  data: PutProjectCreateProjectSlideData,
): CancelablePromise<PutProjectCreateProjectSlideResponse> => {
  return __request(OpenAPI, {
    method: 'PUT',
    url: '/Project/CreateProjectSlide',
    headers: {
      Authorization: data.authorization,
    },
    formData: data.formData,
    mediaType: 'multipart/form-data',
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.formData
 * @returns unknown Success
 * @throws ApiError
 */
export const postProjectUpdateProjectSlide = (
  data: PostProjectUpdateProjectSlideData,
): CancelablePromise<PostProjectUpdateProjectSlideResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/Project/UpdateProjectSlide',
    headers: {
      Authorization: data.authorization,
    },
    formData: data.formData,
    mediaType: 'multipart/form-data',
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.id
 * @returns unknown Success
 * @throws ApiError
 */
export const deleteProjectDeleteProjectSlide = (
  data: DeleteProjectDeleteProjectSlideData,
): CancelablePromise<DeleteProjectDeleteProjectSlideResponse> => {
  return __request(OpenAPI, {
    method: 'DELETE',
    url: '/Project/DeleteProjectSlide',
    headers: {
      Authorization: data.authorization,
    },
    query: {
      id: data.id,
    },
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.requestBody
 * @returns unknown Success
 * @throws ApiError
 */
export const postProjectGetProjectMasterPlanByQuery = (
  data: PostProjectGetProjectMasterPlanByQueryData,
): CancelablePromise<PostProjectGetProjectMasterPlanByQueryResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/Project/GetProjectMasterPlanByQuery',
    headers: {
      Authorization: data.authorization,
    },
    body: data.requestBody,
    mediaType: 'application/json',
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.id
 * @returns unknown Success
 * @throws ApiError
 */
export const getProjectGetProjectMasterPlanById = (
  data: GetProjectGetProjectMasterPlanByIdData,
): CancelablePromise<GetProjectGetProjectMasterPlanByIdResponse> => {
  return __request(OpenAPI, {
    method: 'GET',
    url: '/Project/GetProjectMasterPlanById',
    headers: {
      Authorization: data.authorization,
    },
    query: {
      id: data.id,
    },
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.id
 * @returns unknown Success
 * @throws ApiError
 */
export const deleteProjectDeleteProjectMasterPlan = (
  data: DeleteProjectDeleteProjectMasterPlanData,
): CancelablePromise<DeleteProjectDeleteProjectMasterPlanResponse> => {
  return __request(OpenAPI, {
    method: 'DELETE',
    url: '/Project/DeleteProjectMasterPlan',
    headers: {
      Authorization: data.authorization,
    },
    query: {
      id: data.id,
    },
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.formData
 * @returns unknown Success
 * @throws ApiError
 */
export const postProjectProjectMasterPlanUploadImage = (
  data: PostProjectProjectMasterPlanUploadImageData,
): CancelablePromise<PostProjectProjectMasterPlanUploadImageResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/Project/ProjectMasterPlanUploadImage',
    headers: {
      Authorization: data.authorization,
    },
    formData: data.formData,
    mediaType: 'multipart/form-data',
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.requestBody
 * @returns unknown Success
 * @throws ApiError
 */
export const postProjectProjectMasterPlanDeleteImage = (
  data: PostProjectProjectMasterPlanDeleteImageData,
): CancelablePromise<PostProjectProjectMasterPlanDeleteImageResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/Project/ProjectMasterPlanDeleteImage',
    headers: {
      Authorization: data.authorization,
    },
    body: data.requestBody,
    mediaType: 'application/json',
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.requestBody
 * @returns unknown Success
 * @throws ApiError
 */
export const postProjectGetProject360AlbumByQuery = (
  data: PostProjectGetProject360AlbumByQueryData,
): CancelablePromise<PostProjectGetProject360AlbumByQueryResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/Project/GetProject360AlbumByQuery',
    headers: {
      Authorization: data.authorization,
    },
    body: data.requestBody,
    mediaType: 'application/json',
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.id
 * @returns unknown Success
 * @throws ApiError
 */
export const getProjectGetProject360AlbumById = (
  data: GetProjectGetProject360AlbumByIdData,
): CancelablePromise<GetProjectGetProject360AlbumByIdResponse> => {
  return __request(OpenAPI, {
    method: 'GET',
    url: '/Project/GetProject360AlbumById',
    headers: {
      Authorization: data.authorization,
    },
    query: {
      id: data.id,
    },
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.formData
 * @returns unknown Success
 * @throws ApiError
 */
export const putProjectCreateProject360Album = (
  data: PutProjectCreateProject360AlbumData,
): CancelablePromise<PutProjectCreateProject360AlbumResponse> => {
  return __request(OpenAPI, {
    method: 'PUT',
    url: '/Project/CreateProject360Album',
    headers: {
      Authorization: data.authorization,
    },
    formData: data.formData,
    mediaType: 'multipart/form-data',
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.formData
 * @returns unknown Success
 * @throws ApiError
 */
export const postProjectUpdateProject360Album = (
  data: PostProjectUpdateProject360AlbumData,
): CancelablePromise<PostProjectUpdateProject360AlbumResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/Project/UpdateProject360Album',
    headers: {
      Authorization: data.authorization,
    },
    formData: data.formData,
    mediaType: 'multipart/form-data',
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.id
 * @returns unknown Success
 * @throws ApiError
 */
export const deleteProjectDeleteProject360Album = (
  data: DeleteProjectDeleteProject360AlbumData,
): CancelablePromise<DeleteProjectDeleteProject360AlbumResponse> => {
  return __request(OpenAPI, {
    method: 'DELETE',
    url: '/Project/DeleteProject360Album',
    headers: {
      Authorization: data.authorization,
    },
    query: {
      id: data.id,
    },
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.formData
 * @returns unknown Success
 * @throws ApiError
 */
export const postProjectProject360AlbumUploadImage = (
  data: PostProjectProject360AlbumUploadImageData,
): CancelablePromise<PostProjectProject360AlbumUploadImageResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/Project/Project360AlbumUploadImage',
    headers: {
      Authorization: data.authorization,
    },
    formData: data.formData,
    mediaType: 'multipart/form-data',
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.requestBody
 * @returns unknown Success
 * @throws ApiError
 */
export const postProjectProject360AlbumDeleteImage = (
  data: PostProjectProject360AlbumDeleteImageData,
): CancelablePromise<PostProjectProject360AlbumDeleteImageResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/Project/Project360AlbumDeleteImage',
    headers: {
      Authorization: data.authorization,
    },
    body: data.requestBody,
    mediaType: 'application/json',
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.requestBody
 * @returns unknown Success
 * @throws ApiError
 */
export const postProjectGetProjectPolicyByQuery = (
  data: PostProjectGetProjectPolicyByQueryData,
): CancelablePromise<PostProjectGetProjectPolicyByQueryResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/Project/GetProjectPolicyByQuery',
    headers: {
      Authorization: data.authorization,
    },
    body: data.requestBody,
    mediaType: 'application/json',
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.id
 * @returns unknown Success
 * @throws ApiError
 */
export const getProjectGetProjectPolicyById = (
  data: GetProjectGetProjectPolicyByIdData,
): CancelablePromise<GetProjectGetProjectPolicyByIdResponse> => {
  return __request(OpenAPI, {
    method: 'GET',
    url: '/Project/GetProjectPolicyById',
    headers: {
      Authorization: data.authorization,
    },
    query: {
      id: data.id,
    },
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.formData
 * @returns unknown Success
 * @throws ApiError
 */
export const putProjectCreateProjectPolicy = (
  data: PutProjectCreateProjectPolicyData,
): CancelablePromise<PutProjectCreateProjectPolicyResponse> => {
  return __request(OpenAPI, {
    method: 'PUT',
    url: '/Project/CreateProjectPolicy',
    headers: {
      Authorization: data.authorization,
    },
    formData: data.formData,
    mediaType: 'multipart/form-data',
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.formData
 * @returns unknown Success
 * @throws ApiError
 */
export const postProjectUpdateProjectPolicy = (
  data: PostProjectUpdateProjectPolicyData,
): CancelablePromise<PostProjectUpdateProjectPolicyResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/Project/UpdateProjectPolicy',
    headers: {
      Authorization: data.authorization,
    },
    formData: data.formData,
    mediaType: 'multipart/form-data',
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.id
 * @returns unknown Success
 * @throws ApiError
 */
export const deleteProjectDeleteProjectPolicy = (
  data: DeleteProjectDeleteProjectPolicyData,
): CancelablePromise<DeleteProjectDeleteProjectPolicyResponse> => {
  return __request(OpenAPI, {
    method: 'DELETE',
    url: '/Project/DeleteProjectPolicy',
    headers: {
      Authorization: data.authorization,
    },
    query: {
      id: data.id,
    },
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.formData
 * @returns unknown Success
 * @throws ApiError
 */
export const postProjectProjectPolicyUploadFile = (
  data: PostProjectProjectPolicyUploadFileData,
): CancelablePromise<PostProjectProjectPolicyUploadFileResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/Project/ProjectPolicyUploadFile',
    headers: {
      Authorization: data.authorization,
    },
    formData: data.formData,
    mediaType: 'multipart/form-data',
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.requestBody
 * @returns unknown Success
 * @throws ApiError
 */
export const postProjectProjectPolicyDeleteFile = (
  data: PostProjectProjectPolicyDeleteFileData,
): CancelablePromise<PostProjectProjectPolicyDeleteFileResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/Project/ProjectPolicyDeleteFile',
    headers: {
      Authorization: data.authorization,
    },
    body: data.requestBody,
    mediaType: 'application/json',
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.requestBody
 * @returns unknown Success
 * @throws ApiError
 */
export const postProjectGetProjectBrochureByQuery = (
  data: PostProjectGetProjectBrochureByQueryData,
): CancelablePromise<PostProjectGetProjectBrochureByQueryResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/Project/GetProjectBrochureByQuery',
    headers: {
      Authorization: data.authorization,
    },
    body: data.requestBody,
    mediaType: 'application/json',
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.id
 * @returns unknown Success
 * @throws ApiError
 */
export const getProjectGetProjectBrochureById = (
  data: GetProjectGetProjectBrochureByIdData,
): CancelablePromise<GetProjectGetProjectBrochureByIdResponse> => {
  return __request(OpenAPI, {
    method: 'GET',
    url: '/Project/GetProjectBrochureById',
    headers: {
      Authorization: data.authorization,
    },
    query: {
      id: data.id,
    },
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.id
 * @returns unknown Success
 * @throws ApiError
 */
export const deleteProjectDeleteProjectBrochure = (
  data: DeleteProjectDeleteProjectBrochureData,
): CancelablePromise<DeleteProjectDeleteProjectBrochureResponse> => {
  return __request(OpenAPI, {
    method: 'DELETE',
    url: '/Project/DeleteProjectBrochure',
    headers: {
      Authorization: data.authorization,
    },
    query: {
      id: data.id,
    },
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.requestBody
 * @returns unknown Success
 * @throws ApiError
 */
export const postProjectGetProjectBlockByQuery = (
  data: PostProjectGetProjectBlockByQueryData,
): CancelablePromise<PostProjectGetProjectBlockByQueryResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/Project/GetProjectBlockByQuery',
    headers: {
      Authorization: data.authorization,
    },
    body: data.requestBody,
    mediaType: 'application/json',
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.id
 * @returns unknown Success
 * @throws ApiError
 */
export const getProjectGetProjectBlockById = (
  data: GetProjectGetProjectBlockByIdData,
): CancelablePromise<GetProjectGetProjectBlockByIdResponse> => {
  return __request(OpenAPI, {
    method: 'GET',
    url: '/Project/GetProjectBlockById',
    headers: {
      Authorization: data.authorization,
    },
    query: {
      id: data.id,
    },
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.formData
 * @returns unknown Success
 * @throws ApiError
 */
export const putProjectCreateProjectBlock = (
  data: PutProjectCreateProjectBlockData,
): CancelablePromise<PutProjectCreateProjectBlockResponse> => {
  return __request(OpenAPI, {
    method: 'PUT',
    url: '/Project/CreateProjectBlock',
    headers: {
      Authorization: data.authorization,
    },
    formData: data.formData,
    mediaType: 'multipart/form-data',
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.formData
 * @returns unknown Success
 * @throws ApiError
 */
export const postProjectUpdateProjectBlock = (
  data: PostProjectUpdateProjectBlockData,
): CancelablePromise<PostProjectUpdateProjectBlockResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/Project/UpdateProjectBlock',
    headers: {
      Authorization: data.authorization,
    },
    formData: data.formData,
    mediaType: 'multipart/form-data',
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.id
 * @returns unknown Success
 * @throws ApiError
 */
export const deleteProjectDeleteProjectBlock = (
  data: DeleteProjectDeleteProjectBlockData,
): CancelablePromise<DeleteProjectDeleteProjectBlockResponse> => {
  return __request(OpenAPI, {
    method: 'DELETE',
    url: '/Project/DeleteProjectBlock',
    headers: {
      Authorization: data.authorization,
    },
    query: {
      id: data.id,
    },
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.id
 * @returns unknown Success
 * @throws ApiError
 */
export const postProjectNotification = (
  data: PostProjectNotificationData,
): CancelablePromise<PostProjectNotificationResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/Project/Notification',
    headers: {
      Authorization: data.authorization,
    },
    query: {
      id: data.id,
    },
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @returns unknown Success
 * @throws ApiError
 */
export const postProjectMigrateShowOnOverviewReport = (
  data: PostProjectMigrateShowOnOverviewReportData,
): CancelablePromise<PostProjectMigrateShowOnOverviewReportResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/Project/MigrateShowOnOverviewReport',
    headers: {
      Authorization: data.authorization,
    },
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.requestBody
 * @returns unknown Success
 * @throws ApiError
 */
export const postPropertyGetByQuery = (
  data: PostPropertyGetByQueryData,
): CancelablePromise<PostPropertyGetByQueryResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/Property/GetByQuery',
    headers: {
      Authorization: data.authorization,
    },
    body: data.requestBody,
    mediaType: 'application/json',
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.requestBody
 * @returns unknown Success
 * @throws ApiError
 */
export const postPropertyGetByQueryForSaleProgram = (
  data: PostPropertyGetByQueryForSaleProgramData,
): CancelablePromise<PostPropertyGetByQueryForSaleProgramResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/Property/GetByQueryForSaleProgram',
    headers: {
      Authorization: data.authorization,
    },
    body: data.requestBody,
    mediaType: 'application/json',
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.loadAll
 * @param data.cartId
 * @param data.requestBody
 * @returns unknown Success
 * @throws ApiError
 */
export const postPropertyGetByQueryByUserAgency = (
  data: PostPropertyGetByQueryByUserAgencyData,
): CancelablePromise<PostPropertyGetByQueryByUserAgencyResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/Property/GetByQueryByUserAgency',
    headers: {
      Authorization: data.authorization,
    },
    query: {
      loadAll: data.loadAll,
      cartId: data.cartId,
    },
    body: data.requestBody,
    mediaType: 'application/json',
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.id
 * @returns unknown Success
 * @throws ApiError
 */
export const getPropertyGetById = (
  data: GetPropertyGetByIdData,
): CancelablePromise<GetPropertyGetByIdResponse> => {
  return __request(OpenAPI, {
    method: 'GET',
    url: '/Property/GetById',
    headers: {
      Authorization: data.authorization,
    },
    query: {
      id: data.id,
    },
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.formData
 * @returns unknown Success
 * @throws ApiError
 */
export const putPropertyCreate = (
  data: PutPropertyCreateData,
): CancelablePromise<PutPropertyCreateResponse> => {
  return __request(OpenAPI, {
    method: 'PUT',
    url: '/Property/Create',
    headers: {
      Authorization: data.authorization,
    },
    formData: data.formData,
    mediaType: 'multipart/form-data',
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.formData
 * @returns unknown Success
 * @throws ApiError
 */
export const postPropertyUpdate = (
  data: PostPropertyUpdateData,
): CancelablePromise<PostPropertyUpdateResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/Property/Update',
    headers: {
      Authorization: data.authorization,
    },
    formData: data.formData,
    mediaType: 'multipart/form-data',
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.id
 * @returns unknown Success
 * @throws ApiError
 */
export const deletePropertyDelete = (
  data: DeletePropertyDeleteData,
): CancelablePromise<DeletePropertyDeleteResponse> => {
  return __request(OpenAPI, {
    method: 'DELETE',
    url: '/Property/Delete',
    headers: {
      Authorization: data.authorization,
    },
    query: {
      id: data.id,
    },
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.type
 * @param data.formData
 * @returns unknown Success
 * @throws ApiError
 */
export const postPropertyUploadImage = (
  data: PostPropertyUploadImageData,
): CancelablePromise<PostPropertyUploadImageResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/Property/UploadImage',
    headers: {
      Authorization: data.authorization,
    },
    query: {
      type: data.type,
    },
    formData: data.formData,
    mediaType: 'multipart/form-data',
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.type
 * @param data.requestBody
 * @returns unknown Success
 * @throws ApiError
 */
export const postPropertyDeleteImage = (
  data: PostPropertyDeleteImageData,
): CancelablePromise<PostPropertyDeleteImageResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/Property/DeleteImage',
    headers: {
      Authorization: data.authorization,
    },
    query: {
      type: data.type,
    },
    body: data.requestBody,
    mediaType: 'application/json',
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.requestBody
 * @returns unknown Success
 * @throws ApiError
 */
export const postPropertyExport = (
  data: PostPropertyExportData,
): CancelablePromise<PostPropertyExportResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/Property/Export',
    headers: {
      Authorization: data.authorization,
    },
    body: data.requestBody,
    mediaType: 'application/json',
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.requestBody
 * @returns unknown Success
 * @throws ApiError
 */
export const postPropertyExportByProject = (
  data: PostPropertyExportByProjectData,
): CancelablePromise<PostPropertyExportByProjectResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/Property/ExportByProject',
    headers: {
      Authorization: data.authorization,
    },
    body: data.requestBody,
    mediaType: 'application/json',
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.projectId
 * @returns unknown Success
 * @throws ApiError
 */
export const postPropertyGetImportTemplate = (
  data: PostPropertyGetImportTemplateData,
): CancelablePromise<PostPropertyGetImportTemplateResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/Property/GetImportTemplate',
    headers: {
      Authorization: data.authorization,
    },
    query: {
      projectId: data.projectId,
    },
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.formData
 * @returns unknown Success
 * @throws ApiError
 */
export const postPropertyImport = (
  data: PostPropertyImportData,
): CancelablePromise<PostPropertyImportResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/Property/Import',
    headers: {
      Authorization: data.authorization,
    },
    formData: data.formData,
    mediaType: 'multipart/form-data',
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.requestBody
 * @returns unknown Success
 * @throws ApiError
 */
export const postPropertyDeleteMulti = (
  data: PostPropertyDeleteMultiData,
): CancelablePromise<PostPropertyDeleteMultiResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/Property/DeleteMulti',
    headers: {
      Authorization: data.authorization,
    },
    body: data.requestBody,
    mediaType: 'application/json',
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.requestBody
 * @returns unknown Success
 * @throws ApiError
 */
export const postPropertyActiveMulti = (
  data: PostPropertyActiveMultiData,
): CancelablePromise<PostPropertyActiveMultiResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/Property/ActiveMulti',
    headers: {
      Authorization: data.authorization,
    },
    body: data.requestBody,
    mediaType: 'application/json',
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.requestBody
 * @returns unknown Success
 * @throws ApiError
 */
export const postPropertyInActiveMulti = (
  data: PostPropertyInActiveMultiData,
): CancelablePromise<PostPropertyInActiveMultiResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/Property/InActiveMulti',
    headers: {
      Authorization: data.authorization,
    },
    body: data.requestBody,
    mediaType: 'application/json',
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.requestBody
 * @returns unknown Success
 * @throws ApiError
 */
export const postPropertyGetPropertyLogByQuery = (
  data: PostPropertyGetPropertyLogByQueryData,
): CancelablePromise<PostPropertyGetPropertyLogByQueryResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/Property/GetPropertyLogByQuery',
    headers: {
      Authorization: data.authorization,
    },
    body: data.requestBody,
    mediaType: 'application/json',
  });
};

/**
 * @returns unknown Success
 * @throws ApiError
 */
export const postPropertyUpdateStatus = (): CancelablePromise<PostPropertyUpdateStatusResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/Property/UpdateStatus',
  });
};

/**
 * @returns unknown Success
 * @throws ApiError
 */
export const postPropertyUpdatePropertyRelatedDatas =
  (): CancelablePromise<PostPropertyUpdatePropertyRelatedDatasResponse> => {
    return __request(OpenAPI, {
      method: 'POST',
      url: '/Property/UpdatePropertyRelatedDatas',
    });
  };

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.id
 * @returns unknown Success
 * @throws ApiError
 */
export const postPropertySyncPropertyRelatedDatas = (
  data: PostPropertySyncPropertyRelatedDatasData,
): CancelablePromise<PostPropertySyncPropertyRelatedDatasResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/Property/SyncPropertyRelatedDatas',
    headers: {
      Authorization: data.authorization,
    },
    query: {
      id: data.id,
    },
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.hide
 * @param data.requestBody
 * @returns unknown Success
 * @throws ApiError
 */
export const postPropertyShowHideMulti = (
  data: PostPropertyShowHideMultiData,
): CancelablePromise<PostPropertyShowHideMultiResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/Property/ShowHideMulti',
    headers: {
      Authorization: data.authorization,
    },
    query: {
      hide: data.hide,
    },
    body: data.requestBody,
    mediaType: 'application/json',
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.requestBody
 * @returns unknown Success
 * @throws ApiError
 */
export const postPropertyUpdateCode = (
  data: PostPropertyUpdateCodeData,
): CancelablePromise<PostPropertyUpdateCodeResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/Property/UpdateCode',
    headers: {
      Authorization: data.authorization,
    },
    body: data.requestBody,
    mediaType: 'application/json',
  });
};

/**
 * @param data The data for the request.
 * @param data.requestBody
 * @returns unknown Success
 * @throws ApiError
 */
export const postEcomReportsReportEcommerce = (
  data: PostEcomReportsReportEcommerceData = {},
): CancelablePromise<PostEcomReportsReportEcommerceResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/Ecom/Reports/ReportEcommerce',
    body: data.requestBody,
    mediaType: 'application/json',
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.requestBody
 * @returns unknown Success
 * @throws ApiError
 */
export const postEcomReportsReportListingArea = (
  data: PostEcomReportsReportListingAreaData,
): CancelablePromise<PostEcomReportsReportListingAreaResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/Ecom/Reports/ReportListingArea',
    headers: {
      Authorization: data.authorization,
    },
    body: data.requestBody,
    mediaType: 'application/json',
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.requestBody
 * @returns unknown Success
 * @throws ApiError
 */
export const postEcomReportsReportListingForType = (
  data: PostEcomReportsReportListingForTypeData,
): CancelablePromise<PostEcomReportsReportListingForTypeResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/Ecom/Reports/ReportListingForType',
    headers: {
      Authorization: data.authorization,
    },
    body: data.requestBody,
    mediaType: 'application/json',
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.requestBody
 * @returns unknown Success
 * @throws ApiError
 */
export const postEcomReportsReportListingForProject = (
  data: PostEcomReportsReportListingForProjectData,
): CancelablePromise<PostEcomReportsReportListingForProjectResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/Ecom/Reports/ReportListingForProject',
    headers: {
      Authorization: data.authorization,
    },
    body: data.requestBody,
    mediaType: 'application/json',
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.requestBody
 * @returns unknown Success
 * @throws ApiError
 */
export const postEcomReportsReportListingForCategory = (
  data: PostEcomReportsReportListingForCategoryData,
): CancelablePromise<PostEcomReportsReportListingForCategoryResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/Ecom/Reports/ReportListingForCategory',
    headers: {
      Authorization: data.authorization,
    },
    body: data.requestBody,
    mediaType: 'application/json',
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.requestBody
 * @returns unknown Success
 * @throws ApiError
 */
export const postEcomReportsReportListingForCategoryEveryMonth = (
  data: PostEcomReportsReportListingForCategoryEveryMonthData,
): CancelablePromise<PostEcomReportsReportListingForCategoryEveryMonthResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/Ecom/Reports/ReportListingForCategoryEveryMonth',
    headers: {
      Authorization: data.authorization,
    },
    body: data.requestBody,
    mediaType: 'application/json',
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.requestBody
 * @returns unknown Success
 * @throws ApiError
 */
export const postEcomReportsReportListingAveragePrice = (
  data: PostEcomReportsReportListingAveragePriceData,
): CancelablePromise<PostEcomReportsReportListingAveragePriceResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/Ecom/Reports/ReportListingAveragePrice',
    headers: {
      Authorization: data.authorization,
    },
    body: data.requestBody,
    mediaType: 'application/json',
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.requestBody
 * @returns unknown Success
 * @throws ApiError
 */
export const postEcomReportsReportGetTopListing = (
  data: PostEcomReportsReportGetTopListingData,
): CancelablePromise<PostEcomReportsReportGetTopListingResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/Ecom/Reports/ReportGetTopListing',
    headers: {
      Authorization: data.authorization,
    },
    body: data.requestBody,
    mediaType: 'application/json',
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.requestBody
 * @returns unknown Success
 * @throws ApiError
 */
export const postEcomReportsReportListingAreaAveragePrice = (
  data: PostEcomReportsReportListingAreaAveragePriceData,
): CancelablePromise<PostEcomReportsReportListingAreaAveragePriceResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/Ecom/Reports/ReportListingAreaAveragePrice',
    headers: {
      Authorization: data.authorization,
    },
    body: data.requestBody,
    mediaType: 'application/json',
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.requestBody
 * @returns unknown Success
 * @throws ApiError
 */
export const postEcomReportsExportListingArea = (
  data: PostEcomReportsExportListingAreaData,
): CancelablePromise<PostEcomReportsExportListingAreaResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/Ecom/Reports/ExportListingArea',
    headers: {
      Authorization: data.authorization,
    },
    body: data.requestBody,
    mediaType: 'application/json',
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.requestBody
 * @returns unknown Success
 * @throws ApiError
 */
export const postEcomReportsExportListingAreaAveragePrice = (
  data: PostEcomReportsExportListingAreaAveragePriceData,
): CancelablePromise<PostEcomReportsExportListingAreaAveragePriceResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/Ecom/Reports/ExportListingAreaAveragePrice',
    headers: {
      Authorization: data.authorization,
    },
    body: data.requestBody,
    mediaType: 'application/json',
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.formData
 * @returns unknown Success
 * @throws ApiError
 */
export const postUploadInit = (
  data: PostUploadInitData,
): CancelablePromise<PostUploadInitResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/Upload/Init',
    headers: {
      Authorization: data.authorization,
    },
    formData: data.formData,
    mediaType: 'multipart/form-data',
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.url
 * @returns unknown Success
 * @throws ApiError
 */
export const postUploadInit2 = (
  data: PostUploadInit2Data,
): CancelablePromise<PostUploadInit2Response> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/Upload/Init2',
    headers: {
      Authorization: data.authorization,
    },
    query: {
      url: data.url,
    },
  });
};

/**
 * @returns unknown Success
 * @throws ApiError
 */
export const postUploadUploadImage = (): CancelablePromise<PostUploadUploadImageResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/Upload/UploadImage',
  });
};

/**
 * @param data The data for the request.
 * @param data.id
 * @returns unknown Success
 * @throws ApiError
 */
export const getUploadGetDocumentFile = (
  data: GetUploadGetDocumentFileData = {},
): CancelablePromise<GetUploadGetDocumentFileResponse> => {
  return __request(OpenAPI, {
    method: 'GET',
    url: '/Upload/GetDocumentFile',
    query: {
      id: data.id,
    },
  });
};

/**
 * @returns unknown Success
 * @throws ApiError
 */
export const postUploadUploadImageListing =
  (): CancelablePromise<PostUploadUploadImageListingResponse> => {
    return __request(OpenAPI, {
      method: 'POST',
      url: '/Upload/UploadImageListing',
    });
  };

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @returns unknown Success
 * @throws ApiError
 */
export const postUploadUploadImageProject = (
  data: PostUploadUploadImageProjectData,
): CancelablePromise<PostUploadUploadImageProjectResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/Upload/UploadImageProject',
    headers: {
      Authorization: data.authorization,
    },
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @returns unknown Success
 * @throws ApiError
 */
export const postUploadUploadImageProjectLogo = (
  data: PostUploadUploadImageProjectLogoData,
): CancelablePromise<PostUploadUploadImageProjectLogoResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/Upload/UploadImageProjectLogo',
    headers: {
      Authorization: data.authorization,
    },
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @returns unknown Success
 * @throws ApiError
 */
export const postUploadUploadImageInquiry = (
  data: PostUploadUploadImageInquiryData,
): CancelablePromise<PostUploadUploadImageInquiryResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/Upload/UploadImageInquiry',
    headers: {
      Authorization: data.authorization,
    },
  });
};

/**
 * @param data The data for the request.
 * @param data.requestBody
 * @returns unknown Success
 * @throws ApiError
 */
export const postEcomEcomNewHomeGetAllLandingPage = (
  data:  any,
): CancelablePromise<PostEcomEcomProjectGetListProjectResponse> => {

  return __request(OpenAPI, {
    method: 'GET',
    url: `/EcomNewHomes/GetAllLandingPage`,
  
  });
};

/**
 *  (Cần token trong request này)
 * @param data The data for the request.
 * @param data.authorization Bearer {token}
 * @param data.requestBody
 * @returns unknown Success
 * @throws ApiError
 */
export const postEcomListingFavoriteNewHome = (
  data: any,
): CancelablePromise<PostEcomListingFavoriteFavoriteResponse> => {
  return __request(OpenAPI, {
    method: 'POST',
    url: '/EcomNewHomes/Favorite',
    headers: {
      Authorization: data.authorization,
    },
    body: data.requestBody,
    mediaType: 'application/json',
  });
};